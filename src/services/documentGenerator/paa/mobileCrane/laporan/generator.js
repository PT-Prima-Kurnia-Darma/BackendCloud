'use strict';

const PizZip = require('pizzip');
const Docxtemplater = require('docxtemplater');
const {
    storage,
    BUCKET_NAME
} = require('../../../../../utils/storage');

// Helper untuk mengubah nilai boolean menjadi tanda centang '√' atau string kosong
const getCheckmark = (status) => (status === true ? '√' : '');
const getOppositeCheckmark = (status) => (status === false ? '√' : '');
const getResultText = (item) => (item?.result || '');

const createLaporanMobileCrane = async (data) => {
    const templatePath = 'paa/mobileCrane/laporanMobileCrane.docx';

    let content;
    try {
        [content] = await storage.bucket(BUCKET_NAME).file(templatePath).download();
    } catch (error) {
        console.error(`Gagal mengunduh template dari GCS: gs://${BUCKET_NAME}/${templatePath}`, error);
        throw new Error('Template dokumen tidak dapat diakses.');
    }

    const zip = new PizZip(content);
    const doc = new Docxtemplater(zip, {
        paragraphLoop: true,
        linebreaks: true,
        nullGetter: () => "" // Mengganti nilai null/undefined menjadi string kosong
    });

    // Dekonstruksi data untuk kemudahan akses dan menghindari error
    const g = data.generalData || {};
    const t = data.technicalData || {};
    const i = data.inspectionAndTesting || {};

    const renderData = {
        // I. DATA UMUM
        examinationType: data.examinationType,
        inspectionType: data.inspectionType,
        subInspectionType: data.subInspectionType,
        ownerName: g.ownerName,
        ownerAddress: g.ownerAddress,
        userSubcontractorPersonInCharge: g.userSubcontractorPersonInCharge,
        userAddress: g.userAddress,
        unitLocation: g.unitLocation,
        operatorName: g.operatorName,
        equipmentType: data.equipmentType,
        manufacturer: g.manufacturer,
        brandType: g.brandType,
        locationAndYearOfManufacture: g.locationAndYearOfManufacture,
        serialNumberUnitNumber: g.serialNumberUnitNumber,
        capacityWorkingLoad: g.capacityWorkingLoad,
        intendedUse: g.intendedUse,
        usagePermitNumber: g.usagePermitNumber,
        operatorCertificate: g.operatorCertificate,
        equipmentHistory: g.equipmentHistory,
        inspectionDate: g.inspectionDate,

        // II. DATA TEKNIK
        maximumWorkingLoadCapacity: t.maximumWorkingLoadCapacity,
        boomLength: t.boomLength,
        maximumJibLength: t.maximumJibLength,
        maximumJibWorkingLoad: t.maximumJibWorkingLoad,
        maxBoomJibLength: t.maxBoomJibLength,
        craneWeight: t.craneWeight,
        maxLiftingHeight: t.maxLiftingHeight,
        boomWorkingAngle: t.boomWorkingAngle,
        engineNumber: t.engineNumber,
        type: t.type,
        numberOfCylinders: t.numberOfCylinders,
        netPower: t.netPower,
        brandYearOfManufacture: t.brandYearOfManufacture,
        mainHookType: t.mainHookType,
        mainHookCapacity: t.mainHookCapacity,
        mainHookMaterial: t.mainHookMaterial,
        mainHookSerialNumber: t.mainHookSerialNumber,
        auxiliaryHookType: t.auxiliaryHookType,
        auxiliaryHookCapacity: t.auxiliaryHookCapacity,
        auxiliaryHookMaterial: t.auxiliaryHookMaterial,
        auxiliaryHookSerialNumber: t.auxiliaryHookSerialNumber,
        wireRopeMainLoadHoistDrumDiameter: t.wireRopeMainLoadHoistDrumDiameter,
        wireRopeMainLoadHoistDrumType: t.wireRopeMainLoadHoistDrumType,
        wireRopeMainLoadHoistDrumConstruction: t.wireRopeMainLoadHoistDrumConstruction,
        wireRopeMainLoadHoistDrumBreakingStrength: t.wireRopeMainLoadHoistDrumBreakingStrength,
        wireRopeMainLoadHoistDrumLength: t.wireRopeMainLoadHoistDrumLength,
        wireRopeAuxiliaryLoadHoistDrumDiameter: t.wireRopeAuxiliaryLoadHoistDrumDiameter,
        wireRopeAuxiliaryLoadHoistDrumType: t.wireRopeAuxiliaryLoadHoistDrumType,
        wireRopeAuxiliaryLoadHoistDrumConstruction: t.wireRopeAuxiliaryLoadHoistDrumConstruction,
        wireRopeAuxiliaryLoadHoistDrumLength: t.wireRopeAuxiliaryLoadHoistDrumLength,
        wireRopeAuxiliaryLoadHoistDrumBreakingStrength: t.wireRopeAuxiliaryLoadHoistDrumBreakingStrength,
        wireRopeBoomHoistDrumDiameter: t.wireRopeBoomHoistDrumDiameter,
        wireRopeBoomHoistDrumType: t.wireRopeBoomHoistDrumType,
        wireRopeBoomHoistDrumConstruction: t.wireRopeBoomHoistDrumConstruction,
        wireRopeBoomHoistDrumLength: t.wireRopeBoomHoistDrumLength,
        wireRopeBoomHoistDrumBreakingStrength: t.wireRopeBoomHoistDrumBreakingStrength,

        // III. PEMERIKSAAN VISUAL (Struktur Datar)
        foundationAndBoltsCorrosionMemenuhi: getCheckmark(i.visualFoundationAndBolts?.corrosion?.status),
        foundationAndBoltsCorrosionTidakMemenuhi: getOppositeCheckmark(i.visualFoundationAndBolts?.corrosion?.status),
        foundationAndBoltsCorrosionResult: getResultText(i.visualFoundationAndBolts?.corrosion),
        foundationAndBoltsCracksMemenuhi: getCheckmark(i.visualFoundationAndBolts?.cracks?.status),
        foundationAndBoltsCracksTidakMemenuhi: getOppositeCheckmark(i.visualFoundationAndBolts?.cracks?.status),
        foundationAndBoltsCracksResult: getResultText(i.visualFoundationAndBolts?.cracks),
        foundationAndBoltsDeformationMemenuhi: getCheckmark(i.visualFoundationAndBolts?.deformation?.status),
        foundationAndBoltsDeformationTidakMemenuhi: getOppositeCheckmark(i.visualFoundationAndBolts?.deformation?.status),
        foundationAndBoltsDeformationResult: getResultText(i.visualFoundationAndBolts?.deformation),
        foundationAndBoltsTightnessMemenuhi: getCheckmark(i.visualFoundationAndBolts?.tightness?.status),
        foundationAndBoltsTightnessTidakMemenuhi: getOppositeCheckmark(i.visualFoundationAndBolts?.tightness?.status),
        foundationAndBoltsTightnessResult: getResultText(i.visualFoundationAndBolts?.tightness),

        frameColumnsOnFoundationCorrosionMemenuhi: getCheckmark(i.visualFrameColumnsOnFoundation?.corrosion?.status),
        frameColumnsOnFoundationCorrosionTidakMemenuhi: getOppositeCheckmark(i.visualFrameColumnsOnFoundation?.corrosion?.status),
        frameColumnsOnFoundationCorrosionResult: getResultText(i.visualFrameColumnsOnFoundation?.corrosion),
        frameColumnsOnFoundationCracksMemenuhi: getCheckmark(i.visualFrameColumnsOnFoundation?.cracks?.status),
        frameColumnsOnFoundationCracksTidakMemenuhi: getOppositeCheckmark(i.visualFrameColumnsOnFoundation?.cracks?.status),
        frameColumnsOnFoundationCracksResult: getResultText(i.visualFrameColumnsOnFoundation?.cracks),
        frameColumnsOnFoundationDeformationMemenuhi: getCheckmark(i.visualFrameColumnsOnFoundation?.deformation?.status),
        frameColumnsOnFoundationDeformationTidakMemenuhi: getOppositeCheckmark(i.visualFrameColumnsOnFoundation?.deformation?.status),
        frameColumnsOnFoundationDeformationResult: getResultText(i.visualFrameColumnsOnFoundation?.deformation),
        frameColumnsOnFoundationFasteningMemenuhi: getCheckmark(i.visualFrameColumnsOnFoundation?.fastening?.status),
        frameColumnsOnFoundationFasteningTidakMemenuhi: getOppositeCheckmark(i.visualFrameColumnsOnFoundation?.fastening?.status),
        frameColumnsOnFoundationFasteningResult: getResultText(i.visualFrameColumnsOnFoundation?.fastening),
        frameColumnsOnFoundationTransverseReinforcementMemenuhi: getCheckmark(i.visualFrameColumnsOnFoundation?.transverseReinforcement?.status),
        frameColumnsOnFoundationTransverseReinforcementTidakMemenuhi: getOppositeCheckmark(i.visualFrameColumnsOnFoundation?.transverseReinforcement?.status),
        frameColumnsOnFoundationTransverseReinforcementResult: getResultText(i.visualFrameColumnsOnFoundation?.transverseReinforcement),
        frameColumnsOnFoundationDiagonalReinforcementMemenuhi: getCheckmark(i.visualFrameColumnsOnFoundation?.diagonalReinforcement?.status),
        frameColumnsOnFoundationDiagonalReinforcementTidakMemenuhi: getOppositeCheckmark(i.visualFrameColumnsOnFoundation?.diagonalReinforcement?.status),
        frameColumnsOnFoundationDiagonalReinforcementResult: getResultText(i.visualFrameColumnsOnFoundation?.diagonalReinforcement),

        ladderCorrosionMemenuhi: getCheckmark(i.visualLadder?.corrosion?.status),
        ladderCorrosionTidakMemenuhi: getOppositeCheckmark(i.visualLadder?.corrosion?.status),
        ladderCorrosionResult: getResultText(i.visualLadder?.corrosion),
        ladderCracksMemenuhi: getCheckmark(i.visualLadder?.cracks?.status),
        ladderCracksTidakMemenuhi: getOppositeCheckmark(i.visualLadder?.cracks?.status),
        ladderCracksResult: getResultText(i.visualLadder?.cracks),
        ladderDeformationMemenuhi: getCheckmark(i.visualLadder?.deformation?.status),
        ladderDeformationTidakMemenuhi: getOppositeCheckmark(i.visualLadder?.deformation?.status),
        ladderDeformationResult: getResultText(i.visualLadder?.deformation),
        ladderFasteningMemenuhi: getCheckmark(i.visualLadder?.fastening?.status),
        ladderFasteningTidakMemenuhi: getOppositeCheckmark(i.visualLadder?.fastening?.status),
        ladderFasteningResult: getResultText(i.visualLadder?.fastening),

        workingPlatformCorrosionMemenuhi: getCheckmark(i.visualWorkingPlatform?.corrosion?.status),
        workingPlatformCorrosionTidakMemenuhi: getOppositeCheckmark(i.visualWorkingPlatform?.corrosion?.status),
        workingPlatformCorrosionResult: getResultText(i.visualWorkingPlatform?.corrosion),
        workingPlatformCracksMemenuhi: getCheckmark(i.visualWorkingPlatform?.cracks?.status),
        workingPlatformCracksTidakMemenuhi: getOppositeCheckmark(i.visualWorkingPlatform?.cracks?.status),
        workingPlatformCracksResult: getResultText(i.visualWorkingPlatform?.cracks),
        workingPlatformDeformationMemenuhi: getCheckmark(i.visualWorkingPlatform?.deformation?.status),
        workingPlatformDeformationTidakMemenuhi: getOppositeCheckmark(i.visualWorkingPlatform?.deformation?.status),
        workingPlatformDeformationResult: getResultText(i.visualWorkingPlatform?.deformation),
        workingPlatformFasteningMemenuhi: getCheckmark(i.visualWorkingPlatform?.fastening?.status),
        workingPlatformFasteningTidakMemenuhi: getOppositeCheckmark(i.visualWorkingPlatform?.fastening?.status),
        workingPlatformFasteningResult: getResultText(i.visualWorkingPlatform?.fastening),

        outriggersOutriggerArmHousingMemenuhi: getCheckmark(i.visualOutriggers?.outriggerArmHousing?.status),
        outriggersOutriggerArmHousingTidakMemenuhi: getOppositeCheckmark(i.visualOutriggers?.outriggerArmHousing?.status),
        outriggersOutriggerArmHousingResult: getResultText(i.visualOutriggers?.outriggerArmHousing),
        outriggersOutriggerArmsMemenuhi: getCheckmark(i.visualOutriggers?.outriggerArms?.status),
        outriggersOutriggerArmsTidakMemenuhi: getOppositeCheckmark(i.visualOutriggers?.outriggerArms?.status),
        outriggersOutriggerArmsResult: getResultText(i.visualOutriggers?.outriggerArms),
        outriggersJackMemenuhi: getCheckmark(i.visualOutriggers?.jack?.status),
        outriggersJackTidakMemenuhi: getOppositeCheckmark(i.visualOutriggers?.jack?.status),
        outriggersJackResult: getResultText(i.visualOutriggers?.jack),
        outriggersOutriggerPadsMemenuhi: getCheckmark(i.visualOutriggers?.outriggerPads?.status),
        outriggersOutriggerPadsTidakMemenuhi: getOppositeCheckmark(i.visualOutriggers?.outriggerPads?.status),
        outriggersOutriggerPadsResult: getResultText(i.visualOutriggers?.outriggerPads),
        outriggersHousingConnectionToChassisMemenuhi: getCheckmark(i.visualOutriggers?.housingConnectionToChassis?.status),
        outriggersHousingConnectionToChassisTidakMemenuhi: getOppositeCheckmark(i.visualOutriggers?.housingConnectionToChassis?.status),
        outriggersHousingConnectionToChassisResult: getResultText(i.visualOutriggers?.housingConnectionToChassis),
        outriggersOutriggerSafetyLocksMemenuhi: getCheckmark(i.visualOutriggers?.outriggerSafetyLocks?.status),
        outriggersOutriggerSafetyLocksTidakMemenuhi: getOppositeCheckmark(i.visualOutriggers?.outriggerSafetyLocks?.status),
        outriggersOutriggerSafetyLocksResult: getResultText(i.visualOutriggers?.outriggerSafetyLocks),


        turntableSlewingRollerBearingMemenuhi: getCheckmark(i.visualTurntable?.slewingRollerBearing?.status),
        turntableSlewingRollerBearingTidakMemenuhi: getOppositeCheckmark(i.visualTurntable?.slewingRollerBearing?.status),
        turntableSlewingRollerBearingResult: getResultText(i.visualTurntable?.slewingRollerBearing),
        turntableBrakeHousingMemenuhi: getCheckmark(i.visualTurntable?.brakeHousing?.status),
        turntableBrakeHousingTidakMemenuhi: getOppositeCheckmark(i.visualTurntable?.brakeHousing?.status),
        turntableBrakeHousingResult: getResultText(i.visualTurntable?.brakeHousing),
        turntableBrakeLiningsAndShoesMemenuhi: getCheckmark(i.visualTurntable?.brakeLiningsAndShoes?.status),
        turntableBrakeLiningsAndShoesTidakMemenuhi: getOppositeCheckmark(i.visualTurntable?.brakeLiningsAndShoes?.status),
        turntableBrakeLiningsAndShoesResult: getResultText(i.visualTurntable?.brakeLiningsAndShoes),
        turntableDrumSurfaceMemenuhi: getCheckmark(i.visualTurntable?.drumSurface?.status),
        turntableDrumSurfaceTidakMemenuhi: getOppositeCheckmark(i.visualTurntable?.drumSurface?.status),
        turntableDrumSurfaceResult: getResultText(i.visualTurntable?.drumSurface),
        turntablePressureCylinderMemenuhi: getCheckmark(i.visualTurntable?.pressureCylinder?.status),
        turntablePressureCylinderTidakMemenuhi: getOppositeCheckmark(i.visualTurntable?.pressureCylinder?.status),
        turntablePressureCylinderResult: getResultText(i.visualTurntable?.pressureCylinder),
        turntableDrumAxleMemenuhi: getCheckmark(i.visualTurntable?.drumAxle?.status),
        turntableDrumAxleTidakMemenuhi: getOppositeCheckmark(i.visualTurntable?.drumAxle?.status),
        turntableDrumAxleResult: getResultText(i.visualTurntable?.drumAxle),
        turntableLeversPinsBoltsMemenuhi: getCheckmark(i.visualTurntable?.leversPinsBolts?.status),
        turntableLeversPinsBoltsTidakMemenuhi: getOppositeCheckmark(i.visualTurntable?.leversPinsBolts?.status),
        turntableLeversPinsBoltsResult: getResultText(i.visualTurntable?.leversPinsBolts),
        turntableGuardMemenuhi: getCheckmark(i.visualTurntable?.guard?.status),
        turntableGuardTidakMemenuhi: getOppositeCheckmark(i.visualTurntable?.guard?.status),
        turntableGuardResult: getResultText(i.visualTurntable?.guard),

        latticeBoomMainBoomMemenuhi: getCheckmark(i.visualLatticeBoom?.mainBoom?.status),
        latticeBoomMainBoomTidakMemenuhi: getOppositeCheckmark(i.visualLatticeBoom?.mainBoom?.status),
        latticeBoomMainBoomResult: getResultText(i.visualLatticeBoom?.mainBoom),
        latticeBoomBoomSectionMemenuhi: getCheckmark(i.visualLatticeBoom?.boomSection?.status),
        latticeBoomBoomSectionTidakMemenuhi: getOppositeCheckmark(i.visualLatticeBoom?.boomSection?.status),
        latticeBoomBoomSectionResult: getResultText(i.visualLatticeBoom?.boomSection),
        latticeBoomTopPulleyMemenuhi: getCheckmark(i.visualLatticeBoom?.topPulley?.status),
        latticeBoomTopPulleyTidakMemenuhi: getOppositeCheckmark(i.visualLatticeBoom?.topPulley?.status),
        latticeBoomTopPulleyResult: getResultText(i.visualLatticeBoom?.topPulley),
        latticeBoomPulleyGuardMemenuhi: getCheckmark(i.visualLatticeBoom?.pulleyGuard?.status),
        latticeBoomPulleyGuardTidakMemenuhi: getOppositeCheckmark(i.visualLatticeBoom?.pulleyGuard?.status),
        latticeBoomPulleyGuardResult: getResultText(i.visualLatticeBoom?.pulleyGuard),
        latticeBoomWireRopeGuardMemenuhi: getCheckmark(i.visualLatticeBoom?.wireRopeGuard?.status),
        latticeBoomWireRopeGuardTidakMemenuhi: getOppositeCheckmark(i.visualLatticeBoom?.wireRopeGuard?.status),
        latticeBoomWireRopeGuardResult: getResultText(i.visualLatticeBoom?.wireRopeGuard),
        latticeBoomPulleyGrooveLipMemenuhi: getCheckmark(i.visualLatticeBoom?.pulleyGrooveLip?.status),
        latticeBoomPulleyGrooveLipTidakMemenuhi: getOppositeCheckmark(i.visualLatticeBoom?.pulleyGrooveLip?.status),
        latticeBoomPulleyGrooveLipResult: getResultText(i.visualLatticeBoom?.pulleyGrooveLip),
        latticeBoomPivotPinMemenuhi: getCheckmark(i.visualLatticeBoom?.pivotPin?.status),
        latticeBoomPivotPinTidakMemenuhi: getOppositeCheckmark(i.visualLatticeBoom?.pivotPin?.status),
        latticeBoomPivotPinResult: getResultText(i.visualLatticeBoom?.pivotPin),
        latticeBoomWireRopeGuidePulleyMemenuhi: getCheckmark(i.visualLatticeBoom?.wireRopeGuidePulley?.status),
        latticeBoomWireRopeGuidePulleyTidakMemenuhi: getOppositeCheckmark(i.visualLatticeBoom?.wireRopeGuidePulley?.status),
        latticeBoomWireRopeGuidePulleyResult: getResultText(i.visualLatticeBoom?.wireRopeGuidePulley),

        steeringMainClutchMemenuhi: getCheckmark(i.visualSteering?.mainClutch?.status),
        steeringMainClutchTidakMemenuhi: getOppositeCheckmark(i.visualSteering?.mainClutch?.status),
        steeringMainClutchResult: getResultText(i.visualSteering?.mainClutch),
        transmissionTransmissionMemenuhi: getCheckmark(i.visualSteering?.transmission?.status),
        transmissionTransmissionTidakMemenuhi: getOppositeCheckmark(i.visualSteering?.transmission?.status),
        transmissionTransmissionResult: getResultText(i.visualSteering?.transmission),
        steeringFrontWheelMemenuhi: getCheckmark(i.visualSteering?.frontWheel?.status),
        steeringFrontWheelTidakMemenuhi: getOppositeCheckmark(i.visualSteering?.frontWheel?.status),
        steeringFrontWheelResult: getResultText(i.visualSteering?.frontWheel),
        steeringMiddleWheelMemenuhi: getCheckmark(i.visualSteering?.middleWheel?.status),
        steeringMiddleWheelTidakMemenuhi: getOppositeCheckmark(i.visualSteering?.middleWheel?.status),
        steeringMiddleWheelResult: getResultText(i.visualSteering?.middleWheel),
        steeringRearWheelMemenuhi: getCheckmark(i.visualSteering?.rearWheel?.status),
        steeringRearWheelTidakMemenuhi: getOppositeCheckmark(i.visualSteering?.rearWheel?.status),
        steeringRearWheelResult: getResultText(i.visualSteering?.rearWheel),

        brakeServiceBrakeMemenuhi: getCheckmark(i.visualBrake?.serviceBrake?.status),
        brakeServiceBrakeTidakMemenuhi: getOppositeCheckmark(i.visualBrake?.serviceBrake?.status),
        brakeServiceBrakeResult: getResultText(i.visualBrake?.serviceBrake),
        brakeParkingBrakeMemenuhi: getCheckmark(i.visualBrake?.parkingBrake?.status),
        brakeParkingBrakeTidakMemenuhi: getOppositeCheckmark(i.visualBrake?.parkingBrake?.status),
        brakeParkingBrakeResult: getResultText(i.visualBrake?.parkingBrake),
        brakeBrakeHousingMemenuhi: getCheckmark(i.visualBrake?.brakeHousing?.status),
        brakeBrakeHousingTidakMemenuhi: getOppositeCheckmark(i.visualBrake?.brakeHousing?.status),
        brakeBrakeHousingResult: getResultText(i.visualBrake?.brakeHousing),
        brakeBrakeLiningsAndShoesMemenuhi: getCheckmark(i.visualBrake?.brakeLiningsAndShoes?.status),
        brakeBrakeLiningsAndShoesTidakMemenuhi: getOppositeCheckmark(i.visualBrake?.brakeLiningsAndShoes?.status),
        brakeBrakeLiningsAndShoesResult: getResultText(i.visualBrake?.brakeLiningsAndShoes),
        brakeDrumSurfaceMemenuhi: getCheckmark(i.visualBrake?.drumSurface?.status),
        brakeDrumSurfaceTidakMemenuhi: getOppositeCheckmark(i.visualBrake?.drumSurface?.status),
        brakeDrumSurfaceResult: getResultText(i.visualBrake?.drumSurface),
        brakeLeversPinsBoltsMemenuhi: getCheckmark(i.visualBrake?.leversPinsBolts?.status),
        brakeLeversPinsBoltsTidakMemenuhi: getOppositeCheckmark(i.visualBrake?.leversPinsBolts?.status),
        brakeLeversPinsBoltsResult: getResultText(i.visualBrake?.leversPinsBolts),
        brakeGuardMemenuhi: getCheckmark(i.visualBrake?.guard?.status),
        brakeGuardTidakMemenuhi: getOppositeCheckmark(i.visualBrake?.guard?.status),
        brakeGuardResult: getResultText(i.visualBrake?.guard),

        travelDrumClutchHousingMemenuhi: getCheckmark(i.visualTravelDrum?.clutchHousing?.status),
        travelDrumClutchHousingTidakMemenuhi: getOppositeCheckmark(i.visualTravelDrum?.clutchHousing?.status),
        travelDrumClutchHousingResult: getResultText(i.visualTravelDrum?.clutchHousing),
        travelDrumClutchLiningMemenuhi: getCheckmark(i.visualTravelDrum?.clutchLining?.status),
        travelDrumClutchLiningTidakMemenuhi: getOppositeCheckmark(i.visualTravelDrum?.clutchLining?.status),
        travelDrumClutchLiningResult: getResultText(i.visualTravelDrum?.clutchLining),
        travelDrumClutchDrumSurfaceMemenuhi: getCheckmark(i.visualTravelDrum?.clutchDrumSurface?.status),
        travelDrumClutchDrumSurfaceTidakMemenuhi: getOppositeCheckmark(i.visualTravelDrum?.clutchDrumSurface?.status),
        travelDrumClutchDrumSurfaceResult: getResultText(i.visualTravelDrum?.clutchDrumSurface),
        travelDrumLeversPinsBoltsMemenuhi: getCheckmark(i.visualTravelDrum?.leversPinsBolts?.status),
        travelDrumLeversPinsBoltsTidakMemenuhi: getOppositeCheckmark(i.visualTravelDrum?.leversPinsBolts?.status),
        travelDrumLeversPinsBoltsResult: getResultText(i.visualTravelDrum?.leversPinsBolts),
        travelDrumGuardMemenuhi: getCheckmark(i.visualTravelDrum?.guard?.status),
        travelDrumGuardTidakMemenuhi: getOppositeCheckmark(i.visualTravelDrum?.guard?.status),
        travelDrumGuardResult: getResultText(i.visualTravelDrum?.guard),

        mainWinchDrumMountingMemenuhi: getCheckmark(i.visualMainWinch?.drumMounting?.status),
        mainWinchDrumMountingTidakMemenuhi: getOppositeCheckmark(i.visualMainWinch?.drumMounting?.status),
        mainWinchDrumMountingResult: getResultText(i.visualMainWinch?.drumMounting),
        mainWinchWindingDrumSurfaceMemenuhi: getCheckmark(i.visualMainWinch?.windingDrumSurface?.status),
        mainWinchWindingDrumSurfaceTidakMemenuhi: getOppositeCheckmark(i.visualMainWinch?.windingDrumSurface?.status),
        mainWinchWindingDrumSurfaceResult: getResultText(i.visualMainWinch?.windingDrumSurface),
        mainWinchBrakeLiningsAndShoesMemenuhi: getCheckmark(i.visualMainWinch?.brakeLiningsAndShoes?.status),
        mainWinchBrakeLiningsAndShoesTidakMemenuhi: getOppositeCheckmark(i.visualMainWinch?.brakeLiningsAndShoes?.status),
        mainWinchBrakeLiningsAndShoesResult: getResultText(i.visualMainWinch?.brakeLiningsAndShoes),
        mainWinchBrakeDrumSurfaceMemenuhi: getCheckmark(i.visualMainWinch?.brakeDrumSurface?.status),
        mainWinchBrakeDrumSurfaceTidakMemenuhi: getOppositeCheckmark(i.visualMainWinch?.brakeDrumSurface?.status),
        mainWinchBrakeDrumSurfaceResult: getResultText(i.visualMainWinch?.brakeDrumSurface),
        mainWinchBrakeHousingMemenuhi: getCheckmark(i.visualMainWinch?.brakeHousing?.status),
        mainWinchBrakeHousingTidakMemenuhi: getOppositeCheckmark(i.visualMainWinch?.brakeHousing?.status),
        mainWinchBrakeHousingResult: getResultText(i.visualMainWinch?.brakeHousing),
        mainWinchClutchLiningsAndShoesMemenuhi: getCheckmark(i.visualMainWinch?.clutchLiningsAndShoes?.status),
        mainWinchClutchLiningsAndShoesTidakMemenuhi: getOppositeCheckmark(i.visualMainWinch?.clutchLiningsAndShoes?.status),
        mainWinchClutchLiningsAndShoesResult: getResultText(i.visualMainWinch?.clutchLiningsAndShoes),
        mainWinchClutchDrumSurfaceMemenuhi: getCheckmark(i.visualMainWinch?.clutchDrumSurface?.status),
        mainWinchClutchDrumSurfaceTidakMemenuhi: getOppositeCheckmark(i.visualMainWinch?.clutchDrumSurface?.status),
        mainWinchClutchDrumSurfaceResult: getResultText(i.visualMainWinch?.clutchDrumSurface),
        mainWinchGrooveMemenuhi: getCheckmark(i.visualMainWinch?.groove?.status),
        mainWinchGrooveTidakMemenuhi: getOppositeCheckmark(i.visualMainWinch?.groove?.status),
        mainWinchGrooveResult: getResultText(i.visualMainWinch?.groove),
        mainWinchGrooveLipMemenuhi: getCheckmark(i.visualMainWinch?.grooveLip?.status),
        mainWinchGrooveLipTidakMemenuhi: getOppositeCheckmark(i.visualMainWinch?.grooveLip?.status),
        mainWinchGrooveLipResult: getResultText(i.visualMainWinch?.grooveLip),
        mainWinchFlangesMemenuhi: getCheckmark(i.visualMainWinch?.flanges?.status),
        mainWinchFlangesTidakMemenuhi: getOppositeCheckmark(i.visualMainWinch?.flanges?.status),
        mainWinchFlangesResult: getResultText(i.visualMainWinch?.flanges),
        mainWinchBrakeActuatorLeversPinsAndBoltsMemenuhi: getCheckmark(i.visualMainWinch?.brakeActuatorLeversPinsAndBolts?.status),
        mainWinchBrakeActuatorLeversPinsAndBoltsTidakMemenuhi: getOppositeCheckmark(i.visualMainWinch?.brakeActuatorLeversPinsAndBolts?.status),
        mainWinchBrakeActuatorLeversPinsAndBoltsResult: getResultText(i.visualMainWinch?.brakeActuatorLeversPinsAndBolts),

        auxiliaryWinchDrumMountingMemenuhi: getCheckmark(i.visualAuxiliaryWinch?.drumMounting?.status),
        auxiliaryWinchDrumMountingTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWinch?.drumMounting?.status),
        auxiliaryWinchDrumMountingResult: getResultText(i.visualAuxiliaryWinch?.drumMounting),
        auxiliaryWinchWindingDrumSurfaceMemenuhi: getCheckmark(i.visualAuxiliaryWinch?.windingDrumSurface?.status),
        auxiliaryWinchWindingDrumSurfaceTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWinch?.windingDrumSurface?.status),
        auxiliaryWinchWindingDrumSurfaceResult: getResultText(i.visualAuxiliaryWinch?.windingDrumSurface),
        auxiliaryWinchBrakeLiningsAndShoesMemenuhi: getCheckmark(i.visualAuxiliaryWinch?.brakeLiningsAndShoes?.status),
        auxiliaryWinchBrakeLiningsAndShoesTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWinch?.brakeLiningsAndShoes?.status),
        auxiliaryWinchBrakeLiningsAndShoesResult: getResultText(i.visualAuxiliaryWinch?.brakeLiningsAndShoes),
        auxiliaryWinchBrakeDrumSurfaceMemenuhi: getCheckmark(i.visualAuxiliaryWinch?.brakeDrumSurface?.status),
        auxiliaryWinchBrakeDrumSurfaceTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWinch?.brakeDrumSurface?.status),
        auxiliaryWinchBrakeDrumSurfaceResult: getResultText(i.visualAuxiliaryWinch?.brakeDrumSurface),
        auxiliaryWinchBrakeHousingMemenuhi: getCheckmark(i.visualAuxiliaryWinch?.brakeHousing?.status),
        auxiliaryWinchBrakeHousingTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWinch?.brakeHousing?.status),
        auxiliaryWinchBrakeHousingResult: getResultText(i.visualAuxiliaryWinch?.brakeHousing),
        auxiliaryWinchClutchLiningsAndShoesMemenuhi: getCheckmark(i.visualAuxiliaryWinch?.clutchLiningsAndShoes?.status),
        auxiliaryWinchClutchLiningsAndShoesTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWinch?.clutchLiningsAndShoes?.status),
        auxiliaryWinchClutchLiningsAndShoesResult: getResultText(i.visualAuxiliaryWinch?.clutchLiningsAndShoes),
        auxiliaryWinchClutchDrumSurfaceMemenuhi: getCheckmark(i.visualAuxiliaryWinch?.clutchDrumSurface?.status),
        auxiliaryWinchClutchDrumSurfaceTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWinch?.clutchDrumSurface?.status),
        auxiliaryWinchClutchDrumSurfaceResult: getResultText(i.visualAuxiliaryWinch?.clutchDrumSurface),
        auxiliaryWinchGrooveMemenuhi: getCheckmark(i.visualAuxiliaryWinch?.groove?.status),
        auxiliaryWinchGrooveTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWinch?.groove?.status),
        auxiliaryWinchGrooveResult: getResultText(i.visualAuxiliaryWinch?.groove),
        auxiliaryWinchGrooveLipMemenuhi: getCheckmark(i.visualAuxiliaryWinch?.grooveLip?.status),
        auxiliaryWinchGrooveLipTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWinch?.grooveLip?.status),
        auxiliaryWinchGrooveLipResult: getResultText(i.visualAuxiliaryWinch?.grooveLip),
        auxiliaryWinchFlangesMemenuhi: getCheckmark(i.visualAuxiliaryWinch?.flanges?.status),
        auxiliaryWinchFlangesTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWinch?.flanges?.status),
        auxiliaryWinchFlangesResult: getResultText(i.visualAuxiliaryWinch?.flanges),
        auxiliaryWinchBrakeActuatorLeversPinsAndBoltsMemenuhi: getCheckmark(i.visualAuxiliaryWinch?.brakeActuatorLeversPinsAndBolts?.status),
        auxiliaryWinchBrakeActuatorLeversPinsAndBoltsTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWinch?.brakeActuatorLeversPinsAndBolts?.status),
        auxiliaryWinchBrakeActuatorLeversPinsAndBoltsResult: getResultText(i.visualAuxiliaryWinch?.brakeActuatorLeversPinsAndBolts),

        hoistGearBlockLubricationMemenuhi: getCheckmark(i.visualHoistGearBlock?.lubrication?.status),
        hoistGearBlockLubricationTidakMemenuhi: getOppositeCheckmark(i.visualHoistGearBlock?.lubrication?.status),
        hoistGearBlockLubricationResult: getResultText(i.visualHoistGearBlock?.lubrication),
        hoistGearBlockOilSealMemenuhi: getCheckmark(i.visualHoistGearBlock?.oilSeal?.status),
        hoistGearBlockOilSealTidakMemenuhi: getOppositeCheckmark(i.visualHoistGearBlock?.oilSeal?.status),
        hoistGearBlockOilSealResult: getResultText(i.visualHoistGearBlock?.oilSeal),

        mainPulleyPulleyGrooveMemenuhi: getCheckmark(i.visualMainPulley?.pulleyGroove?.status),
        mainPulleyPulleyGrooveTidakMemenuhi: getOppositeCheckmark(i.visualMainPulley?.pulleyGroove?.status),
        mainPulleyPulleyGrooveResult: getResultText(i.visualMainPulley?.pulleyGroove),
        mainPulleyPulleyGrooveLipMemenuhi: getCheckmark(i.visualMainPulley?.pulleyGrooveLip?.status),
        mainPulleyPulleyGrooveLipTidakMemenuhi: getOppositeCheckmark(i.visualMainPulley?.pulleyGrooveLip?.status),
        mainPulleyPulleyGrooveLipResult: getResultText(i.visualMainPulley?.pulleyGrooveLip),
        mainPulleyPulleyPinMemenuhi: getCheckmark(i.visualMainPulley?.pulleyPin?.status),
        mainPulleyPulleyPinTidakMemenuhi: getOppositeCheckmark(i.visualMainPulley?.pulleyPin?.status),
        mainPulleyPulleyPinResult: getResultText(i.visualMainPulley?.pulleyPin),
        mainPulleyBearingMemenuhi: getCheckmark(i.visualMainPulley?.bearing?.status),
        mainPulleyBearingTidakMemenuhi: getOppositeCheckmark(i.visualMainPulley?.bearing?.status),
        mainPulleyBearingResult: getResultText(i.visualMainPulley?.bearing),
        mainPulleyPulleyGuardMemenuhi: getCheckmark(i.visualMainPulley?.pulleyGuard?.status),
        mainPulleyPulleyGuardTidakMemenuhi: getOppositeCheckmark(i.visualMainPulley?.pulleyGuard?.status),
        mainPulleyPulleyGuardResult: getResultText(i.visualMainPulley?.pulleyGuard),
        mainPulleyWireRopeGuardMemenuhi: getCheckmark(i.visualMainPulley?.wireRopeGuard?.status),
        mainPulleyWireRopeGuardTidakMemenuhi: getOppositeCheckmark(i.visualMainPulley?.wireRopeGuard?.status),
        mainPulleyWireRopeGuardResult: getResultText(i.visualMainPulley?.wireRopeGuard),

        mainHookVisualSwivelNutAndBearingMemenuhi: getCheckmark(i.visualMainHook?.swivelNutAndBearing?.status),
        mainHookVisualSwivelNutAndBearingTidakMemenuhi: getOppositeCheckmark(i.visualMainHook?.swivelNutAndBearing?.status),
        mainHookVisualSwivelNutAndBearingResult: getResultText(i.visualMainHook?.swivelNutAndBearing),
        mainHookVisualTrunnionMemenuhi: getCheckmark(i.visualMainHook?.trunnion?.status),
        mainHookVisualTrunnionTidakMemenuhi: getOppositeCheckmark(i.visualMainHook?.trunnion?.status),
        mainHookVisualTrunnionResult: getResultText(i.visualMainHook?.trunnion),
        mainHookVisualSafetyLatchMemenuhi: getCheckmark(i.visualMainHook?.safetyLatch?.status),
        mainHookVisualSafetyLatchTidakMemenuhi: getOppositeCheckmark(i.visualMainHook?.safetyLatch?.status),
        mainHookVisualSafetyLatchResult: getResultText(i.visualMainHook?.safetyLatch),

        auxiliaryHookVisualFreeFallWeightMemenuhi: getCheckmark(i.visualAuxiliaryHook?.freeFallWeight?.status),
        auxiliaryHookVisualFreeFallWeightTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryHook?.freeFallWeight?.status),
        auxiliaryHookVisualFreeFallWeightResult: getResultText(i.visualAuxiliaryHook?.freeFallWeight),
        auxiliaryHookVisualSwivelNutAndBearingMemenuhi: getCheckmark(i.visualAuxiliaryHook?.swivelNutAndBearing?.status),
        auxiliaryHookVisualSwivelNutAndBearingTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryHook?.swivelNutAndBearing?.status),
        auxiliaryHookVisualSwivelNutAndBearingResult: getResultText(i.visualAuxiliaryHook?.swivelNutAndBearing),
        auxiliaryHookVisualSafetyLatchMemenuhi: getCheckmark(i.visualAuxiliaryHook?.safetyLatch?.status),
        auxiliaryHookVisualSafetyLatchTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryHook?.safetyLatch?.status),
        auxiliaryHookVisualSafetyLatchResult: getResultText(i.visualAuxiliaryHook?.safetyLatch),

        mainWireRopeVisualCorrosionMemenuhi: getCheckmark(i.visualMainWireRope?.corrosion?.status),
        mainWireRopeVisualCorrosionTidakMemenuhi: getOppositeCheckmark(i.visualMainWireRope?.corrosion?.status),
        mainWireRopeVisualCorrosionResult: getResultText(i.visualMainWireRope?.corrosion),
        mainWireRopeVisualWearMemenuhi: getCheckmark(i.visualMainWireRope?.wear?.status),
        mainWireRopeVisualWearTidakMemenuhi: getOppositeCheckmark(i.visualMainWireRope?.wear?.status),
        mainWireRopeVisualWearResult: getResultText(i.visualMainWireRope?.wear),
        mainWireRopeVisualBreakageMemenuhi: getCheckmark(i.visualMainWireRope?.breakage?.status),
        mainWireRopeVisualBreakageTidakMemenuhi: getOppositeCheckmark(i.visualMainWireRope?.breakage?.status),
        mainWireRopeVisualBreakageResult: getResultText(i.visualMainWireRope?.breakage),
        mainWireRopeVisualDeformationMemenuhi: getCheckmark(i.visualMainWireRope?.deformation?.status),
        mainWireRopeVisualDeformationTidakMemenuhi: getOppositeCheckmark(i.visualMainWireRope?.deformation?.status),
        mainWireRopeVisualDeformationResult: getResultText(i.visualMainWireRope?.deformation),

        auxiliaryWireRopeVisualCorrosionMemenuhi: getCheckmark(i.visualAuxiliaryWireRope?.corrosion?.status),
        auxiliaryWireRopeVisualCorrosionTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWireRope?.corrosion?.status),
        auxiliaryWireRopeVisualCorrosionResult: getResultText(i.visualAuxiliaryWireRope?.corrosion),
        auxiliaryWireRopeVisualWearMemenuhi: getCheckmark(i.visualAuxiliaryWireRope?.wear?.status),
        auxiliaryWireRopeVisualWearTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWireRope?.wear?.status),
        auxiliaryWireRopeVisualWearResult: getResultText(i.visualAuxiliaryWireRope?.wear),
        auxiliaryWireRopeVisualBreakageMemenuhi: getCheckmark(i.visualAuxiliaryWireRope?.breakage?.status),
        auxiliaryWireRopeVisualBreakageTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWireRope?.breakage?.status),
        auxiliaryWireRopeVisualBreakageResult: getResultText(i.visualAuxiliaryWireRope?.breakage),
        auxiliaryWireRopeVisualDeformationMemenuhi: getCheckmark(i.visualAuxiliaryWireRope?.deformation?.status),
        auxiliaryWireRopeVisualDeformationTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWireRope?.deformation?.status),
        auxiliaryWireRopeVisualDeformationResult: getResultText(i.visualAuxiliaryWireRope?.deformation),

        limitSwitchLsLongTravelMemenuhi: getCheckmark(i.visualLimitSwitch?.longTravel?.status),
        limitSwitchLsLongTravelTidakMemenuhi: getOppositeCheckmark(i.visualLimitSwitch?.longTravel?.status),
        limitSwitchLsLongTravelResult: getResultText(i.visualLimitSwitch?.longTravel),
        limitSwitchLsCrossTravelMemenuhi: getCheckmark(i.visualLimitSwitch?.crossTravel?.status),
        limitSwitchLsCrossTravelTidakMemenuhi: getOppositeCheckmark(i.visualLimitSwitch?.crossTravel?.status),
        limitSwitchLsCrossTravelResult: getResultText(i.visualLimitSwitch?.crossTravel),
        limitSwitchLsHoistingMemenuhi: getCheckmark(i.visualLimitSwitch?.hoisting?.status),
        limitSwitchLsHoistingTidakMemenuhi: getOppositeCheckmark(i.visualLimitSwitch?.hoisting?.status),
        limitSwitchLsHoistingResult: getResultText(i.visualLimitSwitch?.hoisting),

        internalCombustionEngineCoolingSystemMemenuhi: getCheckmark(i.visualInternalCombustionEngine?.coolingSystem?.status),
        internalCombustionEngineCoolingSystemTidakMemenuhi: getOppositeCheckmark(i.visualInternalCombustionEngine?.coolingSystem?.status),
        internalCombustionEngineCoolingSystemResult: getResultText(i.visualInternalCombustionEngine?.coolingSystem),
        internalCombustionEngineLubricationSystemMemenuhi: getCheckmark(i.visualInternalCombustionEngine?.lubricationSystem?.status),
        internalCombustionEngineLubricationSystemTidakMemenuhi: getOppositeCheckmark(i.visualInternalCombustionEngine?.lubricationSystem?.status),
        internalCombustionEngineLubricationSystemResult: getResultText(i.visualInternalCombustionEngine?.lubricationSystem),
        internalCombustionEngineEngineMountingMemenuhi: getCheckmark(i.visualInternalCombustionEngine?.engineMounting?.status),
        internalCombustionEngineEngineMountingTidakMemenuhi: getOppositeCheckmark(i.visualInternalCombustionEngine?.engineMounting?.status),
        internalCombustionEngineEngineMountingResult: getResultText(i.visualInternalCombustionEngine?.engineMounting),
        internalCombustionEngineSafetyGuardEquipmentMemenuhi: getCheckmark(i.visualInternalCombustionEngine?.safetyGuardEquipment?.status),
        internalCombustionEngineSafetyGuardEquipmentTidakMemenuhi: getOppositeCheckmark(i.visualInternalCombustionEngine?.safetyGuardEquipment?.status),
        internalCombustionEngineSafetyGuardEquipmentResult: getResultText(i.visualInternalCombustionEngine?.safetyGuardEquipment),
        internalCombustionEngineExhaustSystemMemenuhi: getCheckmark(i.visualInternalCombustionEngine?.exhaustSystem?.status),
        internalCombustionEngineExhaustSystemTidakMemenuhi: getOppositeCheckmark(i.visualInternalCombustionEngine?.exhaustSystem?.status),
        internalCombustionEngineExhaustSystemResult: getResultText(i.visualInternalCombustionEngine?.exhaustSystem),
        internalCombustionEngineFuelSystemMemenuhi: getCheckmark(i.visualInternalCombustionEngine?.fuelSystem?.status),
        internalCombustionEngineFuelSystemTidakMemenuhi: getOppositeCheckmark(i.visualInternalCombustionEngine?.fuelSystem?.status),
        internalCombustionEngineFuelSystemResult: getResultText(i.visualInternalCombustionEngine?.fuelSystem),
        internalCombustionEnginePowerTransmissionSystemMemenuhi: getCheckmark(i.visualInternalCombustionEngine?.powerTransmissionSystem?.status),
        internalCombustionEnginePowerTransmissionSystemTidakMemenuhi: getOppositeCheckmark(i.visualInternalCombustionEngine?.powerTransmissionSystem?.status),
        internalCombustionEnginePowerTransmissionSystemResult: getResultText(i.visualInternalCombustionEngine?.powerTransmissionSystem),
        internalCombustionEngineBatteryMemenuhi: getCheckmark(i.visualInternalCombustionEngine?.battery?.status),
        internalCombustionEngineBatteryTidakMemenuhi: getOppositeCheckmark(i.visualInternalCombustionEngine?.battery?.status),
        internalCombustionEngineBatteryResult: getResultText(i.visualInternalCombustionEngine?.battery),
        internalCombustionEngineStarterMotorMemenuhi: getCheckmark(i.visualInternalCombustionEngine?.starterMotor?.status),
        internalCombustionEngineStarterMotorTidakMemenuhi: getOppositeCheckmark(i.visualInternalCombustionEngine?.starterMotor?.status),
        internalCombustionEngineStarterMotorResult: getResultText(i.visualInternalCombustionEngine?.starterMotor),
        internalCombustionEngineWiringInstallationMemenuhi: getCheckmark(i.visualInternalCombustionEngine?.wiringInstallation?.status),
        internalCombustionEngineWiringInstallationTidakMemenuhi: getOppositeCheckmark(i.visualInternalCombustionEngine?.wiringInstallation?.status),
        internalCombustionEngineWiringInstallationResult: getResultText(i.visualInternalCombustionEngine?.wiringInstallation),
        internalCombustionEngineTurbochargerMemenuhi: getCheckmark(i.visualInternalCombustionEngine?.turbocharger?.status),
        internalCombustionEngineTurbochargerTidakMemenuhi: getOppositeCheckmark(i.visualInternalCombustionEngine?.turbocharger?.status),
        internalCombustionEngineTurbochargerResult: getResultText(i.visualInternalCombustionEngine?.turbocharger),

        hydraulicHydraulicPumpMemenuhi: getCheckmark(i.visualHydraulic?.pump?.status),
        hydraulicHydraulicPumpTidakMemenuhi: getOppositeCheckmark(i.visualHydraulic?.pump?.status),
        hydraulicHydraulicPumpResult: getResultText(i.visualHydraulic?.pump),
        hydraulicHydraulicLinesMemenuhi: getCheckmark(i.visualHydraulic?.lines?.status),
        hydraulicHydraulicLinesTidakMemenuhi: getOppositeCheckmark(i.visualHydraulic?.lines?.status),
        hydraulicHydraulicLinesResult: getResultText(i.visualHydraulic?.lines),
        hydraulicHydraulicFilterMemenuhi: getCheckmark(i.visualHydraulic?.filter?.status),
        hydraulicHydraulicFilterTidakMemenuhi: getOppositeCheckmark(i.visualHydraulic?.filter?.status),
        hydraulicHydraulicFilterResult: getResultText(i.visualHydraulic?.filter),
        hydraulicHydraulicTankMemenuhi: getCheckmark(i.visualHydraulic?.tank?.status),
        hydraulicHydraulicTankTidakMemenuhi: getOppositeCheckmark(i.visualHydraulic?.tank?.status),
        hydraulicHydraulicTankResult: getResultText(i.visualHydraulic?.tank),
        hydraulicMainWinchMotorMemenuhi: getCheckmark(i.visualHydraulic?.mainWinchMotor?.status),
        hydraulicMainWinchMotorTidakMemenuhi: getOppositeCheckmark(i.visualHydraulic?.mainWinchMotor?.status),
        hydraulicMainWinchMotorResult: getResultText(i.visualHydraulic?.mainWinchMotor),
        hydraulicAuxiliaryWinchMotorMemenuhi: getCheckmark(i.visualHydraulic?.auxiliaryWinchMotor?.status),
        hydraulicAuxiliaryWinchMotorTidakMemenuhi: getOppositeCheckmark(i.visualHydraulic?.auxiliaryWinchMotor?.status),
        hydraulicAuxiliaryWinchMotorResult: getResultText(i.visualHydraulic?.auxiliaryWinchMotor),
        hydraulicBoomWinchMotorMemenuhi: getCheckmark(i.visualHydraulic?.boomWinchMotor?.status),
        hydraulicBoomWinchMotorTidakMemenuhi: getOppositeCheckmark(i.visualHydraulic?.boomWinchMotor?.status),
        hydraulicBoomWinchMotorResult: getResultText(i.visualHydraulic?.boomWinchMotor),
        hydraulicSwingMotorMemenuhi: getCheckmark(i.visualHydraulic?.swingMotor?.status),
        hydraulicSwingMotorTidakMemenuhi: getOppositeCheckmark(i.visualHydraulic?.swingMotor?.status),
        hydraulicSwingMotorResult: getResultText(i.visualHydraulic?.swingMotor),

        controlValveReliefValveMemenuhi: getCheckmark(i.visualControlValve?.reliefValve?.status),
        controlValveReliefValveTidakMemenuhi: getOppositeCheckmark(i.visualControlValve?.reliefValve?.status),
        controlValveReliefValveResult: getResultText(i.visualControlValve?.reliefValve),
        controlValveMainWinchValveMemenuhi: getCheckmark(i.visualControlValve?.mainWinchValve?.status),
        controlValveMainWinchValveTidakMemenuhi: getOppositeCheckmark(i.visualControlValve?.mainWinchValve?.status),
        controlValveMainWinchValveResult: getResultText(i.visualControlValve?.mainWinchValve),
        controlValveAuxiliaryWinchValveMemenuhi: getCheckmark(i.visualControlValve?.auxiliaryWinchValve?.status),
        controlValveAuxiliaryWinchValveTidakMemenuhi: getOppositeCheckmark(i.visualControlValve?.auxiliaryWinchValve?.status),
        controlValveAuxiliaryWinchValveResult: getResultText(i.visualControlValve?.auxiliaryWinchValve),
        controlValveBoomWinchValveMemenuhi: getCheckmark(i.visualControlValve?.boomWinchValve?.status),
        controlValveBoomWinchValveTidakMemenuhi: getOppositeCheckmark(i.visualControlValve?.boomWinchValve?.status),
        controlValveBoomWinchValveResult: getResultText(i.visualControlValve?.boomWinchValve),
        controlValveBoomMovementValveMemenuhi: getCheckmark(i.visualControlValve?.boomMovementValve?.status),
        controlValveBoomMovementValveTidakMemenuhi: getOppositeCheckmark(i.visualControlValve?.boomMovementValve?.status),
        controlValveBoomMovementValveResult: getResultText(i.visualControlValve?.boomMovementValve),
        controlValveSteeringCylinderValveMemenuhi: getCheckmark(i.visualControlValve?.steeringCylinderValve?.status),
        controlValveSteeringCylinderValveTidakMemenuhi: getOppositeCheckmark(i.visualControlValve?.steeringCylinderValve?.status),
        controlValveSteeringCylinderValveResult: getResultText(i.visualControlValve?.steeringCylinderValve),
        controlValveAxleOscillationValveMemenuhi: getCheckmark(i.visualControlValve?.axleOscillationValve?.status),
        controlValveAxleOscillationValveTidakMemenuhi: getOppositeCheckmark(i.visualControlValve?.axleOscillationValve?.status),
        controlValveAxleOscillationValveResult: getResultText(i.visualControlValve?.axleOscillationValve),
        controlValveOutriggerMovementValveMemenuhi: getCheckmark(i.visualControlValve?.outriggerMovementValve?.status),
        controlValveOutriggerMovementValveTidakMemenuhi: getOppositeCheckmark(i.visualControlValve?.outriggerMovementValve?.status),
        controlValveOutriggerMovementValveResult: getResultText(i.visualControlValve?.outriggerMovementValve),

        hydraulicCylinderBoomMovementCylinderMemenuhi: getCheckmark(i.visualHydraulicCylinder?.boomMovementCylinder?.status),
        hydraulicCylinderBoomMovementCylinderTidakMemenuhi: getOppositeCheckmark(i.visualHydraulicCylinder?.boomMovementCylinder?.status),
        hydraulicCylinderBoomMovementCylinderResult: getResultText(i.visualHydraulicCylinder?.boomMovementCylinder),
        hydraulicCylinderOutriggerCylinderMemenuhi: getCheckmark(i.visualHydraulicCylinder?.outriggerCylinder?.status),
        hydraulicCylinderOutriggerCylinderTidakMemenuhi: getOppositeCheckmark(i.visualHydraulicCylinder?.outriggerCylinder?.status),
        hydraulicCylinderOutriggerCylinderResult: getResultText(i.visualHydraulicCylinder?.outriggerCylinder),
        hydraulicCylinderSteeringWheelCylinderMemenuhi: getCheckmark(i.visualHydraulicCylinder?.steeringWheelCylinder?.status),
        hydraulicCylinderSteeringWheelCylinderTidakMemenuhi: getOppositeCheckmark(i.visualHydraulicCylinder?.steeringWheelCylinder?.status),
        hydraulicCylinderSteeringWheelCylinderResult: getResultText(i.visualHydraulicCylinder?.steeringWheelCylinder),
        hydraulicCylinderAxleOscillationCylinderMemenuhi: getCheckmark(i.visualHydraulicCylinder?.axleOscillationCylinder?.status),
        hydraulicCylinderAxleOscillationCylinderTidakMemenuhi: getOppositeCheckmark(i.visualHydraulicCylinder?.axleOscillationCylinder?.status),
        hydraulicCylinderAxleOscillationCylinderResult: getResultText(i.visualHydraulicCylinder?.axleOscillationCylinder),
        hydraulicCylinderTelescopicCylinderMemenuhi: getCheckmark(i.visualHydraulicCylinder?.telescopicCylinder?.status),
        hydraulicCylinderTelescopicCylinderTidakMemenuhi: getOppositeCheckmark(i.visualHydraulicCylinder?.telescopicCylinder?.status),
        hydraulicCylinderTelescopicCylinderResult: getResultText(i.visualHydraulicCylinder?.telescopicCylinder),

        pneumaticCompressorMemenuhi: getCheckmark(i.visualPneumatic?.compressor?.status),
        pneumaticCompressorTidakMemenuhi: getOppositeCheckmark(i.visualPneumatic?.compressor?.status),
        pneumaticCompressorResult: getResultText(i.visualPneumatic?.compressor),
        pneumaticTankAndSafetyValveMemenuhi: getCheckmark(i.visualPneumatic?.tankAndSafetyValve?.status),
        pneumaticTankAndSafetyValveTidakMemenuhi: getOppositeCheckmark(i.visualPneumatic?.tankAndSafetyValve?.status),
        pneumaticTankAndSafetyValveResult: getResultText(i.visualPneumatic?.tankAndSafetyValve),
        pneumaticPressurizedAirLinesMemenuhi: getCheckmark(i.visualPneumatic?.pressurizedAirLines?.status),
        pneumaticPressurizedAirLinesTidakMemenuhi: getOppositeCheckmark(i.visualPneumatic?.pressurizedAirLines?.status),
        pneumaticPressurizedAirLinesResult: getResultText(i.visualPneumatic?.pressurizedAirLines),
        pneumaticAirFilterMemenuhi: getCheckmark(i.visualPneumatic?.airFilter?.status),
        pneumaticAirFilterTidakMemenuhi: getOppositeCheckmark(i.visualPneumatic?.airFilter?.status),
        pneumaticAirFilterResult: getResultText(i.visualPneumatic?.airFilter),
        pneumaticControlValveMemenuhi: getCheckmark(i.visualPneumatic?.controlValve?.status),
        pneumaticControlValveTidakMemenuhi: getOppositeCheckmark(i.visualPneumatic?.controlValve?.status),
        pneumaticControlValveResult: getResultText(i.visualPneumatic?.controlValve),

        operatorCabinSafetyLadderMemenuhi: getCheckmark(i.visualOperatorCabin?.safetyLadder?.status),
        operatorCabinSafetyLadderTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabin?.safetyLadder?.status),
        operatorCabinSafetyLadderResult: getResultText(i.visualOperatorCabin?.safetyLadder),
        operatorCabinDoorMemenuhi: getCheckmark(i.visualOperatorCabin?.door?.status),
        operatorCabinDoorTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabin?.door?.status),
        operatorCabinDoorResult: getResultText(i.visualOperatorCabin?.door),
        operatorCabinWindowMemenuhi: getCheckmark(i.visualOperatorCabin?.window?.status),
        operatorCabinWindowTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabin?.window?.status),
        operatorCabinWindowResult: getResultText(i.visualOperatorCabin?.window),
        operatorCabinFanAcMemenuhi: getCheckmark(i.visualOperatorCabin?.fanAc?.status),
        operatorCabinFanAcTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabin?.fanAc?.status),
        operatorCabinFanAcResult: getResultText(i.visualOperatorCabin?.fanAc),
        operatorCabinControlLeversButtonsMemenuhi: getCheckmark(i.visualOperatorCabin?.controlLeversButtons?.status),
        operatorCabinControlLeversButtonsTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabin?.controlLeversButtons?.status),
        operatorCabinControlLeversButtonsResult: getResultText(i.visualOperatorCabin?.controlLeversButtons),
        operatorCabinPendantControlMemenuhi: getCheckmark(i.visualOperatorCabin?.pendantControl?.status),
        operatorCabinPendantControlTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabin?.pendantControl?.status),
        operatorCabinPendantControlResult: getResultText(i.visualOperatorCabin?.pendantControl),
        operatorCabinLightingMemenuhi: getCheckmark(i.visualOperatorCabin?.lighting?.status),
        operatorCabinLightingTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabin?.lighting?.status),
        operatorCabinLightingResult: getResultText(i.visualOperatorCabin?.lighting),
        operatorCabinHornSignalAlarmMemenuhi: getCheckmark(i.visualOperatorCabin?.hornSignalAlarm?.status),
        operatorCabinHornSignalAlarmTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabin?.hornSignalAlarm?.status),
        operatorCabinHornSignalAlarmResult: getResultText(i.visualOperatorCabin?.hornSignalAlarm),
        operatorCabinFuseMemenuhi: getCheckmark(i.visualOperatorCabin?.fuse?.status),
        operatorCabinFuseTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabin?.fuse?.status),
        operatorCabinFuseResult: getResultText(i.visualOperatorCabin?.fuse),
        operatorCabinCommunicationDeviceMemenuhi: getCheckmark(i.visualOperatorCabin?.communicationDevice?.status),
        operatorCabinCommunicationDeviceTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabin?.communicationDevice?.status),
        operatorCabinCommunicationDeviceResult: getResultText(i.visualOperatorCabin?.communicationDevice),
        operatorCabinFireExtinguisherMemenuhi: getCheckmark(i.visualOperatorCabin?.fireExtinguisher?.status),
        operatorCabinFireExtinguisherTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabin?.fireExtinguisher?.status),
        operatorCabinFireExtinguisherResult: getResultText(i.visualOperatorCabin?.fireExtinguisher),
        operatorCabinOperatingSignsMemenuhi: getCheckmark(i.visualOperatorCabin?.operatingSigns?.status),
        operatorCabinOperatingSignsTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabin?.operatingSigns?.status),
        operatorCabinOperatingSignsResult: getResultText(i.visualOperatorCabin?.operatingSigns),
        operatorCabinIgnitionKeyMasterSwitchMemenuhi: getCheckmark(i.visualOperatorCabin?.ignitionKeyMasterSwitch?.status),
        operatorCabinIgnitionKeyMasterSwitchTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabin?.ignitionKeyMasterSwitch?.status),
        operatorCabinIgnitionKeyMasterSwitchResult: getResultText(i.visualOperatorCabin?.ignitionKeyMasterSwitch),
        operatorCabinButtonsHandlesLeversMemenuhi: getCheckmark(i.visualOperatorCabin?.buttonsHandlesLevers?.status),
        operatorCabinButtonsHandlesLeversTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabin?.buttonsHandlesLevers?.status),
        operatorCabinButtonsHandlesLeversResult: getResultText(i.visualOperatorCabin?.buttonsHandlesLevers),

        electricalComponentsPanelConductorConnectorMemenuhi: getCheckmark(i.visualElectricalComponents?.panelConductorConnector?.status),
        electricalComponentsPanelConductorConnectorTidakMemenuhi: getOppositeCheckmark(i.visualElectricalComponents?.panelConductorConnector?.status),
        electricalComponentsPanelConductorConnectorResult: getResultText(i.visualElectricalComponents?.panelConductorConnector),
        electricalComponentsConductorProtectionMemenuhi: getCheckmark(i.visualElectricalComponents?.conductorProtection?.status),
        electricalComponentsConductorProtectionTidakMemenuhi: getOppositeCheckmark(i.visualElectricalComponents?.conductorProtection?.status),
        electricalComponentsConductorProtectionResult: getResultText(i.visualElectricalComponents?.conductorProtection),
        electricalComponentsMotorInstallationSafetySystemMemenuhi: getCheckmark(i.visualElectricalComponents?.motorInstallationSafetySystem?.status),
        electricalComponentsMotorInstallationSafetySystemTidakMemenuhi: getOppositeCheckmark(i.visualElectricalComponents?.motorInstallationSafetySystem?.status),
        electricalComponentsMotorInstallationSafetySystemResult: getResultText(i.visualElectricalComponents?.motorInstallationSafetySystem),
        electricalComponentsGroundingSystemMemenuhi: getCheckmark(i.visualElectricalComponents?.groundingSystem?.status),
        electricalComponentsGroundingSystemTidakMemenuhi: getOppositeCheckmark(i.visualElectricalComponents?.groundingSystem?.status),
        electricalComponentsGroundingSystemResult: getResultText(i.visualElectricalComponents?.groundingSystem),
        electricalComponentsInstallationMemenuhi: getCheckmark(i.visualElectricalComponents?.installation?.status),
        electricalComponentsInstallationTidakMemenuhi: getOppositeCheckmark(i.visualElectricalComponents?.installation?.status),
        electricalComponentsInstallationResult: getResultText(i.visualElectricalComponents?.installation),

        safetyDevicesLadderHandrailMemenuhi: getCheckmark(i.visualSafetyDevices?.ladderHandrail?.status),
        safetyDevicesLadderHandrailTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevices?.ladderHandrail?.status),
        safetyDevicesLadderHandrailResult: getResultText(i.visualSafetyDevices?.ladderHandrail),
        safetyDevicesEngineOilLubricantPressureMemenuhi: getCheckmark(i.visualSafetyDevices?.engineOilLubricantPressure?.status),
        safetyDevicesEngineOilLubricantPressureTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevices?.engineOilLubricantPressure?.status),
        safetyDevicesEngineOilLubricantPressureResult: getResultText(i.visualSafetyDevices?.engineOilLubricantPressure),
        safetyDevicesHydraulicOilPressureMemenuhi: getCheckmark(i.visualSafetyDevices?.hydraulicOilPressure?.status),
        safetyDevicesHydraulicOilPressureTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevices?.hydraulicOilPressure?.status),
        safetyDevicesHydraulicOilPressureResult: getResultText(i.visualSafetyDevices?.hydraulicOilPressure),
        safetyDevicesAirPressureMemenuhi: getCheckmark(i.visualSafetyDevices?.airPressure?.status),
        safetyDevicesAirPressureTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevices?.airPressure?.status),
        safetyDevicesAirPressureResult: getResultText(i.visualSafetyDevices?.airPressure),
        safetyDevicesAmperemeterMemenuhi: getCheckmark(i.visualSafetyDevices?.amperemeter?.status),
        safetyDevicesAmperemeterTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevices?.amperemeter?.status),
        safetyDevicesAmperemeterResult: getResultText(i.visualSafetyDevices?.amperemeter),
        safetyDevicesVoltageMemenuhi: getCheckmark(i.visualSafetyDevices?.voltage?.status),
        safetyDevicesVoltageTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevices?.voltage?.status),
        safetyDevicesVoltageResult: getResultText(i.visualSafetyDevices?.voltage),
        safetyDevicesEngineTemperatureMemenuhi: getCheckmark(i.visualSafetyDevices?.engineTemperature?.status),
        safetyDevicesEngineTemperatureTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevices?.engineTemperature?.status),
        safetyDevicesEngineTemperatureResult: getResultText(i.visualSafetyDevices?.engineTemperature),
        safetyDevicesTransmissionTemperatureMemenuhi: getCheckmark(i.visualSafetyDevices?.transmissionTemperature?.status),
        safetyDevicesTransmissionTemperatureTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevices?.transmissionTemperature?.status),
        safetyDevicesTransmissionTemperatureResult: getResultText(i.visualSafetyDevices?.transmissionTemperature),
        safetyDevicesConverterOilTemperaturePressureMemenuhi: getCheckmark(i.visualSafetyDevices?.converterOilTemperaturePressure?.status),
        safetyDevicesConverterOilTemperaturePressureTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevices?.converterOilTemperaturePressure?.status),
        safetyDevicesConverterOilTemperaturePressureResult: getResultText(i.visualSafetyDevices?.converterOilTemperaturePressure),
        safetyDevicesConverterSpeedometerIndicatorMemenuhi: getCheckmark(i.visualSafetyDevices?.converterSpeedometerIndicator?.status),
        safetyDevicesConverterSpeedometerIndicatorTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevices?.converterSpeedometerIndicator?.status),
        safetyDevicesConverterSpeedometerIndicatorResult: getResultText(i.visualSafetyDevices?.converterSpeedometerIndicator),
        safetyDevicesConverterRotaryLampMemenuhi: getCheckmark(i.visualSafetyDevices?.converterRotaryLamp?.status),
        safetyDevicesConverterRotaryLampTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevices?.converterRotaryLamp?.status),
        safetyDevicesConverterRotaryLampResult: getResultText(i.visualSafetyDevices?.converterRotaryLamp),
        safetyDevicesConverterMainHoistRopeUpDownLimitMemenuhi: getCheckmark(i.visualSafetyDevices?.converterMainHoistRopeUpDownLimit?.status),
        safetyDevicesConverterMainHoistRopeUpDownLimitTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevices?.converterMainHoistRopeUpDownLimit?.status),
        safetyDevicesConverterMainHoistRopeUpDownLimitResult: getResultText(i.visualSafetyDevices?.converterMainHoistRopeUpDownLimit),
        safetyDevicesConverterAuxiliaryHoistRopeUpDownLimitMemenuhi: getCheckmark(i.visualSafetyDevices?.converterAuxiliaryHoistRopeUpDownLimit?.status),
        safetyDevicesConverterAuxiliaryHoistRopeUpDownLimitTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevices?.converterAuxiliaryHoistRopeUpDownLimit?.status),
        safetyDevicesConverterAuxiliaryHoistRopeUpDownLimitResult: getResultText(i.visualSafetyDevices?.converterAuxiliaryHoistRopeUpDownLimit),
        safetyDevicesConverterSwingMotionLimitMemenuhi: getCheckmark(i.visualSafetyDevices?.converterSwingMotionLimit?.status),
        safetyDevicesConverterSwingMotionLimitTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevices?.converterSwingMotionLimit?.status),
        safetyDevicesConverterSwingMotionLimitResult: getResultText(i.visualSafetyDevices?.converterSwingMotionLimit),
        safetyDevicesConverterLevelIndicatorMemenuhi: getCheckmark(i.visualSafetyDevices?.converterLevelIndicator?.status),
        safetyDevicesConverterLevelIndicatorTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevices?.converterLevelIndicator?.status),
        safetyDevicesConverterLevelIndicatorResult: getResultText(i.visualSafetyDevices?.converterLevelIndicator),
        safetyDevicesConverterLoadWeightIndicatorMemenuhi: getCheckmark(i.visualSafetyDevices?.converterLoadWeightIndicator?.status),
        safetyDevicesConverterLoadWeightIndicatorTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevices?.converterLoadWeightIndicator?.status),
        safetyDevicesConverterLoadWeightIndicatorResult: getResultText(i.visualSafetyDevices?.converterLoadWeightIndicator),
        safetyDevicesConverterLoadChartMemenuhi: getCheckmark(i.visualSafetyDevices?.converterLoadChart?.status),
        safetyDevicesConverterLoadChartTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevices?.converterLoadChart?.status),
        safetyDevicesConverterLoadChartResult: getResultText(i.visualSafetyDevices?.converterLoadChart),
        safetyDevicesConverterAnemometerWindSpeedMemenuhi: getCheckmark(i.visualSafetyDevices?.converterAnemometerWindSpeed?.status),
        safetyDevicesConverterAnemometerWindSpeedTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevices?.converterAnemometerWindSpeed?.status),
        safetyDevicesConverterAnemometerWindSpeedResult: getResultText(i.visualSafetyDevices?.converterAnemometerWindSpeed),
        safetyDevicesConverterBoomAngleIndicatorMemenuhi: getCheckmark(i.visualSafetyDevices?.converterBoomAngleIndicator?.status),
        safetyDevicesConverterBoomAngleIndicatorTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevices?.converterBoomAngleIndicator?.status),
        safetyDevicesConverterBoomAngleIndicatorResult: getResultText(i.visualSafetyDevices?.converterBoomAngleIndicator),
        safetyDevicesConverterAirPressureIndicatorMemenuhi: getCheckmark(i.visualSafetyDevices?.converterAirPressureIndicator?.status),
        safetyDevicesConverterAirPressureIndicatorTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevices?.converterAirPressureIndicator?.status),
        safetyDevicesConverterAirPressureIndicatorResult: getResultText(i.visualSafetyDevices?.converterAirPressureIndicator),
        safetyDevicesConverterHydraulicPressureIndicatorMemenuhi: getCheckmark(i.visualSafetyDevices?.converterHydraulicPressureIndicator?.status),
        safetyDevicesConverterHydraulicPressureIndicatorTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevices?.converterHydraulicPressureIndicator?.status),
        safetyDevicesConverterHydraulicPressureIndicatorResult: getResultText(i.visualSafetyDevices?.converterHydraulicPressureIndicator),
        safetyDevicesConverterSafetyValvesMemenuhi: getCheckmark(i.visualSafetyDevices?.converterSafetyValves?.status),
        safetyDevicesConverterSafetyValvesTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevices?.converterSafetyValves?.status),
        safetyDevicesConverterSafetyValvesResult: getResultText(i.visualSafetyDevices?.converterSafetyValves),
        safetyDevicesConverterMainWindingDrumSafetyLockMemenuhi: getCheckmark(i.visualSafetyDevices?.converterMainWindingDrumSafetyLock?.status),
        safetyDevicesConverterMainWindingDrumSafetyLockTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevices?.converterMainWindingDrumSafetyLock?.status),
        safetyDevicesConverterMainWindingDrumSafetyLockResult: getResultText(i.visualSafetyDevices?.converterMainWindingDrumSafetyLock),
        safetyDevicesConverterAuxiliaryWindingDrumSafetyLockMemenuhi: getCheckmark(i.visualSafetyDevices?.converterAuxiliaryWindingDrumSafetyLock?.status),
        safetyDevicesConverterAuxiliaryWindingDrumSafetyLockTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevices?.converterAuxiliaryWindingDrumSafetyLock?.status),
        safetyDevicesConverterAuxiliaryWindingDrumSafetyLockResult: getResultText(i.visualSafetyDevices?.converterAuxiliaryWindingDrumSafetyLock),
        safetyDevicesConverterTelescopicMotionLimitMemenuhi: getCheckmark(i.visualSafetyDevices?.converterTelescopicMotionLimit?.status),
        safetyDevicesConverterTelescopicMotionLimitTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevices?.converterTelescopicMotionLimit?.status),
        safetyDevicesConverterTelescopicMotionLimitResult: getResultText(i.visualSafetyDevices?.converterTelescopicMotionLimit),
        safetyDevicesConverterLightningArresterMemenuhi: getCheckmark(i.visualSafetyDevices?.converterLightningArrester?.status),
        safetyDevicesConverterLightningArresterTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevices?.converterLightningArrester?.status),
        safetyDevicesConverterLightningArresterResult: getResultText(i.visualSafetyDevices?.converterLightningArrester),
        safetyDevicesConverterLiftingHeightIndicatorMemenuhi: getCheckmark(i.visualSafetyDevices?.converterLiftingHeightIndicator?.status),
        safetyDevicesConverterLiftingHeightIndicatorTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevices?.converterLiftingHeightIndicator?.status),
        safetyDevicesConverterLiftingHeightIndicatorResult: getResultText(i.visualSafetyDevices?.converterLiftingHeightIndicator),

        // IV. PEMERIKSAAN TIDAK MERUSAK (NDT)
        steelWireRopeNdtType: i.ndtSteelWireRope?.ndtType,
        steelWireRopeItems: (i.ndtSteelWireRope?.ropes || []).map(item => ({
            steelWireRopeAt: item.usageAt,
            steelWireRopeSpec: item.specDiameter,
            steelWireRopeActual: item.actualDiameter,
            steelWireRopeConstruction: item.construction,
            steelWireRopeType: item.type,
            steelWireRopeLength: item.length,
            steelWireRopeAge: item.age,
            steelWireRopeTrue: getCheckmark(item.result?.status),
            steelWireRopeFalse: getOppositeCheckmark(item.result?.status),
            steelWireRopeResult: getResultText(item.result),
        })),

        boomType: i.ndtBoom?.boomType,
        boomNdtType: i.ndtBoom?.ndtType,
        boomItems: (i.ndtBoom?.inspections || []).map(item => ({
            boomPart: item.part,
            boomLocation: item.location,
            boomDefectTrue: getCheckmark(item.result?.status),
            boomDefectFalse: getOppositeCheckmark(item.result?.status),
            boomResult: getResultText(item.result),
        })),

        mainHookNdtType: i.ndtMainHook?.ndtType,
        capacityMainHook: i.ndtMainHook?.capacity,
        mainHookSpecificationA: i.ndtMainHook?.specification?.a,
        mainHookSpecificationB: i.ndtMainHook?.specification?.b,
        mainHookSpecificationC: i.ndtMainHook?.specification?.c,
        mainHookSpecificationD: i.ndtMainHook?.specification?.d,
        mainHookSpecificationE: i.ndtMainHook?.specification?.e,
        mainHookSpecificationF: i.ndtMainHook?.specification?.f,
        mainHookSpecificationG: i.ndtMainHook?.specification?.g,
        mainHookSpecificationH: i.ndtMainHook?.specification?.h,
        mainHookSpecificationTrue: getCheckmark(i.ndtMainHook?.specification?.result?.status),
        mainHookSpecificationFalse: getOppositeCheckmark(i.ndtMainHook?.specification?.result?.status),
        mainHookSpecificationResult: getResultText(i.ndtMainHook?.specification?.result),
        mainHookMeasurementResultsA: i.ndtMainHook?.measurementResults?.a,
        mainHookMeasurementResultsB: i.ndtMainHook?.measurementResults?.b,
        mainHookMeasurementResultsC: i.ndtMainHook?.measurementResults?.c,
        mainHookMeasurementResultsD: i.ndtMainHook?.measurementResults?.d,
        mainHookMeasurementResultsE: i.ndtMainHook?.measurementResults?.e,
        mainHookMeasurementResultsF: i.ndtMainHook?.measurementResults?.f,
        mainHookMeasurementResultsG: i.ndtMainHook?.measurementResults?.g,
        mainHookMeasurementResultsH: i.ndtMainHook?.measurementResults?.h,
        mainHookMeasurementResultsTrue: getCheckmark(i.ndtMainHook?.measurementResults?.result?.status),
        mainHookMeasurementResultsFalse: getOppositeCheckmark(i.ndtMainHook?.measurementResults?.result?.status),
        mainHookMeasurementResultsResult: getResultText(i.ndtMainHook?.measurementResults?.result),
        mainHookToleranceMeasureA: i.ndtMainHook?.toleranceMeasure?.a,
        mainHookToleranceMeasureB: i.ndtMainHook?.toleranceMeasure?.b,
        mainHookToleranceMeasureC: i.ndtMainHook?.toleranceMeasure?.c,
        mainHookToleranceMeasureD: i.ndtMainHook?.toleranceMeasure?.d,
        mainHookToleranceMeasureE: i.ndtMainHook?.toleranceMeasure?.e,
        mainHookToleranceMeasureF: i.ndtMainHook?.toleranceMeasure?.f,
        mainHookToleranceMeasureG: i.ndtMainHook?.toleranceMeasure?.g,
        mainHookToleranceMeasureH: i.ndtMainHook?.toleranceMeasure?.h,
        mainHookToleranceMeasureTrue: getCheckmark(i.ndtMainHook?.toleranceMeasure?.result?.status),
        mainHookToleranceMeasureFalse: getOppositeCheckmark(i.ndtMainHook?.toleranceMeasure?.result?.status),
        mainHookToleranceMeasureResult: getResultText(i.ndtMainHook?.toleranceMeasure?.result),

        auxiliaryHookNdtType: i.ndtAuxiliaryHook?.ndtType,
        capacityOptionalHook: i.ndtAuxiliaryHook?.capacity,
        auxiliaryHookSpecificationA: i.ndtAuxiliaryHook?.specification?.a,
        auxiliaryHookSpecificationB: i.ndtAuxiliaryHook?.specification?.b,
        auxiliaryHookSpecificationC: i.ndtAuxiliaryHook?.specification?.c,
        auxiliaryHookSpecificationD: i.ndtAuxiliaryHook?.specification?.d,
        auxiliaryHookSpecificationE: i.ndtAuxiliaryHook?.specification?.e,
        auxiliaryHookSpecificationF: i.ndtAuxiliaryHook?.specification?.f,
        auxiliaryHookSpecificationG: i.ndtAuxiliaryHook?.specification?.g,
        auxiliaryHookSpecificationH: i.ndtAuxiliaryHook?.specification?.h,
        auxiliaryHookSpecificationTrue: getCheckmark(i.ndtAuxiliaryHook?.specification?.result?.status),
        auxiliaryHookSpecificationFalse: getOppositeCheckmark(i.ndtAuxiliaryHook?.specification?.result?.status),
        auxiliaryHookSpecificationResult: getResultText(i.ndtAuxiliaryHook?.specification?.result),
        auxiliaryHookMeasurementResultsA: i.ndtAuxiliaryHook?.measurementResults?.a,
        auxiliaryHookMeasurementResultsB: i.ndtAuxiliaryHook?.measurementResults?.b,
        auxiliaryHookMeasurementResultsC: i.ndtAuxiliaryHook?.measurementResults?.c,
        auxiliaryHookMeasurementResultsD: i.ndtAuxiliaryHook?.measurementResults?.d,
        auxiliaryHookMeasurementResultsE: i.ndtAuxiliaryHook?.measurementResults?.e,
        auxiliaryHookMeasurementResultsF: i.ndtAuxiliaryHook?.measurementResults?.f,
        auxiliaryHookMeasurementResultsG: i.ndtAuxiliaryHook?.measurementResults?.g,
        auxiliaryHookMeasurementResultsH: i.ndtAuxiliaryHook?.measurementResults?.h,
        auxiliaryHookMeasurementResultsTrue: getCheckmark(i.ndtAuxiliaryHook?.measurementResults?.result?.status),
        auxiliaryHookMeasurementResultsFalse: getOppositeCheckmark(i.ndtAuxiliaryHook?.measurementResults?.result?.status),
        auxiliaryHookMeasurementResultsResult: getResultText(i.ndtAuxiliaryHook?.measurementResults?.result),
        auxiliaryHookToleranceMeasureA: i.ndtAuxiliaryHook?.toleranceMeasure?.a,
        auxiliaryHookToleranceMeasureB: i.ndtAuxiliaryHook?.toleranceMeasure?.b,
        auxiliaryHookToleranceMeasureC: i.ndtAuxiliaryHook?.toleranceMeasure?.c,
        auxiliaryHookToleranceMeasureD: i.ndtAuxiliaryHook?.toleranceMeasure?.d,
        auxiliaryHookToleranceMeasureE: i.ndtAuxiliaryHook?.toleranceMeasure?.e,
        auxiliaryHookToleranceMeasureF: i.ndtAuxiliaryHook?.toleranceMeasure?.f,
        auxiliaryHookToleranceMeasureG: i.ndtAuxiliaryHook?.toleranceMeasure?.g,
        auxiliaryHookToleranceMeasureH: i.ndtAuxiliaryHook?.toleranceMeasure?.h,
        auxiliaryHookToleranceMeasureTrue: getCheckmark(i.ndtAuxiliaryHook?.toleranceMeasure?.result?.status),
        auxiliaryHookToleranceMeasureFalse: getOppositeCheckmark(i.ndtAuxiliaryHook?.toleranceMeasure?.result?.status),
        auxiliaryHookToleranceMeasureResult: getResultText(i.ndtAuxiliaryHook?.toleranceMeasure?.result),

        mainDrumNdtType: i.ndtMainDrum?.ndtType,
        mainDrumSpecificationA: i.ndtMainDrum?.specification?.a,
        mainDrumSpecificationB: i.ndtMainDrum?.specification?.b,
        mainDrumSpecificationC: i.ndtMainDrum?.specification?.c,
        mainDrumSpecificationD: i.ndtMainDrum?.specification?.d,
        mainDrumSpecificationE: i.ndtMainDrum?.specification?.e,
        mainDrumSpecificationF: i.ndtMainDrum?.specification?.f,
        mainDrumSpecificationG: i.ndtMainDrum?.specification?.g,
        mainDrumSpecificationTrue: getCheckmark(i.ndtMainDrum?.specification?.result?.status),
        mainDrumSpecificationFalse: getOppositeCheckmark(i.ndtMainDrum?.specification?.result?.status),
        mainDrumSpecificationResult: getResultText(i.ndtMainDrum?.specification?.result),
        mainDrumMeasurementResultsA: i.ndtMainDrum?.measurementResults?.a,
        mainDrumMeasurementResultsB: i.ndtMainDrum?.measurementResults?.b,
        mainDrumMeasurementResultsC: i.ndtMainDrum?.measurementResults?.c,
        mainDrumMeasurementResultsD: i.ndtMainDrum?.measurementResults?.d,
        mainDrumMeasurementResultsE: i.ndtMainDrum?.measurementResults?.e,
        mainDrumMeasurementResultsF: i.ndtMainDrum?.measurementResults?.f,
        mainDrumMeasurementResultsG: i.ndtMainDrum?.measurementResults?.g,
        mainDrumMeasurementResultsTrue: getCheckmark(i.ndtMainDrum?.measurementResults?.result?.status),
        mainDrumMeasurementResultsFalse: getOppositeCheckmark(i.ndtMainDrum?.measurementResults?.result?.status),
        mainDrumMeasurementResultsResult: getResultText(i.ndtMainDrum?.measurementResults?.result),

        auxiliaryDrumNdtType: i.ndtAuxiliaryDrum?.ndtType,
        auxiliaryDrumSpecificationA: i.ndtAuxiliaryDrum?.specification?.a,
        auxiliaryDrumSpecificationB: i.ndtAuxiliaryDrum?.specification?.b,
        auxiliaryDrumSpecificationC: i.ndtAuxiliaryDrum?.specification?.c,
        auxiliaryDrumSpecificationD: i.ndtAuxiliaryDrum?.specification?.d,
        auxiliaryDrumSpecificationE: i.ndtAuxiliaryDrum?.specification?.e,
        auxiliaryDrumSpecificationF: i.ndtAuxiliaryDrum?.specification?.f,
        auxiliaryDrumSpecificationG: i.ndtAuxiliaryDrum?.specification?.g,
        auxiliaryDrumSpecificationTrue: getCheckmark(i.ndtAuxiliaryDrum?.specification?.result?.status),
        auxiliaryDrumSpecificationFalse: getOppositeCheckmark(i.ndtAuxiliaryDrum?.specification?.result?.status),
        auxiliaryDrumSpecificationResult: getResultText(i.ndtAuxiliaryDrum?.specification?.result),
        auxiliaryDrumMeasurementResultsA: i.ndtAuxiliaryDrum?.measurementResults?.a,
        auxiliaryDrumMeasurementResultsB: i.ndtAuxiliaryDrum?.measurementResults?.b,
        auxiliaryDrumMeasurementResultsC: i.ndtAuxiliaryDrum?.measurementResults?.c,
        auxiliaryDrumMeasurementResultsD: i.ndtAuxiliaryDrum?.measurementResults?.d,
        auxiliaryDrumMeasurementResultsE: i.ndtAuxiliaryDrum?.measurementResults?.e,
        auxiliaryDrumMeasurementResultsF: i.ndtAuxiliaryDrum?.measurementResults?.f,
        auxiliaryDrumMeasurementResultsG: i.ndtAuxiliaryDrum?.measurementResults?.g,
        auxiliaryDrumMeasurementResultsTrue: getCheckmark(i.ndtAuxiliaryDrum?.measurementResults?.result?.status),
        auxiliaryDrumMeasurementResultsFalse: getOppositeCheckmark(i.ndtAuxiliaryDrum?.measurementResults?.result?.status),
        auxiliaryDrumMeasurementResultsResult: getResultText(i.ndtAuxiliaryDrum?.measurementResults?.result),

        puliNdtType: i.ndtMainPulley?.ndtType,
        mainPulleySpecificationA: i.ndtMainPulley?.specification?.a,
        mainPulleySpecificationB: i.ndtMainPulley?.specification?.b,
        mainPulleySpecificationC: i.ndtMainPulley?.specification?.c,
        mainPulleySpecificationD: i.ndtMainPulley?.specification?.d,
        mainPulleySpecificationE: i.ndtMainPulley?.specification?.e,
        mainPulleySpecificationTrue: getCheckmark(i.ndtMainPulley?.specification?.result?.status),
        mainPulleySpecificationFalse: getOppositeCheckmark(i.ndtMainPulley?.specification?.result?.status),
        mainPulleySpecificationResult: getResultText(i.ndtMainPulley?.specification?.result),
        mainPulleyMeasurementResultsA: i.ndtMainPulley?.measurementResults?.a,
        mainPulleyMeasurementResultsB: i.ndtMainPulley?.measurementResults?.b,
        mainPulleyMeasurementResultsC: i.ndtMainPulley?.measurementResults?.c,
        mainPulleyMeasurementResultsD: i.ndtMainPulley?.measurementResults?.d,
        mainPulleyMeasurementResultsE: i.ndtMainPulley?.measurementResults?.e,
        mainPulleyMeasurementResultsTrue: getCheckmark(i.ndtMainPulley?.measurementResults?.result?.status),
        mainPulleyMeasurementResultsFalse: getOppositeCheckmark(i.ndtMainPulley?.measurementResults?.result?.status),
        mainPulleyMeasurementResultsResult: getResultText(i.ndtMainPulley?.measurementResults?.result),

        puliOptionalType: i.ndtAuxiliaryPulley?.ndtType,
        auxiliaryPulleySpecificationA: i.ndtAuxiliaryPulley?.specification?.a,
        auxiliaryPulleySpecificationB: i.ndtAuxiliaryPulley?.specification?.b,
        auxiliaryPulleySpecificationC: i.ndtAuxiliaryPulley?.specification?.c,
        auxiliaryPulleySpecificationD: i.ndtAuxiliaryPulley?.specification?.d,
        auxiliaryPulleySpecificationE: i.ndtAuxiliaryPulley?.specification?.e,
        auxiliaryPulleySpecificationTrue: getCheckmark(i.ndtAuxiliaryPulley?.specification?.result?.status),
        auxiliaryPulleySpecificationFalse: getOppositeCheckmark(i.ndtAuxiliaryPulley?.specification?.result?.status),
        auxiliaryPulleySpecificationResult: getResultText(i.ndtAuxiliaryPulley?.specification?.result),
        auxiliaryPulleyMeasurementResultsA: i.ndtAuxiliaryPulley?.measurementResults?.a,
        auxiliaryPulleyMeasurementResultsB: i.ndtAuxiliaryPulley?.measurementResults?.b,
        auxiliaryPulleyMeasurementResultsC: i.ndtAuxiliaryPulley?.measurementResults?.c,
        auxiliaryPulleyMeasurementResultsD: i.ndtAuxiliaryPulley?.measurementResults?.d,
        auxiliaryPulleyMeasurementResultsE: i.ndtAuxiliaryPulley?.measurementResults?.e,
        auxiliaryPulleyMeasurementResultsTrue: getCheckmark(i.ndtAuxiliaryPulley?.measurementResults?.result?.status),
        auxiliaryPulleyMeasurementResultsFalse: getOppositeCheckmark(i.ndtAuxiliaryPulley?.measurementResults?.result?.status),
        auxiliaryPulleyMeasurementResultsResult: getResultText(i.ndtAuxiliaryPulley?.measurementResults?.result),

        // V. PENGUJIAN FUNGSI
        hoistingLoweringConditionTrue: getCheckmark(i.testingFunction?.hoistingLowering?.status),
        hoistingLoweringConditionFalse: getOppositeCheckmark(i.testingFunction?.hoistingLowering?.status),
        hoistingLoweringResult: getResultText(i.testingFunction?.hoistingLowering),
        extendedRectractedBoomConditionTrue: getCheckmark(i.testingFunction?.extendedRetractedBoom?.status),
        extendedRectractedBoomConditionFalse: getOppositeCheckmark(i.testingFunction?.extendedRetractedBoom?.status),
        extendedRectractedBoomConditionResult: getResultText(i.testingFunction?.extendedRetractedBoom),
        extendedRectractedOutriggerConditionTrue: getCheckmark(i.testingFunction?.extendedRetractedOutrigger?.status),
        extendedRectractedOutriggerConditionFalse: getOppositeCheckmark(i.testingFunction?.extendedRetractedOutrigger?.status),
        extendedRectractedOutriggerResult: getResultText(i.testingFunction?.extendedRetractedOutrigger),
        SwingSlweingConditionTrue: getCheckmark(i.testingFunction?.swingSlewing?.status),
        SwingSlweingConditionFalse: getOppositeCheckmark(i.testingFunction?.swingSlewing?.status),
        SwingSlweingConditionResult: getResultText(i.testingFunction?.swingSlewing),
        antiTwoBlockTrue: getCheckmark(i.testingFunction?.antiTwoBlock?.status),
        antiTwoBlockFalse: getOppositeCheckmark(i.testingFunction?.antiTwoBlock?.status),
        antiTwoBlockResult: getResultText(i.testingFunction?.antiTwoBlock),
        boomStopTrue: getCheckmark(i.testingFunction?.boomStop?.status),
        boomStopFalse: getOppositeCheckmark(i.testingFunction?.boomStop?.status),
        boomStopResult: getResultText(i.testingFunction?.boomStop),
        anemometerWindSpeedTrue: getCheckmark(i.testingFunction?.anemometerWindSpeed?.status),
        anemometerWindSpeedFalse: getOppositeCheckmark(i.testingFunction?.anemometerWindSpeed?.status),
        anemometerWindSpeedResult: getResultText(i.testingFunction?.anemometerWindSpeed),
        brakeLockingDeviceTrue: getCheckmark(i.testingFunction?.brakeLockingDevice?.status),
        brakeLockingDeviceFalse: getOppositeCheckmark(i.testingFunction?.brakeLockingDevice?.status),
        brakeLockingDeviceResult: getResultText(i.testingFunction?.brakeLockingDevice),
        loadMomentIndicatorConditionTrue: getCheckmark(i.testingFunction?.loadMomentIndicator?.status),
        loadMomentIndicatorConditionFalse: getOppositeCheckmark(i.testingFunction?.loadMomentIndicator?.status),
        loadMomentIndicatorConditionResult: getResultText(i.testingFunction?.loadMomentIndicator),
        turnSignalTrue: getCheckmark(i.testingFunction?.turnSignal?.status),
        turnSignalFalse: getOppositeCheckmark(i.testingFunction?.turnSignal?.status),
        turnSignalResult: getResultText(i.testingFunction?.turnSignal),
        drivingLightsTrue: getCheckmark(i.testingFunction?.drivingLights?.status),
        drivingLightsFalse: getOppositeCheckmark(i.testingFunction?.drivingLights?.status),
        drivingLightsResult: getResultText(i.testingFunction?.drivingLights),
        loadIndicatorLightTrue: getCheckmark(i.testingFunction?.loadIndicatorLight?.status),
        loadIndicatorLightFalse: getOppositeCheckmark(i.testingFunction?.loadIndicatorLight?.status),
        loadIndicatorLightResult: getResultText(i.testingFunction?.loadIndicatorLight),
        rotaryLampTrue: getCheckmark(i.testingFunction?.rotaryLamp?.status),
        rotaryLampFalse: getOppositeCheckmark(i.testingFunction?.rotaryLamp?.status),
        rotaryLampResult: getResultText(i.testingFunction?.rotaryLamp),
        hornTrue: getCheckmark(i.testingFunction?.horn?.status),
        hornFalse: getOppositeCheckmark(i.testingFunction?.horn?.status),
        hornResult: getResultText(i.testingFunction?.horn),
        swingAlarmTrue: getCheckmark(i.testingFunction?.swingAlarm?.status),
        swingAlarmFalse: getOppositeCheckmark(i.testingFunction?.swingAlarm?.status),
        swingAlarmResult: getResultText(i.testingFunction?.swingAlarm),
        reverseAlarmTrue: getCheckmark(i.testingFunction?.reverseAlarm?.status),
        reverseAlarmFalse: getOppositeCheckmark(i.testingFunction?.reverseAlarm?.status),
        reverseAlarmResult: getResultText(i.testingFunction?.reverseAlarm),
        overloadAlarmTrue: getCheckmark(i.testingFunction?.overloadAlarm?.status),
        overloadAlarmFalse: getOppositeCheckmark(i.testingFunction?.overloadAlarm?.status),
        overloadAlarmResult: getResultText(i.testingFunction?.overloadAlarm),

        // V.2 PENGUJIAN BEBAN (DINAMIS & STATIS)
        dynamicMainHook: i.dynamicMainHookTests,
        dynamicAuxiliaryHook: i.dynamicAuxiliaryHookTests,
        staticMainHook: i.staticMainHookTests,
        staticAuxiliaryHook: i.staticAuxiliaryHookTests,

        // KESIMPULAN & SARAN
        conclusion: data.conclusion,
        recomendation: data.recommendation,
    };

    try {
        doc.render(renderData);
    } catch (error) {
        console.error("GAGAL SAAT RENDER DOKUMEN:", error.message);
        const e = {
            message: error.message,
            name: error.name,
            stack: error.stack,
            properties: error.properties,
        };
        console.log(JSON.stringify({
            error: e
        }));
        throw error;
    }

    const docxBuffer = doc.getZip().generate({
        type: 'nodebuffer',
        compression: 'DEFLATE'
    });
    const ownerName = (g.ownerName || 'UnknownOwner').replace(/[^\w.-]/g, '_');
    const fileName = `Laporan-MobileCrane-${ownerName}-${data.id || 'new'}.docx`;

    return {
        docxBuffer,
        fileName
    };
};

module.exports = {
    createLaporanMobileCrane,
};