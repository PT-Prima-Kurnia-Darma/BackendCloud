'use strict';

const PizZip = require('pizzip');
const Docxtemplater = require('docxtemplater');
const {
    Storage
} = require('@google-cloud/storage');
const config = require('../../../../../config');

// Inisialisasi Google Cloud Storage
let privateKey = config.FIRESTORE_PRIVATE_KEY.replace(/\\n/g, '\n');
const storage = new Storage({
    projectId: config.FIRESTORE_PROJECT_ID,
    credentials: {
        client_email: config.FIRESTORE_CLIENT_EMAIL,
        private_key: privateKey
    },
});
const BUCKET_NAME = 'audit-riksauji'; // Pastikan nama bucket sudah benar

// Helper untuk mengubah nilai boolean menjadi tanda centang '√' atau string kosong
const getCheckmark = (status) => (status === true ? '√' : '');
const getOppositeCheckmark = (status) => (status === false ? '√' : '');
const getResultText = (item) => (item ? item.result : '');

const createLaporanMobileCrane = async (data) => {
    const templatePath = 'paa/mobileCrane/laporanMobileCrane.docx';

    let content;
    try {
        [content] = await storage.bucket(BUCKET_NAME).file(templatePath).download();
    } catch (error) {
        console.error(`Gagal mengunduh template dari GCS: gs://${BUCKET_NAME}/${templatePath}`, error);
        throw new Error('Template dokumen tidak dapat diakses.');
    }

    const zip = new PizZip(content);
    const doc = new Docxtemplater(zip, {
        paragraphLoop: true,
        linebreaks: true,
        nullGetter: () => "" // Mengganti nilai null/undefined menjadi string kosong
    });

    // Dekonstruksi data untuk kemudahan akses dan menghindari error
    const g = data.generalData || {};
    const t = data.technicalData || {};
    const i = data.inspectionAndTesting || {};

    const renderData = {
        // I. DATA UMUM
        examinationType: data.examinationType,
        inspectionType: data.inspectionType,
        subInspectionType: data.subInspectionType,
        ownerName: g.generalDataOwnerName,
        ownerAddress: g.generalDataOwnerAddress,
        userSubcontractorPersonInCharge: g.generalDataUserSubcontractorPersonInCharge,
        userAddress: g.generalDataUserAddress,
        unitLocation: g.generalDataUnitLocation,
        operatorName: g.generalDataOperatorName,
        equipmentType: data.equipmentType,
        manufacturer: g.generalDataManufacturer,
        brandType: g.generalDataBrandType,
        locationAndYearOfManufacture: g.generalDataLocationAndYearOfManufacture,
        serialNumberUnitNumber: g.generalDataSerialNumberUnitNumber,
        capacityWorkingLoad: g.generalDataCapacityWorkingLoad,
        intendedUse: g.generalDataIntendedUse,
        usagePermitNumber: g.generalDataUsagePermitNumber,
        operatorCertificate: g.generalDataOperatorCertificate,
        equipmentHistory: g.generalDataEquipmentHistory,
        inspectionDate: g.generalDataInspectionDate,

        // II. DATA TEKNIK
        maximumWorkingLoadCapacity: t.technicalDataMaximumWorkingLoadCapacity,
        boomLength: t.technicalDataBoomLength,
        maximumJibLength: t.technicalDataMaximumJibLength,
        maximumJibWorkingLoad: t.technicalDataMaximumJibWorkingLoad,
        maxBoomJibLength: t.technicalDataMaxBoomJibLength,
        craneWeight: t.technicalDataCraneWeight,
        maxLiftingHeight: t.technicalDataMaxLiftingHeight,
        boomWorkingAngle: t.technicalDataBoomWorkingAngle,
        engineNumber: t.technicalDataEngineNumber,
        type: t.technicalDataType,
        numberOfCylinders: t.technicalDataNumberOfCylinders,
        netPower: t.technicalDataNetPower,
        brandYearOfManufacture: t.technicalDataBrandYearOfManufacture,
        // Hook
        mainHookType: t.technicalDataMainHookType,
        mainHookCapacity: t.technicalDataMainHookCapacity,
        mainHookMaterial: t.technicalDataMainHookMaterial,
        mainHookSerialNumber: t.technicalDataMainHookSerialNumber,
        auxiliaryHookType: t.technicalDataAuxiliaryHookType,
        auxiliaryHookCapacity: t.technicalDataAuxiliaryHookCapacity,
        auxiliaryHookMaterial: t.technicalDataAuxiliaryHookMaterial,
        auxiliaryHookSerialNumber: t.technicalDataAuxiliaryHookSerialNumber,
        // Wire Rope
        wireRopeMainLoadHoistDrumDiameter: t.technicalDataWireRopeMainLoadHoistDrumDiameter,
        wireRopeMainLoadHoistDrumType: t.technicalDataWireRopeMainLoadHoistDrumType,
        wireRopeMainLoadHoistDrumConstruction: t.technicalDataWireRopeMainLoadHoistDrumConstruction,
        wireRopeMainLoadHoistDrumBreakingStrength: t.technicalDataWireRopeMainLoadHoistDrumBreakingStrength,
        wireRopeMainLoadHoistDrumLength: t.technicalDataWireRopeMainLoadHoistDrumLength,
        wireRopeAuxiliaryLoadHoistDrumDiameter: t.technicalDataWireRopeAuxiliaryLoadHoistDrumDiameter,
        wireRopeAuxiliaryLoadHoistDrumType: t.technicalDataWireRopeAuxiliaryLoadHoistDrumType,
        wireRopeAuxiliaryLoadHoistDrumConstruction: t.technicalDataWireRopeAuxiliaryLoadHoistDrumConstruction,
        wireRopeAuxiliaryLoadHoistDrumLength: t.technicalDataWireRopeAuxiliaryLoadHoistDrumLength,
        wireRopeAuxiliaryLoadHoistDrumBreakingStrength: t.technicalDataWireRopeAuxiliaryLoadHoistDrumBreakingStrength,
        wireRopeBoomHoistDrumDiameter: t.technicalDataWireRopeBoomHoistDrumDiameter,
        wireRopeBoomHoistDrumType: t.technicalDataWireRopeBoomHoistDrumType,
        wireRopeBoomHoistDrumConstruction: t.technicalDataWireRopeBoomHoistDrumConstruction,
        wireRopeBoomHoistDrumLength: t.technicalDataWireRopeBoomHoistDrumLength,
        wireRopeBoomHoistDrumBreakingStrength: t.technicalDataWireRopeBoomHoistDrumBreakingStrength,

        // III. PEMERIKSAAN VISUAL (Lengkap)
        foundationAndBoltsCorrosionMemenuhi: getCheckmark(i.visualFoundationAndBoltsCorrosionResult?.status),
        foundationAndBoltsCorrosionTidakMemenuhi: getOppositeCheckmark(i.visualFoundationAndBoltsCorrosionResult?.status),
        foundationAndBoltsCorrosionResult: i.visualFoundationAndBoltsCorrosionResult?.result,
        foundationAndBoltsCracksMemenuhi: getCheckmark(i.visualFoundationAndBoltsCracksResult?.status),
        foundationAndBoltsCracksTidakMemenuhi: getOppositeCheckmark(i.visualFoundationAndBoltsCracksResult?.status),
        foundationAndBoltsCracksResult: i.visualFoundationAndBoltsCracksResult?.result,
        foundationAndBoltsDeformationMemenuhi: getCheckmark(i.visualFoundationAndBoltsDeformationResult?.status),
        foundationAndBoltsDeformationTidakMemenuhi: getOppositeCheckmark(i.visualFoundationAndBoltsDeformationResult?.status),
        foundationAndBoltsDeformationResult: i.visualFoundationAndBoltsDeformationResult?.result,
        foundationAndBoltsTightnessMemenuhi: getCheckmark(i.visualFoundationAndBoltsTightnessResult?.status),
        foundationAndBoltsTightnessTidakMemenuhi: getOppositeCheckmark(i.visualFoundationAndBoltsTightnessResult?.status),
        foundationAndBoltsTightnessResult: i.visualFoundationAndBoltsTightnessResult?.result,
        frameColumnsOnFoundationCorrosionMemenuhi: getCheckmark(i.visualFrameColumnsOnFoundationCorrosionResult?.status),
        frameColumnsOnFoundationCorrosionTidakMemenuhi: getOppositeCheckmark(i.visualFrameColumnsOnFoundationCorrosionResult?.status),
        frameColumnsOnFoundationCorrosionResult: i.visualFrameColumnsOnFoundationCorrosionResult?.result,
        frameColumnsOnFoundationCracksMemenuhi: getCheckmark(i.visualFrameColumnsOnFoundationCracksResult?.status),
        frameColumnsOnFoundationCracksTidakMemenuhi: getOppositeCheckmark(i.visualFrameColumnsOnFoundationCracksResult?.status),
        frameColumnsOnFoundationCracksResult: i.visualFrameColumnsOnFoundationCracksResult?.result,
        frameColumnsOnFoundationDeformationMemenuhi: getCheckmark(i.visualFrameColumnsOnFoundationDeformationResult?.status),
        frameColumnsOnFoundationDeformationTidakMemenuhi: getOppositeCheckmark(i.visualFrameColumnsOnFoundationDeformationResult?.status),
        frameColumnsOnFoundationDeformationResult: i.visualFrameColumnsOnFoundationDeformationResult?.result,
        frameColumnsOnFoundationFasteningMemenuhi: getCheckmark(i.visualFrameColumnsOnFoundationFasteningResult?.status),
        frameColumnsOnFoundationFasteningTidakMemenuhi: getOppositeCheckmark(i.visualFrameColumnsOnFoundationFasteningResult?.status),
        frameColumnsOnFoundationFasteningResult: i.visualFrameColumnsOnFoundationFasteningResult?.result,
        frameColumnsOnFoundationTransverseReinforcementMemenuhi: getCheckmark(i.visualFrameColumnsOnFoundationTransverseReinforcementResult?.status),
        frameColumnsOnFoundationTransverseReinforcementTidakMemenuhi: getOppositeCheckmark(i.visualFrameColumnsOnFoundationTransverseReinforcementResult?.status),
        frameColumnsOnFoundationTransverseReinforcementResult: i.visualFrameColumnsOnFoundationTransverseReinforcementResult?.result,
        frameColumnsOnFoundationDiagonalReinforcementMemenuhi: getCheckmark(i.visualFrameColumnsOnFoundationDiagonalReinforcementResult?.status),
        frameColumnsOnFoundationDiagonalReinforcementTidakMemenuhi: getOppositeCheckmark(i.visualFrameColumnsOnFoundationDiagonalReinforcementResult?.status),
        frameColumnsOnFoundationDiagonalReinforcementResult: i.visualFrameColumnsOnFoundationDiagonalReinforcementResult?.result,
        ladderCorrosionMemenuhi: getCheckmark(i.visualLadderCorrosionResult?.status),
        ladderCorrosionTidakMemenuhi: getOppositeCheckmark(i.visualLadderCorrosionResult?.status),
        ladderCorrosionResult: i.visualLadderCorrosionResult?.result,
        ladderCracksMemenuhi: getCheckmark(i.visualLadderCracksResult?.status),
        ladderCracksTidakMemenuhi: getOppositeCheckmark(i.visualLadderCracksResult?.status),
        ladderCracksResult: i.visualLadderCracksResult?.result,
        ladderDeformationMemenuhi: getCheckmark(i.visualLadderDeformationResult?.status),
        ladderDeformationTidakMemenuhi: getOppositeCheckmark(i.visualLadderDeformationResult?.status),
        ladderDeformationResult: i.visualLadderDeformationResult?.result,
        ladderFasteningMemenuhi: getCheckmark(i.visualLadderFasteningResult?.status),
        ladderFasteningTidakMemenuhi: getOppositeCheckmark(i.visualLadderFasteningResult?.status),
        ladderFasteningResult: i.visualLadderFasteningResult?.result,
        workingPlatformCorrosionMemenuhi: getCheckmark(i.visualWorkingPlatformCorrosionResult?.status),
        workingPlatformCorrosionTidakMemenuhi: getOppositeCheckmark(i.visualWorkingPlatformCorrosionResult?.status),
        workingPlatformCorrosionResult: i.visualWorkingPlatformCorrosionResult?.result,
        workingPlatformCracksMemenuhi: getCheckmark(i.visualWorkingPlatformCracksResult?.status),
        workingPlatformCracksTidakMemenuhi: getOppositeCheckmark(i.visualWorkingPlatformCracksResult?.status),
        workingPlatformCracksResult: i.visualWorkingPlatformCracksResult?.result,
        workingPlatformDeformationMemenuhi: getCheckmark(i.visualWorkingPlatformDeformationResult?.status),
        workingPlatformDeformationTidakMemenuhi: getOppositeCheckmark(i.visualWorkingPlatformDeformationResult?.status),
        workingPlatformDeformationResult: i.visualWorkingPlatformDeformationResult?.result,
        workingPlatformFasteningMemenuhi: getCheckmark(i.visualWorkingPlatformFasteningResult?.status),
        workingPlatformFasteningTidakMemenuhi: getOppositeCheckmark(i.visualWorkingPlatformFasteningResult?.status),
        workingPlatformFasteningResult: i.visualWorkingPlatformFasteningResult?.result,
        outriggersOutriggerArmHousingMemenuhi: getCheckmark(i.visualOutriggersOutriggerArmHousingResult?.status),
        outriggersOutriggerArmHousingTidakMemenuhi: getOppositeCheckmark(i.visualOutriggersOutriggerArmHousingResult?.status),
        outriggersOutriggerArmHousingResult: i.visualOutriggersOutriggerArmHousingResult?.result,
        outriggersOutriggerArmsMemenuhi: getCheckmark(i.visualOutriggersOutriggerArmsResult?.status),
        outriggersOutriggerArmsTidakMemenuhi: getOppositeCheckmark(i.visualOutriggersOutriggerArmsResult?.status),
        outriggersOutriggerArmsResult: i.visualOutriggersOutriggerArmsResult?.result,
        outriggersJackMemenuhi: getCheckmark(i.visualOutriggersJackResult?.status),
        outriggersJackTidakMemenuhi: getOppositeCheckmark(i.visualOutriggersJackResult?.status),
        outriggersJackResult: i.visualOutriggersJackResult?.result,
        outriggersOutriggerPadsMemenuhi: getCheckmark(i.visualOutriggersOutriggerPadsResult?.status),
        outriggersOutriggerPadsTidakMemenuhi: getOppositeCheckmark(i.visualOutriggersOutriggerPadsResult?.status),
        outriggersOutriggerPadsResult: i.visualOutriggersOutriggerPadsResult?.result,
        outriggersHousingConnectionToChassisMemenuhi: getCheckmark(i.visualOutriggersHousingConnectionToChassisResult?.status),
        outriggersHousingConnectionToChassisTidakMemenuhi: getOppositeCheckmark(i.visualOutriggersHousingConnectionToChassisResult?.status),
        outriggersHousingConnectionToChassisResult: i.visualOutriggersHousingConnectionToChassisResult?.result,
        outriggersOutriggerSafetyLocksMemenuhi: getCheckmark(i.visualOutriggersOutriggerSafetyLocksResult?.status),
        outriggersOutriggerSafetyLocksTidakMemenuhi: getOppositeCheckmark(i.visualOutriggersOutriggerSafetyLocksResult?.status),
        outriggersOutriggerSafetyLocksResult: i.visualOutriggersOutriggerSafetyLocksResult?.result,
        turntableSlewingRollerBearingMemenuhi: getCheckmark(i.visualTurntableSlewingRollerBearingResult?.status),
        turntableSlewingRollerBearingTidakMemenuhi: getOppositeCheckmark(i.visualTurntableSlewingRollerBearingResult?.status),
        turntableSlewingRollerBearingResult: i.visualTurntableSlewingRollerBearingResult?.result,
        turntableBrakeHousingMemenuhi: getCheckmark(i.visualTurntableBrakeHousingResult?.status),
        turntableBrakeHousingTidakMemenuhi: getOppositeCheckmark(i.visualTurntableBrakeHousingResult?.status),
        turntableBrakeHousingResult: i.visualTurntableBrakeHousingResult?.result,
        turntableBrakeLiningsAndShoesMemenuhi: getCheckmark(i.visualTurntableBrakeLiningsAndShoesResult?.status),
        turntableBrakeLiningsAndShoesTidakMemenuhi: getOppositeCheckmark(i.visualTurntableBrakeLiningsAndShoesResult?.status),
        turntableBrakeLiningsAndShoesResult: i.visualTurntableBrakeLiningsAndShoesResult?.result,
        turntableDrumSurfaceMemenuhi: getCheckmark(i.visualTurntableDrumSurfaceResult?.status),
        turntableDrumSurfaceTidakMemenuhi: getOppositeCheckmark(i.visualTurntableDrumSurfaceResult?.status),
        turntableDrumSurfaceResult: i.visualTurntableDrumSurfaceResult?.result,
        turntablePressureCylinderMemenuhi: getCheckmark(i.visualTurntablePressureCylinderResult?.status),
        turntablePressureCylinderTidakMemenuhi: getOppositeCheckmark(i.visualTurntablePressureCylinderResult?.status),
        turntablePressureCylinderResult: i.visualTurntablePressureCylinderResult?.result,
        turntableDrumAxleMemenuhi: getCheckmark(i.visualTurntableDrumAxleResult?.status),
        turntableDrumAxleTidakMemenuhi: getOppositeCheckmark(i.visualTurntableDrumAxleResult?.status),
        turntableDrumAxleResult: i.visualTurntableDrumAxleResult?.result,
        turntableLeversPinsBoltsMemenuhi: getCheckmark(i.visualTurntableLeversPinsBoltsResult?.status),
        turntableLeversPinsBoltsTidakMemenuhi: getOppositeCheckmark(i.visualTurntableLeversPinsBoltsResult?.status),
        turntableLeversPinsBoltsResult: i.visualTurntableLeversPinsBoltsResult?.result,
        turntableGuardMemenuhi: getCheckmark(i.visualTurntableGuardResult?.status),
        turntableGuardTidakMemenuhi: getOppositeCheckmark(i.visualTurntableGuardResult?.status),
        turntableGuardResult: i.visualTurntableGuardResult?.result,
        latticeBoomMainBoomMemenuhi: getCheckmark(i.visualLatticeBoomMainBoomResult?.status),
        latticeBoomMainBoomTidakMemenuhi: getOppositeCheckmark(i.visualLatticeBoomMainBoomResult?.status),
        latticeBoomMainBoomResult: i.visualLatticeBoomMainBoomResult?.result,
        latticeBoomBoomSectionMemenuhi: getCheckmark(i.visualLatticeBoomBoomSectionResult?.status),
        latticeBoomBoomSectionTidakMemenuhi: getOppositeCheckmark(i.visualLatticeBoomBoomSectionResult?.status),
        latticeBoomBoomSectionResult: i.visualLatticeBoomBoomSectionResult?.result,
        latticeBoomTopPulleyMemenuhi: getCheckmark(i.visualLatticeBoomTopPulleyResult?.status),
        latticeBoomTopPulleyTidakMemenuhi: getOppositeCheckmark(i.visualLatticeBoomTopPulleyResult?.status),
        latticeBoomTopPulleyResult: i.visualLatticeBoomTopPulleyResult?.result,
        latticeBoomPulleyGuardMemenuhi: getCheckmark(i.visualLatticeBoomPulleyGuardResult?.status),
        latticeBoomPulleyGuardTidakMemenuhi: getOppositeCheckmark(i.visualLatticeBoomPulleyGuardResult?.status),
        latticeBoomPulleyGuardResult: i.visualLatticeBoomPulleyGuardResult?.result,
        latticeBoomWireRopeGuardMemenuhi: getCheckmark(i.visualLatticeBoomWireRopeGuardResult?.status),
        latticeBoomWireRopeGuardTidakMemenuhi: getOppositeCheckmark(i.visualLatticeBoomWireRopeGuardResult?.status),
        latticeBoomWireRopeGuardResult: i.visualLatticeBoomWireRopeGuardResult?.result,
        latticeBoomPulleyGrooveLipMemenuhi: getCheckmark(i.visualLatticeBoomPulleyGrooveLipResult?.status),
        latticeBoomPulleyGrooveLipTidakMemenuhi: getOppositeCheckmark(i.visualLatticeBoomPulleyGrooveLipResult?.status),
        latticeBoomPulleyGrooveLipResult: i.visualLatticeBoomPulleyGrooveLipResult?.result,
        latticeBoomPivotPinMemenuhi: getCheckmark(i.visualLatticeBoomPivotPinResult?.status),
        latticeBoomPivotPinTidakMemenuhi: getOppositeCheckmark(i.visualLatticeBoomPivotPinResult?.status),
        latticeBoomPivotPinResult: i.visualLatticeBoomPivotPinResult?.result,
        latticeBoomWireRopeGuidePulleyMemenuhi: getCheckmark(i.visualLatticeBoomWireRopeGuidePulleyResult?.status),
        latticeBoomWireRopeGuidePulleyTidakMemenuhi: getOppositeCheckmark(i.visualLatticeBoomWireRopeGuidePulleyResult?.status),
        latticeBoomWireRopeGuidePulleyResult: i.visualLatticeBoomWireRopeGuidePulleyResult?.result,
        steeringMainClutchMemenuhi: getCheckmark(i.visualSteeringMainClutchResult?.status),
        steeringMainClutchTidakMemenuhi: getOppositeCheckmark(i.visualSteeringMainClutchResult?.status),
        steeringMainClutchResult: i.visualSteeringMainClutchResult?.result,
        transmissionTransmissionMemenuhi: getCheckmark(i.visualTransmissionResult?.status),
        transmissionTransmissionTidakMemenuhi: getOppositeCheckmark(i.visualTransmissionResult?.status),
        transmissionTransmissionResult: i.visualTransmissionResult?.result,
        steeringFrontWheelMemenuhi: getCheckmark(i.visualSteeringFrontWheelResult?.status),
        steeringFrontWheelTidakMemenuhi: getOppositeCheckmark(i.visualSteeringFrontWheelResult?.status),
        steeringFrontWheelResult: i.visualSteeringFrontWheelResult?.result,
        steeringMiddleWheelMemenuhi: getCheckmark(i.visualSteeringMiddleWheelResult?.status),
        steeringMiddleWheelTidakMemenuhi: getOppositeCheckmark(i.visualSteeringMiddleWheelResult?.status),
        steeringMiddleWheelResult: i.visualSteeringMiddleWheelResult?.result,
        steeringRearWheelMemenuhi: getCheckmark(i.visualSteeringRearWheelResult?.status),
        steeringRearWheelTidakMemenuhi: getOppositeCheckmark(i.visualSteeringRearWheelResult?.status),
        steeringRearWheelResult: i.visualSteeringRearWheelResult?.result,
        brakeServiceBrakeMemenuhi: getCheckmark(i.visualBrakeServiceBrakeResult?.status),
        brakeServiceBrakeTidakMemenuhi: getOppositeCheckmark(i.visualBrakeServiceBrakeResult?.status),
        brakeServiceBrakeResult: i.visualBrakeServiceBrakeResult?.result,
        brakeParkingBrakeMemenuhi: getCheckmark(i.visualBrakeParkingBrakeResult?.status),
        brakeParkingBrakeTidakMemenuhi: getOppositeCheckmark(i.visualBrakeParkingBrakeResult?.status),
        brakeParkingBrakeResult: i.visualBrakeParkingBrakeResult?.result,
        brakeBrakeHousingMemenuhi: getCheckmark(i.visualBrakeBrakeHousingResult?.status),
        brakeBrakeHousingTidakMemenuhi: getOppositeCheckmark(i.visualBrakeBrakeHousingResult?.status),
        brakeBrakeHousingResult: i.visualBrakeBrakeHousingResult?.result,
        brakeBrakeLiningsAndShoesMemenuhi: getCheckmark(i.visualBrakeBrakeLiningsAndShoesResult?.status),
        brakeBrakeLiningsAndShoesTidakMemenuhi: getOppositeCheckmark(i.visualBrakeBrakeLiningsAndShoesResult?.status),
        brakeBrakeLiningsAndShoesResult: i.visualBrakeBrakeLiningsAndShoesResult?.result,
        brakeDrumSurfaceMemenuhi: getCheckmark(i.visualBrakeDrumSurfaceResult?.status),
        brakeDrumSurfaceTidakMemenuhi: getOppositeCheckmark(i.visualBrakeDrumSurfaceResult?.status),
        brakeDrumSurfaceResult: i.visualBrakeDrumSurfaceResult?.result,
        brakeLeversPinsBoltsMemenuhi: getCheckmark(i.visualBrakeLeversPinsBoltsResult?.status),
        brakeLeversPinsBoltsTidakMemenuhi: getOppositeCheckmark(i.visualBrakeLeversPinsBoltsResult?.status),
        brakeLeversPinsBoltsResult: i.visualBrakeLeversPinsBoltsResult?.result,
        brakeGuardMemenuhi: getCheckmark(i.visualBrakeGuardResult?.status),
        brakeGuardTidakMemenuhi: getOppositeCheckmark(i.visualBrakeGuardResult?.status),
        brakeGuardResult: i.visualBrakeGuardResult?.result,
        travelDrumClutchHousingMemenuhi: getCheckmark(i.visualTravelDrumClutchHousingResult?.status),
        travelDrumClutchHousingTidakMemenuhi: getOppositeCheckmark(i.visualTravelDrumClutchHousingResult?.status),
        travelDrumClutchHousingResult: i.visualTravelDrumClutchHousingResult?.result,
        travelDrumClutchLiningMemenuhi: getCheckmark(i.visualTravelDrumClutchLiningResult?.status),
        travelDrumClutchLiningTidakMemenuhi: getOppositeCheckmark(i.visualTravelDrumClutchLiningResult?.status),
        travelDrumClutchLiningResult: i.visualTravelDrumClutchLiningResult?.result,
        travelDrumClutchDrumSurfaceMemenuhi: getCheckmark(i.visualTravelDrumClutchDrumSurfaceResult?.status),
        travelDrumClutchDrumSurfaceTidakMemenuhi: getOppositeCheckmark(i.visualTravelDrumClutchDrumSurfaceResult?.status),
        travelDrumClutchDrumSurfaceResult: i.visualTravelDrumClutchDrumSurfaceResult?.result,
        travelDrumLeversPinsBoltsMemenuhi: getCheckmark(i.visualTravelDrumLeversPinsBoltsResult?.status),
        travelDrumLeversPinsBoltsTidakMemenuhi: getOppositeCheckmark(i.visualTravelDrumLeversPinsBoltsResult?.status),
        travelDrumLeversPinsBoltsResult: i.visualTravelDrumLeversPinsBoltsResult?.result,
        travelDrumGuardMemenuhi: getCheckmark(i.visualTravelDrumGuardResult?.status),
        travelDrumGuardTidakMemenuhi: getOppositeCheckmark(i.visualTravelDrumGuardResult?.status),
        travelDrumGuardResult: i.visualTravelDrumGuardResult?.result,
        mainWinchDrumMountingMemenuhi: getCheckmark(i.visualMainWinchDrumMountingResult?.status),
        mainWinchDrumMountingTidakMemenuhi: getOppositeCheckmark(i.visualMainWinchDrumMountingResult?.status),
        mainWinchDrumMountingResult: i.visualMainWinchDrumMountingResult?.result,
        mainWinchWindingDrumSurfaceMemenuhi: getCheckmark(i.visualMainWinchWindingDrumSurfaceResult?.status),
        mainWinchWindingDrumSurfaceTidakMemenuhi: getOppositeCheckmark(i.visualMainWinchWindingDrumSurfaceResult?.status),
        mainWinchWindingDrumSurfaceResult: i.visualMainWinchWindingDrumSurfaceResult?.result,
        mainWinchBrakeLiningsAndShoesMemenuhi: getCheckmark(i.visualMainWinchBrakeLiningsAndShoesResult?.status),
        mainWinchBrakeLiningsAndShoesTidakMemenuhi: getOppositeCheckmark(i.visualMainWinchBrakeLiningsAndShoesResult?.status),
        mainWinchBrakeLiningsAndShoesResult: i.visualMainWinchBrakeLiningsAndShoesResult?.result,
        mainWinchBrakeDrumSurfaceMemenuhi: getCheckmark(i.visualMainWinchBrakeDrumSurfaceResult?.status),
        mainWinchBrakeDrumSurfaceTidakMemenuhi: getOppositeCheckmark(i.visualMainWinchBrakeDrumSurfaceResult?.status),
        mainWinchBrakeDrumSurfaceResult: i.visualMainWinchBrakeDrumSurfaceResult?.result,
        mainWinchBrakeHousingMemenuhi: getCheckmark(i.visualMainWinchBrakeHousingResult?.status),
        mainWinchBrakeHousingTidakMemenuhi: getOppositeCheckmark(i.visualMainWinchBrakeHousingResult?.status),
        mainWinchBrakeHousingResult: i.visualMainWinchBrakeHousingResult?.result,
        mainWinchClutchLiningsAndShoesMemenuhi: getCheckmark(i.visualMainWinchClutchLiningsAndShoesResult?.status),
        mainWinchClutchLiningsAndShoesTidakMemenuhi: getOppositeCheckmark(i.visualMainWinchClutchLiningsAndShoesResult?.status),
        mainWinchClutchLiningsAndShoesResult: i.visualMainWinchClutchLiningsAndShoesResult?.result,
        mainWinchClutchDrumSurfaceMemenuhi: getCheckmark(i.visualMainWinchClutchDrumSurfaceResult?.status),
        mainWinchClutchDrumSurfaceTidakMemenuhi: getOppositeCheckmark(i.visualMainWinchClutchDrumSurfaceResult?.status),
        mainWinchClutchDrumSurfaceResult: i.visualMainWinchClutchDrumSurfaceResult?.result,
        mainWinchGrooveMemenuhi: getCheckmark(i.visualMainWinchGrooveResult?.status),
        mainWinchGrooveTidakMemenuhi: getOppositeCheckmark(i.visualMainWinchGrooveResult?.status),
        mainWinchGrooveResult: i.visualMainWinchGrooveResult?.result,
        mainWinchGrooveLipMemenuhi: getCheckmark(i.visualMainWinchGrooveLipResult?.status),
        mainWinchGrooveLipTidakMemenuhi: getOppositeCheckmark(i.visualMainWinchGrooveLipResult?.status),
        mainWinchGrooveLipResult: i.visualMainWinchGrooveLipResult?.result,
        mainWinchFlangesMemenuhi: getCheckmark(i.visualMainWinchFlangesResult?.status),
        mainWinchFlangesTidakMemenuhi: getOppositeCheckmark(i.visualMainWinchFlangesResult?.status),
        mainWinchFlangesResult: i.visualMainWinchFlangesResult?.result,
        mainWinchBrakeActuatorLeversPinsAndBoltsMemenuhi: getCheckmark(i.visualMainWinchBrakeActuatorLeversPinsAndBoltsResult?.status),
        mainWinchBrakeActuatorLeversPinsAndBoltsTidakMemenuhi: getOppositeCheckmark(i.visualMainWinchBrakeActuatorLeversPinsAndBoltsResult?.status),
        mainWinchBrakeActuatorLeversPinsAndBoltsResult: i.visualMainWinchBrakeActuatorLeversPinsAndBoltsResult?.result,
        auxiliaryWinchDrumMountingMemenuhi: getCheckmark(i.visualAuxiliaryWinchDrumMountingResult?.status),
        auxiliaryWinchDrumMountingTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWinchDrumMountingResult?.status),
        auxiliaryWinchDrumMountingResult: i.visualAuxiliaryWinchDrumMountingResult?.result,
        auxiliaryWinchWindingDrumSurfaceMemenuhi: getCheckmark(i.visualAuxiliaryWinchWindingDrumSurfaceResult?.status),
        auxiliaryWinchWindingDrumSurfaceTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWinchWindingDrumSurfaceResult?.status),
        auxiliaryWinchWindingDrumSurfaceResult: i.visualAuxiliaryWinchWindingDrumSurfaceResult?.result,
        auxiliaryWinchBrakeLiningsAndShoesMemenuhi: getCheckmark(i.visualAuxiliaryWinchBrakeLiningsAndShoesResult?.status),
        auxiliaryWinchBrakeLiningsAndShoesTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWinchBrakeLiningsAndShoesResult?.status),
        auxiliaryWinchBrakeLiningsAndShoesResult: i.visualAuxiliaryWinchBrakeLiningsAndShoesResult?.result,
        auxiliaryWinchBrakeDrumSurfaceMemenuhi: getCheckmark(i.visualAuxiliaryWinchBrakeDrumSurfaceResult?.status),
        auxiliaryWinchBrakeDrumSurfaceTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWinchBrakeDrumSurfaceResult?.status),
        auxiliaryWinchBrakeDrumSurfaceResult: i.visualAuxiliaryWinchBrakeDrumSurfaceResult?.result,
        auxiliaryWinchBrakeHousingMemenuhi: getCheckmark(i.visualAuxiliaryWinchBrakeHousingResult?.status),
        auxiliaryWinchBrakeHousingTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWinchBrakeHousingResult?.status),
        auxiliaryWinchBrakeHousingResult: i.visualAuxiliaryWinchBrakeHousingResult?.result,
        auxiliaryWinchClutchLiningsAndShoesMemenuhi: getCheckmark(i.visualAuxiliaryWinchClutchLiningsAndShoesResult?.status),
        auxiliaryWinchClutchLiningsAndShoesTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWinchClutchLiningsAndShoesResult?.status),
        auxiliaryWinchClutchLiningsAndShoesResult: i.visualAuxiliaryWinchClutchLiningsAndShoesResult?.result,
        auxiliaryWinchClutchDrumSurfaceMemenuhi: getCheckmark(i.visualAuxiliaryWinchClutchDrumSurfaceResult?.status),
        auxiliaryWinchClutchDrumSurfaceTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWinchClutchDrumSurfaceResult?.status),
        auxiliaryWinchClutchDrumSurfaceResult: i.visualAuxiliaryWinchClutchDrumSurfaceResult?.result,
        auxiliaryWinchGrooveMemenuhi: getCheckmark(i.visualAuxiliaryWinchGrooveResult?.status),
        auxiliaryWinchGrooveTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWinchGrooveResult?.status),
        auxiliaryWinchGrooveResult: i.visualAuxiliaryWinchGrooveResult?.result,
        auxiliaryWinchGrooveLipMemenuhi: getCheckmark(i.visualAuxiliaryWinchGrooveLipResult?.status),
        auxiliaryWinchGrooveLipTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWinchGrooveLipResult?.status),
        auxiliaryWinchGrooveLipResult: i.visualAuxiliaryWinchGrooveLipResult?.result,
        auxiliaryWinchFlangesMemenuhi: getCheckmark(i.visualAuxiliaryWinchFlangesResult?.status),
        auxiliaryWinchFlangesTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWinchFlangesResult?.status),
        auxiliaryWinchFlangesResult: i.visualAuxiliaryWinchFlangesResult?.result,
        auxiliaryWinchBrakeActuatorLeversPinsAndBoltsMemenuhi: getCheckmark(i.visualAuxiliaryWinchBrakeActuatorLeversPinsAndBoltsResult?.status),
        auxiliaryWinchBrakeActuatorLeversPinsAndBoltsTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWinchBrakeActuatorLeversPinsAndBoltsResult?.status),
        auxiliaryWinchBrakeActuatorLeversPinsAndBoltsResult: i.visualAuxiliaryWinchBrakeActuatorLeversPinsAndBoltsResult?.result,
        hoistGearBlockLubricationMemenuhi: getCheckmark(i.visualHoistGearBlockLubricationResult?.status),
        hoistGearBlockLubricationTidakMemenuhi: getOppositeCheckmark(i.visualHoistGearBlockLubricationResult?.status),
        hoistGearBlockLubricationResult: i.visualHoistGearBlockLubricationResult?.result,
        hoistGearBlockOilSealMemenuhi: getCheckmark(i.visualHoistGearBlockOilSealResult?.status),
        hoistGearBlockOilSealTidakMemenuhi: getOppositeCheckmark(i.visualHoistGearBlockOilSealResult?.status),
        hoistGearBlockOilSealResult: i.visualHoistGearBlockOilSealResult?.result,
        mainPulleyPulleyGrooveMemenuhi: getCheckmark(i.visualMainPulleyPulleyGrooveResult?.status),
        mainPulleyPulleyGrooveTidakMemenuhi: getOppositeCheckmark(i.visualMainPulleyPulleyGrooveResult?.status),
        mainPulleyPulleyGrooveResult: i.visualMainPulleyPulleyGrooveResult?.result,
        mainPulleyPulleyGrooveLipMemenuhi: getCheckmark(i.visualMainPulleyPulleyGrooveLipResult?.status),
        mainPulleyPulleyGrooveLipTidakMemenuhi: getOppositeCheckmark(i.visualMainPulleyPulleyGrooveLipResult?.status),
        mainPulleyPulleyGrooveLipResult: i.visualMainPulleyPulleyGrooveLipResult?.result,
        mainPulleyPulleyPinMemenuhi: getCheckmark(i.visualMainPulleyPulleyPinResult?.status),
        mainPulleyPulleyPinTidakMemenuhi: getOppositeCheckmark(i.visualMainPulleyPulleyPinResult?.status),
        mainPulleyPulleyPinResult: i.visualMainPulleyPulleyPinResult?.result,
        mainPulleyBearingMemenuhi: getCheckmark(i.visualMainPulleyBearingResult?.status),
        mainPulleyBearingTidakMemenuhi: getOppositeCheckmark(i.visualMainPulleyBearingResult?.status),
        mainPulleyBearingResult: i.visualMainPulleyBearingResult?.result,
        mainPulleyPulleyGuardMemenuhi: getCheckmark(i.visualMainPulleyPulleyGuardResult?.status),
        mainPulleyPulleyGuardTidakMemenuhi: getOppositeCheckmark(i.visualMainPulleyPulleyGuardResult?.status),
        mainPulleyPulleyGuardResult: i.visualMainPulleyPulleyGuardResult?.result,
        mainPulleyWireRopeGuardMemenuhi: getCheckmark(i.visualMainPulleyWireRopeGuardResult?.status),
        mainPulleyWireRopeGuardTidakMemenuhi: getOppositeCheckmark(i.visualMainPulleyWireRopeGuardResult?.status),
        mainPulleyWireRopeGuardResult: i.visualMainPulleyWireRopeGuardResult?.result,
        mainHookVisualSwivelNutAndBearingMemenuhi: getCheckmark(i.visualMainHookSwivelNutAndBearingResult?.status),
        mainHookVisualSwivelNutAndBearingTidakMemenuhi: getOppositeCheckmark(i.visualMainHookSwivelNutAndBearingResult?.status),
        mainHookVisualSwivelNutAndBearingResult: i.visualMainHookSwivelNutAndBearingResult?.result,
        mainHookVisualTrunnionMemenuhi: getCheckmark(i.visualMainHookTrunnionResult?.status),
        mainHookVisualTrunnionTidakMemenuhi: getOppositeCheckmark(i.visualMainHookTrunnionResult?.status),
        mainHookVisualTrunnionResult: i.visualMainHookTrunnionResult?.result,
        mainHookVisualSafetyLatchMemenuhi: getCheckmark(i.visualMainHookSafetyLatchResult?.status),
        mainHookVisualSafetyLatchTidakMemenuhi: getOppositeCheckmark(i.visualMainHookSafetyLatchResult?.status),
        mainHookVisualSafetyLatchResult: i.visualMainHookSafetyLatchResult?.result,
        auxiliaryHookVisualFreeFallWeightMemenuhi: getCheckmark(i.visualAuxiliaryHookFreeFallWeightResult?.status),
        auxiliaryHookVisualFreeFallWeightTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryHookFreeFallWeightResult?.status),
        auxiliaryHookVisualFreeFallWeightResult: i.visualAuxiliaryHookFreeFallWeightResult?.result,
        auxiliaryHookVisualSwivelNutAndBearingMemenuhi: getCheckmark(i.visualAuxiliaryHookSwivelNutAndBearingResult?.status),
        auxiliaryHookVisualSwivelNutAndBearingTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryHookSwivelNutAndBearingResult?.status),
        auxiliaryHookVisualSwivelNutAndBearingResult: i.visualAuxiliaryHookSwivelNutAndBearingResult?.result,
        auxiliaryHookVisualSafetyLatchMemenuhi: getCheckmark(i.visualAuxiliaryHookSafetyLatchResult?.status),
        auxiliaryHookVisualSafetyLatchTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryHookSafetyLatchResult?.status),
        auxiliaryHookVisualSafetyLatchResult: i.visualAuxiliaryHookSafetyLatchResult?.result,
        mainWireRopeVisualCorrosionMemenuhi: getCheckmark(i.visualMainWireRopeCorrosionResult?.status),
        mainWireRopeVisualCorrosionTidakMemenuhi: getOppositeCheckmark(i.visualMainWireRopeCorrosionResult?.status),
        mainWireRopeVisualCorrosionResult: i.visualMainWireRopeCorrosionResult?.result,
        mainWireRopeVisualWearMemenuhi: getCheckmark(i.visualMainWireRopeWearResult?.status),
        mainWireRopeVisualWearTidakMemenuhi: getOppositeCheckmark(i.visualMainWireRopeWearResult?.status),
        mainWireRopeVisualWearResult: i.visualMainWireRopeWearResult?.result,
        mainWireRopeVisualBreakageMemenuhi: getCheckmark(i.visualMainWireRopeBreakageResult?.status),
        mainWireRopeVisualBreakageTidakMemenuhi: getOppositeCheckmark(i.visualMainWireRopeBreakageResult?.status),
        mainWireRopeVisualBreakageResult: i.visualMainWireRopeBreakageResult?.result,
        mainWireRopeVisualDeformationMemenuhi: getCheckmark(i.visualMainWireRopeDeformationResult?.status),
        mainWireRopeVisualDeformationTidakMemenuhi: getOppositeCheckmark(i.visualMainWireRopeDeformationResult?.status),
        mainWireRopeVisualDeformationResult: i.visualMainWireRopeDeformationResult?.result,
        auxiliaryWireRopeVisualCorrosionMemenuhi: getCheckmark(i.visualAuxiliaryWireRopeCorrosionResult?.status),
        auxiliaryWireRopeVisualCorrosionTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWireRopeCorrosionResult?.status),
        auxiliaryWireRopeVisualCorrosionResult: i.visualAuxiliaryWireRopeCorrosionResult?.result,
        auxiliaryWireRopeVisualWearMemenuhi: getCheckmark(i.visualAuxiliaryWireRopeWearResult?.status),
        auxiliaryWireRopeVisualWearTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWireRopeWearResult?.status),
        auxiliaryWireRopeVisualWearResult: i.visualAuxiliaryWireRopeWearResult?.result,
        auxiliaryWireRopeVisualBreakageMemenuhi: getCheckmark(i.visualAuxiliaryWireRopeBreakageResult?.status),
        auxiliaryWireRopeVisualBreakageTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWireRopeBreakageResult?.status),
        auxiliaryWireRopeVisualBreakageResult: i.visualAuxiliaryWireRopeBreakageResult?.result,
        auxiliaryWireRopeVisualDeformationMemenuhi: getCheckmark(i.visualAuxiliaryWireRopeDeformationResult?.status),
        auxiliaryWireRopeVisualDeformationTidakMemenuhi: getOppositeCheckmark(i.visualAuxiliaryWireRopeDeformationResult?.status),
        auxiliaryWireRopeVisualDeformationResult: i.visualAuxiliaryWireRopeDeformationResult?.result,
        limitSwitchLsLongTravelMemenuhi: getCheckmark(i.visualLimitSwitchLongTravelResult?.status),
        limitSwitchLsLongTravelTidakMemenuhi: getOppositeCheckmark(i.visualLimitSwitchLongTravelResult?.status),
        limitSwitchLsLongTravelResult: i.visualLimitSwitchLongTravelResult?.result,
        limitSwitchLsCrossTravelMemenuhi: getCheckmark(i.visualLimitSwitchCrossTravelResult?.status),
        limitSwitchLsCrossTravelTidakMemenuhi: getOppositeCheckmark(i.visualLimitSwitchCrossTravelResult?.status),
        limitSwitchLsCrossTravelResult: i.visualLimitSwitchCrossTravelResult?.result,
        limitSwitchLsHoistingMemenuhi: getCheckmark(i.visualLimitSwitchHoistingResult?.status),
        limitSwitchLsHoistingTidakMemenuhi: getOppositeCheckmark(i.visualLimitSwitchHoistingResult?.status),
        limitSwitchLsHoistingResult: i.visualLimitSwitchHoistingResult?.result,
        internalCombustionEngineCoolingSystemMemenuhi: getCheckmark(i.visualInternalCombustionEngineCoolingSystemResult?.status),
        internalCombustionEngineCoolingSystemTidakMemenuhi: getOppositeCheckmark(i.visualInternalCombustionEngineCoolingSystemResult?.status),
        internalCombustionEngineCoolingSystemResult: i.visualInternalCombustionEngineCoolingSystemResult?.result,
        internalCombustionEngineLubricationSystemMemenuhi: getCheckmark(i.visualInternalCombustionEngineLubricationSystemResult?.status),
        internalCombustionEngineLubricationSystemTidakMemenuhi: getOppositeCheckmark(i.visualInternalCombustionEngineLubricationSystemResult?.status),
        internalCombustionEngineLubricationSystemResult: i.visualInternalCombustionEngineLubricationSystemResult?.result,
        internalCombustionEngineEngineMountingMemenuhi: getCheckmark(i.visualInternalCombustionEngineEngineMountingResult?.status),
        internalCombustionEngineEngineMountingTidakMemenuhi: getOppositeCheckmark(i.visualInternalCombustionEngineEngineMountingResult?.status),
        internalCombustionEngineEngineMountingResult: i.visualInternalCombustionEngineEngineMountingResult?.result,
        internalCombustionEngineSafetyGuardEquipmentMemenuhi: getCheckmark(i.visualInternalCombustionEngineSafetyGuardEquipmentResult?.status),
        internalCombustionEngineSafetyGuardEquipmentTidakMemenuhi: getOppositeCheckmark(i.visualInternalCombustionEngineSafetyGuardEquipmentResult?.status),
        internalCombustionEngineSafetyGuardEquipmentResult: i.visualInternalCombustionEngineSafetyGuardEquipmentResult?.result,
        internalCombustionEngineExhaustSystemMemenuhi: getCheckmark(i.visualInternalCombustionEngineExhaustSystemResult?.status),
        internalCombustionEngineExhaustSystemTidakMemenuhi: getOppositeCheckmark(i.visualInternalCombustionEngineExhaustSystemResult?.status),
        internalCombustionEngineExhaustSystemResult: i.visualInternalCombustionEngineExhaustSystemResult?.result,
        internalCombustionEngineFuelSystemMemenuhi: getCheckmark(i.visualInternalCombustionEngineFuelSystemResult?.status),
        internalCombustionEngineFuelSystemTidakMemenuhi: getOppositeCheckmark(i.visualInternalCombustionEngineFuelSystemResult?.status),
        internalCombustionEngineFuelSystemResult: i.visualInternalCombustionEngineFuelSystemResult?.result,
        internalCombustionEnginePowerTransmissionSystemMemenuhi: getCheckmark(i.visualInternalCombustionEnginePowerTransmissionSystemResult?.status),
        internalCombustionEnginePowerTransmissionSystemTidakMemenuhi: getOppositeCheckmark(i.visualInternalCombustionEnginePowerTransmissionSystemResult?.status),
        internalCombustionEnginePowerTransmissionSystemResult: i.visualInternalCombustionEnginePowerTransmissionSystemResult?.result,
        internalCombustionEngineBatteryMemenuhi: getCheckmark(i.visualInternalCombustionEngineBatteryResult?.status),
        internalCombustionEngineBatteryTidakMemenuhi: getOppositeCheckmark(i.visualInternalCombustionEngineBatteryResult?.status),
        internalCombustionEngineBatteryResult: i.visualInternalCombustionEngineBatteryResult?.result,
        internalCombustionEngineStarterMotorMemenuhi: getCheckmark(i.visualInternalCombustionEngineStarterMotorResult?.status),
        internalCombustionEngineStarterMotorTidakMemenuhi: getOppositeCheckmark(i.visualInternalCombustionEngineStarterMotorResult?.status),
        internalCombustionEngineStarterMotorResult: i.visualInternalCombustionEngineStarterMotorResult?.result,
        internalCombustionEngineWiringInstallationMemenuhi: getCheckmark(i.visualInternalCombustionEngineWiringInstallationResult?.status),
        internalCombustionEngineWiringInstallationTidakMemenuhi: getOppositeCheckmark(i.visualInternalCombustionEngineWiringInstallationResult?.status),
        internalCombustionEngineWiringInstallationResult: i.visualInternalCombustionEngineWiringInstallationResult?.result,
        internalCombustionEngineTurbochargerMemenuhi: getCheckmark(i.visualInternalCombustionEngineTurbochargerResult?.status),
        internalCombustionEngineTurbochargerTidakMemenuhi: getOppositeCheckmark(i.visualInternalCombustionEngineTurbochargerResult?.status),
        internalCombustionEngineTurbochargerResult: i.visualInternalCombustionEngineTurbochargerResult?.result,
        hydraulicHydraulicPumpMemenuhi: getCheckmark(i.visualHydraulicPumpResult?.status),
        hydraulicHydraulicPumpTidakMemenuhi: getOppositeCheckmark(i.visualHydraulicPumpResult?.status),
        hydraulicHydraulicPumpResult: i.visualHydraulicPumpResult?.result,
        hydraulicHydraulicLinesMemenuhi: getCheckmark(i.visualHydraulicLinesResult?.status),
        hydraulicHydraulicLinesTidakMemenuhi: getOppositeCheckmark(i.visualHydraulicLinesResult?.status),
        hydraulicHydraulicLinesResult: i.visualHydraulicLinesResult?.result,
        hydraulicHydraulicFilterMemenuhi: getCheckmark(i.visualHydraulicFilterResult?.status),
        hydraulicHydraulicFilterTidakMemenuhi: getOppositeCheckmark(i.visualHydraulicFilterResult?.status),
        hydraulicHydraulicFilterResult: i.visualHydraulicFilterResult?.result,
        hydraulicHydraulicTankMemenuhi: getCheckmark(i.visualHydraulicTankResult?.status),
        hydraulicHydraulicTankTidakMemenuhi: getOppositeCheckmark(i.visualHydraulicTankResult?.status),
        hydraulicHydraulicTankResult: i.visualHydraulicTankResult?.result,
        hydraulicMainWinchMotorMemenuhi: getCheckmark(i.visualHydraulicMainWinchMotorResult?.status),
        hydraulicMainWinchMotorTidakMemenuhi: getOppositeCheckmark(i.visualHydraulicMainWinchMotorResult?.status),
        hydraulicMainWinchMotorResult: i.visualHydraulicMainWinchMotorResult?.result,
        hydraulicAuxiliaryWinchMotorMemenuhi: getCheckmark(i.visualHydraulicAuxiliaryWinchMotorResult?.status),
        hydraulicAuxiliaryWinchMotorTidakMemenuhi: getOppositeCheckmark(i.visualHydraulicAuxiliaryWinchMotorResult?.status),
        hydraulicAuxiliaryWinchMotorResult: i.visualHydraulicAuxiliaryWinchMotorResult?.result,
        hydraulicBoomWinchMotorMemenuhi: getCheckmark(i.visualHydraulicBoomWinchMotorResult?.status),
        hydraulicBoomWinchMotorTidakMemenuhi: getOppositeCheckmark(i.visualHydraulicBoomWinchMotorResult?.status),
        hydraulicBoomWinchMotorResult: i.visualHydraulicBoomWinchMotorResult?.result,
        hydraulicSwingMotorMemenuhi: getCheckmark(i.visualHydraulicSwingMotorResult?.status),
        hydraulicSwingMotorTidakMemenuhi: getOppositeCheckmark(i.visualHydraulicSwingMotorResult?.status),
        hydraulicSwingMotorResult: i.visualHydraulicSwingMotorResult?.result,
        controlValveReliefValveMemenuhi: getCheckmark(i.visualControlValveReliefValveResult?.status),
        controlValveReliefValveTidakMemenuhi: getOppositeCheckmark(i.visualControlValveReliefValveResult?.status),
        controlValveReliefValveResult: i.visualControlValveReliefValveResult?.result,
        controlValveMainWinchValveMemenuhi: getCheckmark(i.visualControlValveMainWinchValveResult?.status),
        controlValveMainWinchValveTidakMemenuhi: getOppositeCheckmark(i.visualControlValveMainWinchValveResult?.status),
        controlValveMainWinchValveResult: i.visualControlValveMainWinchValveResult?.result,
        controlValveAuxiliaryWinchValveMemenuhi: getCheckmark(i.visualControlValveAuxiliaryWinchValveResult?.status),
        controlValveAuxiliaryWinchValveTidakMemenuhi: getOppositeCheckmark(i.visualControlValveAuxiliaryWinchValveResult?.status),
        controlValveAuxiliaryWinchValveResult: i.visualControlValveAuxiliaryWinchValveResult?.result,
        controlValveBoomWinchValveMemenuhi: getCheckmark(i.visualControlValveBoomWinchValveResult?.status),
        controlValveBoomWinchValveTidakMemenuhi: getOppositeCheckmark(i.visualControlValveBoomWinchValveResult?.status),
        controlValveBoomWinchValveResult: i.visualControlValveBoomWinchValveResult?.result,
        controlValveBoomMovementValveMemenuhi: getCheckmark(i.visualControlValveBoomMovementValveResult?.status),
        controlValveBoomMovementValveTidakMemenuhi: getOppositeCheckmark(i.visualControlValveBoomMovementValveResult?.status),
        controlValveBoomMovementValveResult: i.visualControlValveBoomMovementValveResult?.result,
        controlValveSteeringCylinderValveMemenuhi: getCheckmark(i.visualControlValveSteeringCylinderValveResult?.status),
        controlValveSteeringCylinderValveTidakMemenuhi: getOppositeCheckmark(i.visualControlValveSteeringCylinderValveResult?.status),
        controlValveSteeringCylinderValveResult: i.visualControlValveSteeringCylinderValveResult?.result,
        controlValveAxleOscillationValveMemenuhi: getCheckmark(i.visualControlValveAxleOscillationValveResult?.status),
        controlValveAxleOscillationValveTidakMemenuhi: getOppositeCheckmark(i.visualControlValveAxleOscillationValveResult?.status),
        controlValveAxleOscillationValveResult: i.visualControlValveAxleOscillationValveResult?.result,
        controlValveOutriggerMovementValveMemenuhi: getCheckmark(i.visualControlValveOutriggerMovementValveResult?.status),
        controlValveOutriggerMovementValveTidakMemenuhi: getOppositeCheckmark(i.visualControlValveOutriggerMovementValveResult?.status),
        controlValveOutriggerMovementValveResult: i.visualControlValveOutriggerMovementValveResult?.result,
        hydraulicCylinderBoomMovementCylinderMemenuhi: getCheckmark(i.visualHydraulicCylinderBoomMovementCylinderResult?.status),
        hydraulicCylinderBoomMovementCylinderTidakMemenuhi: getOppositeCheckmark(i.visualHydraulicCylinderBoomMovementCylinderResult?.status),
        hydraulicCylinderBoomMovementCylinderResult: i.visualHydraulicCylinderBoomMovementCylinderResult?.result,
        hydraulicCylinderOutriggerCylinderMemenuhi: getCheckmark(i.visualHydraulicCylinderOutriggerCylinderResult?.status),
        hydraulicCylinderOutriggerCylinderTidakMemenuhi: getOppositeCheckmark(i.visualHydraulicCylinderOutriggerCylinderResult?.status),
        hydraulicCylinderOutriggerCylinderResult: i.visualHydraulicCylinderOutriggerCylinderResult?.result,
        hydraulicCylinderSteeringWheelCylinderMemenuhi: getCheckmark(i.visualHydraulicCylinderSteeringWheelCylinderResult?.status),
        hydraulicCylinderSteeringWheelCylinderTidakMemenuhi: getOppositeCheckmark(i.visualHydraulicCylinderSteeringWheelCylinderResult?.status),
        hydraulicCylinderSteeringWheelCylinderResult: i.visualHydraulicCylinderSteeringWheelCylinderResult?.result,
        hydraulicCylinderAxleOscillationCylinderMemenuhi: getCheckmark(i.visualHydraulicCylinderAxleOscillationCylinderResult?.status),
        hydraulicCylinderAxleOscillationCylinderTidakMemenuhi: getOppositeCheckmark(i.visualHydraulicCylinderAxleOscillationCylinderResult?.status),
        hydraulicCylinderAxleOscillationCylinderResult: i.visualHydraulicCylinderAxleOscillationCylinderResult?.result,
        hydraulicCylinderTelescopicCylinderMemenuhi: getCheckmark(i.visualHydraulicCylinderTelescopicCylinderResult?.status),
        hydraulicCylinderTelescopicCylinderTidakMemenuhi: getOppositeCheckmark(i.visualHydraulicCylinderTelescopicCylinderResult?.status),
        hydraulicCylinderTelescopicCylinderResult: i.visualHydraulicCylinderTelescopicCylinderResult?.result,
        pneumaticCompressorMemenuhi: getCheckmark(i.visualPneumaticCompressorResult?.status),
        pneumaticCompressorTidakMemenuhi: getOppositeCheckmark(i.visualPneumaticCompressorResult?.status),
        pneumaticCompressorResult: i.visualPneumaticCompressorResult?.result,
        pneumaticTankAndSafetyValveMemenuhi: getCheckmark(i.visualPneumaticTankAndSafetyValveResult?.status),
        pneumaticTankAndSafetyValveTidakMemenuhi: getOppositeCheckmark(i.visualPneumaticTankAndSafetyValveResult?.status),
        pneumaticTankAndSafetyValveResult: i.visualPneumaticTankAndSafetyValveResult?.result,
        pneumaticPressurizedAirLinesMemenuhi: getCheckmark(i.visualPneumaticPressurizedAirLinesResult?.status),
        pneumaticPressurizedAirLinesTidakMemenuhi: getOppositeCheckmark(i.visualPneumaticPressurizedAirLinesResult?.status),
        pneumaticPressurizedAirLinesResult: i.visualPneumaticPressurizedAirLinesResult?.result,
        pneumaticAirFilterMemenuhi: getCheckmark(i.visualPneumaticAirFilterResult?.status),
        pneumaticAirFilterTidakMemenuhi: getOppositeCheckmark(i.visualPneumaticAirFilterResult?.status),
        pneumaticAirFilterResult: i.visualPneumaticAirFilterResult?.result,
        pneumaticControlValveMemenuhi: getCheckmark(i.visualPneumaticControlValveResult?.status),
        pneumaticControlValveTidakMemenuhi: getOppositeCheckmark(i.visualPneumaticControlValveResult?.status),
        pneumaticControlValveResult: i.visualPneumaticControlValveResult?.result,
        operatorCabinSafetyLadderMemenuhi: getCheckmark(i.visualOperatorCabinSafetyLadderResult?.status),
        operatorCabinSafetyLadderTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabinSafetyLadderResult?.status),
        operatorCabinSafetyLadderResult: i.visualOperatorCabinSafetyLadderResult?.result,
        operatorCabinDoorMemenuhi: getCheckmark(i.visualOperatorCabinDoorResult?.status),
        operatorCabinDoorTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabinDoorResult?.status),
        operatorCabinDoorResult: i.visualOperatorCabinDoorResult?.result,
        operatorCabinWindowMemenuhi: getCheckmark(i.visualOperatorCabinWindowResult?.status),
        operatorCabinWindowTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabinWindowResult?.status),
        operatorCabinWindowResult: i.visualOperatorCabinWindowResult?.result,
        operatorCabinFanAcMemenuhi: getCheckmark(i.visualOperatorCabinFanAcResult?.status),
        operatorCabinFanAcTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabinFanAcResult?.status),
        operatorCabinFanAcResult: i.visualOperatorCabinFanAcResult?.result,
        operatorCabinControlLeversButtonsMemenuhi: getCheckmark(i.visualOperatorCabinControlLeversButtonsResult?.status),
        operatorCabinControlLeversButtonsTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabinControlLeversButtonsResult?.status),
        operatorCabinControlLeversButtonsResult: i.visualOperatorCabinControlLeversButtonsResult?.result,
        operatorCabinPendantControlMemenuhi: getCheckmark(i.visualOperatorCabinPendantControlResult?.status),
        operatorCabinPendantControlTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabinPendantControlResult?.status),
        operatorCabinPendantControlResult: i.visualOperatorCabinPendantControlResult?.result,
        operatorCabinLightingMemenuhi: getCheckmark(i.visualOperatorCabinLightingResult?.status),
        operatorCabinLightingTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabinLightingResult?.status),
        operatorCabinLightingResult: i.visualOperatorCabinLightingResult?.result,
        operatorCabinHornSignalAlarmMemenuhi: getCheckmark(i.visualOperatorCabinHornSignalAlarmResult?.status),
        operatorCabinHornSignalAlarmTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabinHornSignalAlarmResult?.status),
        operatorCabinHornSignalAlarmResult: i.visualOperatorCabinHornSignalAlarmResult?.result,
        operatorCabinFuseMemenuhi: getCheckmark(i.visualOperatorCabinFuseResult?.status),
        operatorCabinFuseTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabinFuseResult?.status),
        operatorCabinFuseResult: i.visualOperatorCabinFuseResult?.result,
        operatorCabinCommunicationDeviceMemenuhi: getCheckmark(i.visualOperatorCabinCommunicationDeviceResult?.status),
        operatorCabinCommunicationDeviceTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabinCommunicationDeviceResult?.status),
        operatorCabinCommunicationDeviceResult: i.visualOperatorCabinCommunicationDeviceResult?.result,
        operatorCabinFireExtinguisherMemenuhi: getCheckmark(i.visualOperatorCabinFireExtinguisherResult?.status),
        operatorCabinFireExtinguisherTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabinFireExtinguisherResult?.status),
        operatorCabinFireExtinguisherResult: i.visualOperatorCabinFireExtinguisherResult?.result,
        operatorCabinOperatingSignsMemenuhi: getCheckmark(i.visualOperatorCabinOperatingSignsResult?.status),
        operatorCabinOperatingSignsTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabinOperatingSignsResult?.status),
        operatorCabinOperatingSignsResult: i.visualOperatorCabinOperatingSignsResult?.result,
        operatorCabinIgnitionKeyMasterSwitchMemenuhi: getCheckmark(i.visualOperatorCabinIgnitionKeyMasterSwitchResult?.status),
        operatorCabinIgnitionKeyMasterSwitchTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabinIgnitionKeyMasterSwitchResult?.status),
        operatorCabinIgnitionKeyMasterSwitchResult: i.visualOperatorCabinIgnitionKeyMasterSwitchResult?.result,
        operatorCabinButtonsHandlesLeversMemenuhi: getCheckmark(i.visualOperatorCabinButtonsHandlesLeversResult?.status),
        operatorCabinButtonsHandlesLeversTidakMemenuhi: getOppositeCheckmark(i.visualOperatorCabinButtonsHandlesLeversResult?.status),
        operatorCabinButtonsHandlesLeversResult: i.visualOperatorCabinButtonsHandlesLeversResult?.result,
        electricalComponentsPanelConductorConnectorMemenuhi: getCheckmark(i.visualElectricalComponentsPanelConductorConnectorResult?.status),
        electricalComponentsPanelConductorConnectorTidakMemenuhi: getOppositeCheckmark(i.visualElectricalComponentsPanelConductorConnectorResult?.status),
        electricalComponentsPanelConductorConnectorResult: i.visualElectricalComponentsPanelConductorConnectorResult?.result,
        electricalComponentsConductorProtectionMemenuhi: getCheckmark(i.visualElectricalComponentsConductorProtectionResult?.status),
        electricalComponentsConductorProtectionTidakMemenuhi: getOppositeCheckmark(i.visualElectricalComponentsConductorProtectionResult?.status),
        electricalComponentsConductorProtectionResult: i.visualElectricalComponentsConductorProtectionResult?.result,
        electricalComponentsMotorInstallationSafetySystemMemenuhi: getCheckmark(i.visualElectricalComponentsMotorInstallationSafetySystemResult?.status),
        electricalComponentsMotorInstallationSafetySystemTidakMemenuhi: getOppositeCheckmark(i.visualElectricalComponentsMotorInstallationSafetySystemResult?.status),
        electricalComponentsMotorInstallationSafetySystemResult: i.visualElectricalComponentsMotorInstallationSafetySystemResult?.result,
        electricalComponentsGroundingSystemMemenuhi: getCheckmark(i.visualElectricalComponentsGroundingSystemResult?.status),
        electricalComponentsGroundingSystemTidakMemenuhi: getOppositeCheckmark(i.visualElectricalComponentsGroundingSystemResult?.status),
        electricalComponentsGroundingSystemResult: i.visualElectricalComponentsGroundingSystemResult?.result,
        electricalComponentsInstallationMemenuhi: getCheckmark(i.visualElectricalComponentsInstallationResult?.status),
        electricalComponentsInstallationTidakMemenuhi: getOppositeCheckmark(i.visualElectricalComponentsInstallationResult?.status),
        electricalComponentsInstallationResult: i.visualElectricalComponentsInstallationResult?.result,
        safetyDevicesLadderHandrailMemenuhi: getCheckmark(i.visualSafetyDevicesLadderHandrailResult?.status),
        safetyDevicesLadderHandrailTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevicesLadderHandrailResult?.status),
        safetyDevicesLadderHandrailResult: i.visualSafetyDevicesLadderHandrailResult?.result,
        safetyDevicesEngineOilLubricantPressureMemenuhi: getCheckmark(i.visualSafetyDevicesEngineOilLubricantPressureResult?.status),
        safetyDevicesEngineOilLubricantPressureTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevicesEngineOilLubricantPressureResult?.status),
        safetyDevicesEngineOilLubricantPressureResult: i.visualSafetyDevicesEngineOilLubricantPressureResult?.result,
        safetyDevicesHydraulicOilPressureMemenuhi: getCheckmark(i.visualSafetyDevicesHydraulicOilPressureResult?.status),
        safetyDevicesHydraulicOilPressureTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevicesHydraulicOilPressureResult?.status),
        safetyDevicesHydraulicOilPressureResult: i.visualSafetyDevicesHydraulicOilPressureResult?.result,
        safetyDevicesAirPressureMemenuhi: getCheckmark(i.visualSafetyDevicesAirPressureResult?.status),
        safetyDevicesAirPressureTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevicesAirPressureResult?.status),
        safetyDevicesAirPressureResult: i.visualSafetyDevicesAirPressureResult?.result,
        safetyDevicesAmperemeterMemenuhi: getCheckmark(i.visualSafetyDevicesAmperemeterResult?.status),
        safetyDevicesAmperemeterTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevicesAmperemeterResult?.status),
        safetyDevicesAmperemeterResult: i.visualSafetyDevicesAmperemeterResult?.result,
        safetyDevicesVoltageMemenuhi: getCheckmark(i.visualSafetyDevicesVoltageResult?.status),
        safetyDevicesVoltageTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevicesVoltageResult?.status),
        safetyDevicesVoltageResult: i.visualSafetyDevicesVoltageResult?.result,
        safetyDevicesEngineTemperatureMemenuhi: getCheckmark(i.visualSafetyDevicesEngineTemperatureResult?.status),
        safetyDevicesEngineTemperatureTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevicesEngineTemperatureResult?.status),
        safetyDevicesEngineTemperatureResult: i.visualSafetyDevicesEngineTemperatureResult?.result,
        safetyDevicesTransmissionTemperatureMemenuhi: getCheckmark(i.visualSafetyDevicesTransmissionTemperatureResult?.status),
        safetyDevicesTransmissionTemperatureTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevicesTransmissionTemperatureResult?.status),
        safetyDevicesTransmissionTemperatureResult: i.visualSafetyDevicesTransmissionTemperatureResult?.result,
        safetyDevicesConverterOilTemperaturePressureMemenuhi: getCheckmark(i.visualSafetyDevicesConverterOilTemperaturePressureResult?.status),
        safetyDevicesConverterOilTemperaturePressureTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevicesConverterOilTemperaturePressureResult?.status),
        safetyDevicesConverterOilTemperaturePressureResult: i.visualSafetyDevicesConverterOilTemperaturePressureResult?.result,
        safetyDevicesConverterSpeedometerIndicatorMemenuhi: getCheckmark(i.visualSafetyDevicesConverterSpeedometerIndicatorResult?.status),
        safetyDevicesConverterSpeedometerIndicatorTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevicesConverterSpeedometerIndicatorResult?.status),
        safetyDevicesConverterSpeedometerIndicatorResult: i.visualSafetyDevicesConverterSpeedometerIndicatorResult?.result,
        safetyDevicesConverterRotaryLampMemenuhi: getCheckmark(i.visualSafetyDevicesConverterRotaryLampResult?.status),
        safetyDevicesConverterRotaryLampTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevicesConverterRotaryLampResult?.status),
        safetyDevicesConverterRotaryLampResult: i.visualSafetyDevicesConverterRotaryLampResult?.result,
        safetyDevicesConverterMainHoistRopeUpDownLimitMemenuhi: getCheckmark(i.visualSafetyDevicesConverterMainHoistRopeUpDownLimitResult?.status),
        safetyDevicesConverterMainHoistRopeUpDownLimitTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevicesConverterMainHoistRopeUpDownLimitResult?.status),
        safetyDevicesConverterMainHoistRopeUpDownLimitResult: i.visualSafetyDevicesConverterMainHoistRopeUpDownLimitResult?.result,
        safetyDevicesConverterAuxiliaryHoistRopeUpDownLimitMemenuhi: getCheckmark(i.visualSafetyDevicesConverterAuxiliaryHoistRopeUpDownLimitResult?.status),
        safetyDevicesConverterAuxiliaryHoistRopeUpDownLimitTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevicesConverterAuxiliaryHoistRopeUpDownLimitResult?.status),
        safetyDevicesConverterAuxiliaryHoistRopeUpDownLimitResult: i.visualSafetyDevicesConverterAuxiliaryHoistRopeUpDownLimitResult?.result,
        safetyDevicesConverterSwingMotionLimitMemenuhi: getCheckmark(i.visualSafetyDevicesConverterSwingMotionLimitResult?.status),
        safetyDevicesConverterSwingMotionLimitTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevicesConverterSwingMotionLimitResult?.status),
        safetyDevicesConverterSwingMotionLimitResult: i.visualSafetyDevicesConverterSwingMotionLimitResult?.result,
        safetyDevicesConverterLevelIndicatorMemenuhi: getCheckmark(i.visualSafetyDevicesConverterLevelIndicatorResult?.status),
        safetyDevicesConverterLevelIndicatorTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevicesConverterLevelIndicatorResult?.status),
        safetyDevicesConverterLevelIndicatorResult: i.visualSafetyDevicesConverterLevelIndicatorResult?.result,
        safetyDevicesConverterLoadWeightIndicatorMemenuhi: getCheckmark(i.visualSafetyDevicesConverterLoadWeightIndicatorResult?.status),
        safetyDevicesConverterLoadWeightIndicatorTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevicesConverterLoadWeightIndicatorResult?.status),
        safetyDevicesConverterLoadWeightIndicatorResult: i.visualSafetyDevicesConverterLoadWeightIndicatorResult?.result,
        safetyDevicesConverterLoadChartMemenuhi: getCheckmark(i.visualSafetyDevicesConverterLoadChartResult?.status),
        safetyDevicesConverterLoadChartTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevicesConverterLoadChartResult?.status),
        safetyDevicesConverterLoadChartResult: i.visualSafetyDevicesConverterLoadChartResult?.result,
        safetyDevicesConverterAnemometerWindSpeedMemenuhi: getCheckmark(i.visualSafetyDevicesConverterAnemometerWindSpeedResult?.status),
        safetyDevicesConverterAnemometerWindSpeedTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevicesConverterAnemometerWindSpeedResult?.status),
        safetyDevicesConverterAnemometerWindSpeedResult: i.visualSafetyDevicesConverterAnemometerWindSpeedResult?.result,
        safetyDevicesConverterBoomAngleIndicatorMemenuhi: getCheckmark(i.visualSafetyDevicesConverterBoomAngleIndicatorResult?.status),
        safetyDevicesConverterBoomAngleIndicatorTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevicesConverterBoomAngleIndicatorResult?.status),
        safetyDevicesConverterBoomAngleIndicatorResult: i.visualSafetyDevicesConverterBoomAngleIndicatorResult?.result,
        safetyDevicesConverterAirPressureIndicatorMemenuhi: getCheckmark(i.visualSafetyDevicesConverterAirPressureIndicatorResult?.status),
        safetyDevicesConverterAirPressureIndicatorTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevicesConverterAirPressureIndicatorResult?.status),
        safetyDevicesConverterAirPressureIndicatorResult: i.visualSafetyDevicesConverterAirPressureIndicatorResult?.result,
        safetyDevicesConverterHydraulicPressureIndicatorMemenuhi: getCheckmark(i.visualSafetyDevicesConverterHydraulicPressureIndicatorResult?.status),
        safetyDevicesConverterHydraulicPressureIndicatorTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevicesConverterHydraulicPressureIndicatorResult?.status),
        safetyDevicesConverterHydraulicPressureIndicatorResult: i.visualSafetyDevicesConverterHydraulicPressureIndicatorResult?.result,
        safetyDevicesConverterSafetyValvesMemenuhi: getCheckmark(i.visualSafetyDevicesConverterSafetyValvesResult?.status),
        safetyDevicesConverterSafetyValvesTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevicesConverterSafetyValvesResult?.status),
        safetyDevicesConverterSafetyValvesResult: i.visualSafetyDevicesConverterSafetyValvesResult?.result,
        safetyDevicesConverterMainWindingDrumSafetyLockMemenuhi: getCheckmark(i.visualSafetyDevicesConverterMainWindingDrumSafetyLockResult?.status),
        safetyDevicesConverterMainWindingDrumSafetyLockTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevicesConverterMainWindingDrumSafetyLockResult?.status),
        safetyDevicesConverterMainWindingDrumSafetyLockResult: i.visualSafetyDevicesConverterMainWindingDrumSafetyLockResult?.result,
        safetyDevicesConverterAuxiliaryWindingDrumSafetyLockMemenuhi: getCheckmark(i.visualSafetyDevicesConverterAuxiliaryWindingDrumSafetyLockResult?.status),
        safetyDevicesConverterAuxiliaryWindingDrumSafetyLockTidakMemuhi: getOppositeCheckmark(i.visualSafetyDevicesConverterAuxiliaryWindingDrumSafetyLockResult?.status),
        safetyDevicesConverterAuxiliaryWindingDrumSafetyLockResult: i.visualSafetyDevicesConverterAuxiliaryWindingDrumSafetyLockResult?.result,
        safetyDevicesConverterTelescopicMotionLimitMemenuhi: getCheckmark(i.visualSafetyDevicesConverterTelescopicMotionLimitResult?.status),
        safetyDevicesConverterTelescopicMotionLimitTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevicesConverterTelescopicMotionLimitResult?.status),
        safetyDevicesConverterTelescopicMotionLimitResult: i.visualSafetyDevicesConverterTelescopicMotionLimitResult?.result,
        safetyDevicesConverterLightningArresterMemenuhi: getCheckmark(i.visualSafetyDevicesConverterLightningArresterResult?.status),
        safetyDevicesConverterLightningArresterTidakMemenuhi: getOppositeCheckmark(i.visualSafetyDevicesConverterLightningArresterResult?.status),
        safetyDevicesConverterLightningArresterResult: i.visualSafetyDevicesConverterLightningArresterResult?.result,
        safetyDevicesConverterLiftingHeightIndicatorMemenuhi: getCheckmark(i.visualSafetyDevicesConverterLiftingHeightIndicatorResult?.status),
        safetyDevicesConverterLiftingHeightIndicatorTidakMemuhi: getOppositeCheckmark(i.visualSafetyDevicesConverterLiftingHeightIndicatorResult?.status),
        safetyDevicesConverterLiftingHeightIndicatorResult: i.visualSafetyDevicesConverterLiftingHeightIndicatorResult?.result,

        // IV. PEMERIKSAAN TIDAK MERUSAK (NDT)
        // Tali Kawat Baja
        steelWireRopeNdtType: i.steelWireRopeNdtType,
        steelWireRopeItems: (i.ndtSteelWireRopes || []).map(item => ({
            steelWireRopeAt: item.usageAt,
            steelWireRopeSpec: item.specDiameter,
            steelWireRopeActual: item.actualDiameter,
            steelWireRopeConstruction: item.construction,
            steelWireRopeType: item.type,
            steelWireRopeLength: item.length,
            steelWireRopeAge: item.age,
            steelWireRopeTrue: getCheckmark(item.result?.status),
            steelWireRopeFalse: getOppositeCheckmark(item.result?.status),
            steelWireRopeResult: getResultText(item.result),
        })),

        // Boom
        boomType: i.ndtBoomType,
        boomNdtType: i.boomNdtType,
        boomItems: (i.ndtBoomInspections || []).map(item => ({
            boomPart: item.part,
            boomLocation: item.location,
            boomDefectTrue: getCheckmark(item.result?.status),
            boomDefectFalse: getOppositeCheckmark(item.result?.status),
            boomResult: getResultText(item.result),
        })),

        // Kait Utama
        mainHookNdtType: i.mainHookNdtType,
        capacityMainHook: i.capacityMainHook,
        mainHookSpecificationA: i.ndtMainHookSpecificationA,
        mainHookSpecificationB: i.ndtMainHookSpecificationB,
        mainHookSpecificationC: i.ndtMainHookSpecificationC,
        mainHookSpecificationD: i.ndtMainHookSpecificationD,
        mainHookSpecificationE: i.ndtMainHookSpecificationE,
        mainHookSpecificationF: i.ndtMainHookSpecificationF,
        mainHookSpecificationG: i.ndtMainHookSpecificationG,
        mainHookSpecificationH: i.ndtMainHookSpecificationH,
        mainHookSpecificationTrue: getCheckmark(i.ndtMainHookSpecificationResult?.status),
        mainHookSpecificationFalse: getOppositeCheckmark(i.ndtMainHookSpecificationResult?.status),
        mainHookSpecificationResult: getResultText(i.ndtMainHookSpecificationResult),
        mainHookMeasurementResultsA: i.ndtMainHookMeasurementResultsA,
        mainHookMeasurementResultsB: i.ndtMainHookMeasurementResultsB,
        mainHookMeasurementResultsC: i.ndtMainHookMeasurementResultsC,
        mainHookMeasurementResultsD: i.ndtMainHookMeasurementResultsD,
        mainHookMeasurementResultsE: i.ndtMainHookMeasurementResultsE,
        mainHookMeasurementResultsF: i.ndtMainHookMeasurementResultsF,
        mainHookMeasurementResultsG: i.ndtMainHookMeasurementResultsG,
        mainHookMeasurementResultsH: i.ndtMainHookMeasurementResultsH,
        mainHookMeasurementResultsTrue: getCheckmark(i.ndtMainHookMeasurementResultsResult?.status),
        mainHookMeasurementResultsFalse: getOppositeCheckmark(i.ndtMainHookMeasurementResultsResult?.status),
        mainHookMeasurementResultsResult: getResultText(i.ndtMainHookMeasurementResultsResult),
        mainHookToleranceMeasureA: i.ndtMainHookToleranceMeasureA,
        mainHookToleranceMeasureB: i.ndtMainHookToleranceMeasureB,
        mainHookToleranceMeasureC: i.ndtMainHookToleranceMeasureC,
        mainHookToleranceMeasureD: i.ndtMainHookToleranceMeasureD,
        mainHookToleranceMeasureE: i.ndtMainHookToleranceMeasureE,
        mainHookToleranceMeasureF: i.ndtMainHookToleranceMeasureF,
        mainHookToleranceMeasureG: i.ndtMainHookToleranceMeasureG,
        mainHookToleranceMeasureH: i.ndtMainHookToleranceMeasureH,
        mainHookToleranceMeasureTrue: getCheckmark(i.ndtMainHookToleranceMeasureResult?.status),
        mainHookToleranceMeasureFalse: getOppositeCheckmark(i.ndtMainHookToleranceMeasureResult?.status),
        mainHookToleranceMeasureResult: getResultText(i.ndtMainHookToleranceMeasureResult),

        // Kait Tambahan
        auxiliaryHookNdtType: i.auxiliaryHookNdtType,
        capacityOptionalHook: i.capacityOptionalHook,
        auxiliaryHookSpecificationA: i.ndtAuxiliaryHookSpecificationA,
        auxiliaryHookSpecificationB: i.ndtAuxiliaryHookSpecificationB,
        auxiliaryHookSpecificationC: i.ndtAuxiliaryHookSpecificationC,
        auxiliaryHookSpecificationD: i.ndtAuxiliaryHookSpecificationD,
        auxiliaryHookSpecificationE: i.ndtAuxiliaryHookSpecificationE,
        auxiliaryHookSpecificationF: i.ndtAuxiliaryHookSpecificationF,
        auxiliaryHookSpecificationG: i.ndtAuxiliaryHookSpecificationG,
        auxiliaryHookSpecificationH: i.ndtAuxiliaryHookSpecificationH,
        auxiliaryHookSpecificationTrue: getCheckmark(i.ndtAuxiliaryHookSpecificationResult?.status),
        auxiliaryHookSpecificationFalse: getOppositeCheckmark(i.ndtAuxiliaryHookSpecificationResult?.status),
        auxiliaryHookSpecificationResult: getResultText(i.ndtAuxiliaryHookSpecificationResult),
        auxiliaryHookMeasurementResultsA: i.ndtAuxiliaryHookMeasurementResultsA,
        auxiliaryHookMeasurementResultsB: i.ndtAuxiliaryHookMeasurementResultsB,
        auxiliaryHookMeasurementResultsC: i.ndtAuxiliaryHookMeasurementResultsC,
        auxiliaryHookMeasurementResultsD: i.ndtAuxiliaryHookMeasurementResultsD,
        auxiliaryHookMeasurementResultsE: i.ndtAuxiliaryHookMeasurementResultsE,
        auxiliaryHookMeasurementResultsF: i.ndtAuxiliaryHookMeasurementResultsF,
        auxiliaryHookMeasurementResultsG: i.ndtAuxiliaryHookMeasurementResultsG,
        auxiliaryHookMeasurementResultsH: i.ndtAuxiliaryHookMeasurementResultsH,
        auxiliaryHookMeasurementResultsTrue: getCheckmark(i.ndtAuxiliaryHookMeasurementResultsResult?.status),
        auxiliaryHookMeasurementResultsFalse: getOppositeCheckmark(i.ndtAuxiliaryHookMeasurementResultsResult?.status),
        auxiliaryHookMeasurementResultsResult: getResultText(i.ndtAuxiliaryHookMeasurementResultsResult),
        auxiliaryHookToleranceMeasureA: i.ndtAuxiliaryHookToleranceMeasureA,
        auxiliaryHookToleranceMeasureB: i.ndtAuxiliaryHookToleranceMeasureB,
        auxiliaryHookToleranceMeasureC: i.ndtAuxiliaryHookToleranceMeasureC,
        auxiliaryHookToleranceMeasureD: i.ndtAuxiliaryHookToleranceMeasureD,
        auxiliaryHookToleranceMeasureE: i.ndtAuxiliaryHookToleranceMeasureE,
        auxiliaryHookToleranceMeasureF: i.ndtAuxiliaryHookToleranceMeasureF,
        auxiliaryHookToleranceMeasureG: i.ndtAuxiliaryHookToleranceMeasureG,
        auxiliaryHookToleranceMeasureH: i.ndtAuxiliaryHookToleranceMeasureH,
        auxiliaryHookToleranceMeasureTrue: getCheckmark(i.ndtAuxiliaryHookToleranceMeasureResult?.status),
        auxiliaryHookToleranceMeasureFalse: getOppositeCheckmark(i.ndtAuxiliaryHookToleranceMeasureResult?.status),
        auxiliaryHookToleranceMeasureResult: getResultText(i.ndtAuxiliaryHookToleranceMeasureResult),


        // Drum Utama
        mainDrumNdtType: i.mainDrumNdtType,
        mainDrumSpecificationA: i.ndtMainDrumSpecificationA,
        mainDrumSpecificationB: i.ndtMainDrumSpecificationB,
        mainDrumSpecificationC: i.ndtMainDrumSpecificationC,
        mainDrumSpecificationD: i.ndtMainDrumSpecificationD,
        mainDrumSpecificationE: i.ndtMainDrumSpecificationE,
        mainDrumSpecificationF: i.ndtMainDrumSpecificationF,
        mainDrumSpecificationG: i.ndtMainDrumSpecificationG,
        mainDrumSpecificationTrue: getCheckmark(i.ndtMainDrumSpecificationResult?.status),
        mainDrumSpecificationFalse: getOppositeCheckmark(i.ndtMainDrumSpecificationResult?.status),
        mainDrumSpecificationResult: getResultText(i.ndtMainDrumSpecificationResult),
        mainDrumMeasurementResultsA: i.ndtMainDrumMeasurementResultsA,
        mainDrumMeasurementResultsB: i.ndtMainDrumMeasurementResultsB,
        mainDrumMeasurementResultsC: i.ndtMainDrumMeasurementResultsC,
        mainDrumMeasurementResultsD: i.ndtMainDrumMeasurementResultsD,
        mainDrumMeasurementResultsE: i.ndtMainDrumMeasurementResultsE,
        mainDrumMeasurementResultsF: i.ndtMainDrumMeasurementResultsF,
        mainDrumMeasurementResultsG: i.ndtMainDrumMeasurementResultsG,
        mainDrumMeasurementResultsTrue: getCheckmark(i.ndtMainDrumMeasurementResultsResult?.status),
        mainDrumMeasurementResultsFalse: getOppositeCheckmark(i.ndtMainDrumMeasurementResultsResult?.status),
        mainDrumMeasurementResultsResult: getResultText(i.ndtMainDrumMeasurementResultsResult),

        // Drum Tambahan
        auxiliaryDrumNdtType: i.auxiliaryDrumNdtType,
        auxiliaryDrumSpecificationA: i.ndtAuxiliaryDrumSpecificationA,
        auxiliaryDrumSpecificationB: i.ndtAuxiliaryDrumSpecificationB,
        auxiliaryDrumSpecificationC: i.ndtAuxiliaryDrumSpecificationC,
        auxiliaryDrumSpecificationD: i.ndtAuxiliaryDrumSpecificationD,
        auxiliaryDrumSpecificationE: i.ndtAuxiliaryDrumSpecificationE,
        auxiliaryDrumSpecificationF: i.ndtAuxiliaryDrumSpecificationF,
        auxiliaryDrumSpecificationG: i.ndtAuxiliaryDrumSpecificationG,
        auxiliaryDrumSpecificationTrue: getCheckmark(i.ndtAuxiliaryDrumSpecificationResult?.status),
        auxiliaryDrumSpecificationFalse: getOppositeCheckmark(i.ndtAuxiliaryDrumSpecificationResult?.status),
        auxiliaryDrumSpecificationResult: getResultText(i.ndtAuxiliaryDrumSpecificationResult),
        auxiliaryDrumMeasurementResultsA: i.ndtAuxiliaryDrumMeasurementResultsA,
        auxiliaryDrumMeasurementResultsB: i.ndtAuxiliaryDrumMeasurementResultsB,
        auxiliaryDrumMeasurementResultsC: i.ndtAuxiliaryDrumMeasurementResultsC,
        auxiliaryDrumMeasurementResultsD: i.ndtAuxiliaryDrumMeasurementResultsD,
        auxiliaryDrumMeasurementResultsE: i.ndtAuxiliaryDrumMeasurementResultsE,
        auxiliaryDrumMeasurementResultsF: i.ndtAuxiliaryDrumMeasurementResultsF,
        auxiliaryDrumMeasurementResultsG: i.ndtAuxiliaryDrumMeasurementResultsG,
        auxiliaryDrumMeasurementResultsTrue: getCheckmark(i.ndtAuxiliaryDrumMeasurementResultsResult?.status),
        auxiliaryDrumMeasurementResultsFalse: getOppositeCheckmark(i.ndtAuxiliaryDrumMeasurementResultsResult?.status),
        auxiliaryDrumMeasurementResultsResult: getResultText(i.ndtAuxiliaryDrumMeasurementResultsResult),

        // Puli Utama
        puliNdtType: i.puliNdtType,
        mainPulleySpecificationA: i.ndtMainPulleySpecificationA,
        mainPulleySpecificationB: i.ndtMainPulleySpecificationB,
        mainPulleySpecificationC: i.ndtMainPulleySpecificationC,
        mainPulleySpecificationD: i.ndtMainPulleySpecificationD,
        mainPulleySpecificationE: i.ndtMainPulleySpecificationE,
        mainPulleySpecificationTrue: getCheckmark(i.ndtMainPulleySpecificationResult?.status),
        mainPulleySpecificationFalse: getOppositeCheckmark(i.ndtMainPulleySpecificationResult?.status),
        mainPulleySpecificationResult: getResultText(i.ndtMainPulleySpecificationResult),
        mainPulleyMeasurementResultsA: i.ndtMainPulleyMeasurementResultsA,
        mainPulleyMeasurementResultsB: i.ndtMainPulleyMeasurementResultsB,
        mainPulleyMeasurementResultsC: i.ndtMainPulleyMeasurementResultsC,
        mainPulleyMeasurementResultsD: i.ndtMainPulleyMeasurementResultsD,
        mainPulleyMeasurementResultsE: i.ndtMainPulleyMeasurementResultsE,
        mainPulleyMeasurementResultsTrue: getCheckmark(i.ndtMainPulleyMeasurementResultsResult?.status),
        mainPulleyMeasurementResultsFalse: getOppositeCheckmark(i.ndtMainPulleyMeasurementResultsResult?.status),
        mainPulleyMeasurementResultsResult: getResultText(i.ndtMainPulleyMeasurementResultsResult),

        // Puli Tambahan
        puliOptionalType: i.puliOptionalType,
        auxiliaryPulleySpecificationA: i.ndtAuxiliaryPulleySpecificationA,
        auxiliaryPulleySpecificationB: i.ndtAuxiliaryPulleySpecificationB,
        auxiliaryPulleySpecificationC: i.ndtAuxiliaryPulleySpecificationC,
        auxiliaryPulleySpecificationD: i.ndtAuxiliaryPulleySpecificationD,
        auxiliaryPulleySpecificationE: i.ndtAuxiliaryPulleySpecificationE,
        auxiliaryPulleySpecificationTrue: getCheckmark(i.ndtAuxiliaryPulleySpecificationResult?.status),
        auxiliaryPulleySpecificationFalse: getOppositeCheckmark(i.ndtAuxiliaryPulleySpecificationResult?.status),
        auxiliaryPulleySpecificationResult: getResultText(i.ndtAuxiliaryPulleySpecificationResult),
        auxiliaryPulleyMeasurementResultsA: i.ndtAuxiliaryPulleyMeasurementResultsA,
        auxiliaryPulleyMeasurementResultsB: i.ndtAuxiliaryPulleyMeasurementResultsB,
        auxiliaryPulleyMeasurementResultsC: i.ndtAuxiliaryPulleyMeasurementResultsC,
        auxiliaryPulleyMeasurementResultsD: i.ndtAuxiliaryPulleyMeasurementResultsD,
        auxiliaryPulleyMeasurementResultsE: i.ndtAuxiliaryPulleyMeasurementResultsE,
        auxiliaryPulleyMeasurementResultsTrue: getCheckmark(i.ndtAuxiliaryPulleyMeasurementResultsResult?.status),
        auxiliaryPulleyMeasurementResultsFalse: getOppositeCheckmark(i.ndtAuxiliaryPulleyMeasurementResultsResult?.status),
        auxiliaryPulleyMeasurementResultsResult: getResultText(i.ndtAuxiliaryPulleyMeasurementResultsResult),


        // V. PENGUJIAN FUNGSI
        hoistingLoweringConditionTrue: getCheckmark(i.testingFunctionHoistingLoweringResult?.status),
        hoistingLoweringConditionFalse: getOppositeCheckmark(i.testingFunctionHoistingLoweringResult?.status),
        hoistingLoweringResult: getResultText(i.testingFunctionHoistingLoweringResult),
        extendedRectractedBoomConditionTrue: getCheckmark(i.testingFunctionExtendedRectractedBoomResult?.status),
        extendedRectractedBoomConditionFalse: getOppositeCheckmark(i.testingFunctionExtendedRectractedBoomResult?.status),
        extendedRectractedBoomConditionResult: getResultText(i.testingFunctionExtendedRectractedBoomResult),
        extendedRectractedOutriggerConditionTrue: getCheckmark(i.testingFunctionExtendedRectractedOutriggerResult?.status),
        extendedRectractedOutriggerConditionFalse: getOppositeCheckmark(i.testingFunctionExtendedRectractedOutriggerResult?.status),
        extendedRectractedOutriggerResult: getResultText(i.testingFunctionExtendedRectractedOutriggerResult),
        SwingSlweingConditionTrue: getCheckmark(i.testingFunctionSwingSlewingResult?.status),
        SwingSlweingConditionFalse: getOppositeCheckmark(i.testingFunctionSwingSlewingResult?.status),
        SwingSlweingConditionResult: getResultText(i.testingFunctionSwingSlewingResult),
        antiTwoBlockTrue: getCheckmark(i.testingFunctionAntiTwoBlockResult?.status),
        antiTwoBlockFalse: getOppositeCheckmark(i.testingFunctionAntiTwoBlockResult?.status),
        antiTwoBlockResult: getResultText(i.testingFunctionAntiTwoBlockResult),
        boomStopTrue: getCheckmark(i.testingFunctionBoomStopResult?.status),
        boomStopFalse: getOppositeCheckmark(i.testingFunctionBoomStopResult?.status),
        boomStopResult: getResultText(i.testingFunctionBoomStopResult),
        anemometerWindSpeedTrue: getCheckmark(i.testingFunctionAnemometerWindSpeedResult?.status),
        anemometerWindSpeedFalse: getOppositeCheckmark(i.testingFunctionAnemometerWindSpeedResult?.status),
        anemometerWindSpeedResult: getResultText(i.testingFunctionAnemometerWindSpeedResult),
        brakeLockingDeviceTrue: getCheckmark(i.testingFunctionBrakeLockingDeviceResult?.status),
        brakeLockingDeviceFalse: getOppositeCheckmark(i.testingFunctionBrakeLockingDeviceResult?.status),
        brakeLockingDeviceResult: getResultText(i.testingFunctionBrakeLockingDeviceResult),
        loadMomentIndicatorConditionTrue: getCheckmark(i.testingFunctionLoadMomentIndicatorResult?.status),
        loadMomentIndicatorConditionFalse: getOppositeCheckmark(i.testingFunctionLoadMomentIndicatorResult?.status),
        loadMomentIndicatorConditionResult: getResultText(i.testingFunctionLoadMomentIndicatorResult),
        turnSignalTrue: getCheckmark(i.testingFunctionTurnSignalResult?.status),
        turnSignalFalse: getOppositeCheckmark(i.testingFunctionTurnSignalResult?.status),
        turnSignalResult: getResultText(i.testingFunctionTurnSignalResult),
        drivingLightsTrue: getCheckmark(i.testingFunctionDrivingLightsResult?.status),
        drivingLightsFalse: getOppositeCheckmark(i.testingFunctionDrivingLightsResult?.status),
        drivingLightsResult: getResultText(i.testingFunctionDrivingLightsResult),
        loadIndicatorLightTrue: getCheckmark(i.testingFunctionLoadIndicatorLightResult?.status),
        loadIndicatorLightFalse: getOppositeCheckmark(i.testingFunctionLoadIndicatorLightResult?.status),
        loadIndicatorLightResult: getResultText(i.testingFunctionLoadIndicatorLightResult),
        rotaryLampTrue: getCheckmark(i.testingFunctionRotaryLampResult?.status),
        rotaryLampFalse: getOppositeCheckmark(i.testingFunctionRotaryLampResult?.status),
        rotaryLampResult: getResultText(i.testingFunctionRotaryLampResult),
        hornTrue: getCheckmark(i.testingFunctionHornResult?.status),
        hornFalse: getOppositeCheckmark(i.testingFunctionHornResult?.status),
        hornResult: getResultText(i.testingFunctionHornResult),
        swingAlarmTrue: getCheckmark(i.testingFunctionSwingAlarmResult?.status),
        swingAlarmFalse: getOppositeCheckmark(i.testingFunctionSwingAlarmResult?.status),
        swingAlarmResult: getResultText(i.testingFunctionSwingAlarmResult),
        reverseAlarmTrue: getCheckmark(i.testingFunctionReverseAlarmResult?.status),
        reverseAlarmFalse: getOppositeCheckmark(i.testingFunctionReverseAlarmResult?.status),
        reverseAlarmResult: getResultText(i.testingFunctionReverseAlarmResult),
        overloadAlarmTrue: getCheckmark(i.testingFunctionOverloadAlarmResult?.status),
        overloadAlarmFalse: getOppositeCheckmark(i.testingFunctionOverloadAlarmResult?.status),
        overloadAlarmResult: getResultText(i.testingFunctionOverloadAlarmResult),

        // V.2 PENGUJIAN BEBAN (DINAMIS & STATIS)
        dynamicMainHook: i.dynamicMainHookTests,
        dynamicAuxiliaryHook: i.dynamicAuxiliaryHookTests,
        staticMainHook: i.staticMainHookTests,
        staticAuxiliaryHook: i.staticAuxiliaryHookTests,

        // KESIMPULAN & SARAN
        conclusion: data.conclusion,
        recomendation: data.recommendation,
    };

    try {
        doc.render(renderData);
    } catch (error) {
        // Menangkap dan log error dari docxtemplater untuk debugging
        console.error("GAGAL SAAT RENDER DOKUMEN:", error.message);
        const e = {
            message: error.message,
            name: error.name,
            stack: error.stack,
            properties: error.properties,
        };
        console.log(JSON.stringify({
            error: e
        }));
        throw error;
    }

    const docxBuffer = doc.getZip().generate({
        type: 'nodebuffer',
        compression: 'DEFLATE'
    });
    const ownerName = (g.generalDataOwnerName || 'UnknownOwner').replace(/[^\w.-]/g, '_');
    const fileName = `Laporan-MobileCrane-${ownerName}-${data.id || 'new'}.docx`;

    return {
        docxBuffer,
        fileName
    };
};

module.exports = {
    createLaporanMobileCrane,
};