'use strict';

const PizZip = require('pizzip');
const Docxtemplater = require('docxtemplater');
const { storage, BUCKET_NAME } = require('../../../../../utils/storage');


// === FUNGSI HELPER BARU DITAMBAHKAN DI SINI ===
const formatDefleksiResult = (status) => {
    if (status === true) {
        return 'Memenuhi Syarat';
    }
    if (status === false) {
        return 'Tidak Memenuhi Syarat';
    }
    // Teks default jika datanya null atau undefined
    return '(Memenuhi Syarat / Tidak Memenuhi Syarat)';
};

// Helper functions to process inspection data safely
const getCheckmark = (status) => (status === true ? '√' : '');
const getOppositeCheckmark = (status) => (status === false ? '√' : '');
const getResult = (item) => (item ? item.result || '' : '');
const getStatus = (item) => (item ? item.status : null);

const createLaporanGantryCrane = async (data) => {
    const templatePath = 'paa/gantryCrane/laporanGantryCrane.docx';

    let content;
    try {
        [content] = await storage.bucket(BUCKET_NAME).file(templatePath).download();
    } catch (error) {
        console.error('Gagal mengunduh template Laporan Gantry Crane:', error);
        throw new Error('Template dokumen Laporan Gantry Crane tidak dapat diakses.');
    }

    const zip = new PizZip(content);
    const doc = new Docxtemplater(zip, { paragraphLoop: true, linebreaks: true, nullGetter: () => "" });

    // Destrukturisasi data untuk kemudahan akses
    const g = data.generalData || {};
    const t = data.technicalData || {};
    const vi = data.visualInspection || {};
    const ndt = data.ndt || {};
    const dyn = data.dynamicTesting || {};
    const stat = data.staticTesting || {};
    const fas = vi.foundationAndStructure || {};
    const mar = vi.mechanismAndRail || {};
    const gat = vi.girderAndTrolley || {};
    const tm = vi.trolleyMechanism || {};
    const le = vi.liftingEquipment || {};
    const cs = vi.controlAndSafetySystem || {};

    // Objek renderData dengan semua variabel yang ditulis secara eksplisit
    const renderData = {
        // Data Utama (Root Level)
        examinationType: data.examinationType || '',
        inspectionType: data.inspectionType || '',
        equipmentType: data.equipmentType || '',
        subInspectionType: data.subInspectionType || '',

        // General Data
        companyName: g.companyName || '',
        companyLocation: g.companyLocation || '',
        usageLocation: g.usageLocation || '',
        location: g.location || '',
        manufacturerHoist: g.manufacturerHoist || '',
        manufacturerStructure: g.manufacturerStructure || '',
        brandOrType: g.brandOrType || '',
        manufactureYear: g.manufactureYear || '',
        serialNumber: g.serialNumber || '',
        maxLiftingCapacityKg: g.maxLiftingCapacityKg || '',
        usagePermitNumber: g.usagePermitNumber || '',
        operatorcertificateStatus: g.operatorcertificateStatus || '',
        technicalDataManualStatus: g.technicalDataManualStatus || '',
        inspectionDate: g.inspectionDate || '',

        // Technical Data
        liftHeight: t.liftHeight || '',
        girderLength: t.girderLength || '',
        hoistingSpeed: t.hoistingSpeed || '',
        travelingSpeed: t.travelingSpeed || '',
        traversingSpeed: t.traversingSpeed || '',
        driveMotorcapacity: t.driveMotorcapacity || '',
        hoistingpowerKw: t.hoistingpowerKw || '',
        travelingpowerKw: t.travelingpowerKw || '',
        traversingpowerKw: t.traversingpowerKw || '',
        hoistingtype: t.hoistingtype || '',
        travelingtype: t.travelingtype || '',
        traversingtype: t.traversingtype || '',
        hoistingrpm: t.hoistingrpm || '',
        travelingrpm: t.travelingrpm || '',
        traversingrpm: t.traversingrpm || '',
        hoistingvoltageV: t.hoistingvoltageV || '',
        travelingvoltageV: t.travelingvoltageV || '',
        traversingvoltageV: t.traversingvoltageV || '',
        hoistingcurrentA: t.hoistingcurrentA || '',
        travelingcurrentA: t.travelingcurrentA || '',
        traversingcurrentA: t.traversingcurrentA || '',
        hoistingfrequencyHz: t.hoistingfrequencyHz || '',
        travelingfrequencyHz: t.travelingfrequencyHz || '',
        traversingfrequencyHz: t.traversingfrequencyHz || '',
        hoistingphase: t.hoistingphase || '',
        travelingphase: t.travelingphase || '',
        traversingphase: t.traversingphase || '',
        hoistingpowerSupply: t.hoistingpowerSupply || '',
        travelingpowerSupply: t.travelingpowerSupply || '',
        traversingpowerSupply: t.traversingpowerSupply || '',
        braketype: t.braketype || '',
        brakemodel: t.brakemodel || '',
        controlBrakehoistingtype: t.controlBrakehoistingtype || '',
        controlBraketravelingtype: t.controlBraketravelingtype || '',
        controlBraketraversingtype: t.controlBraketraversingtype || '',
        controlBrakehoistingmodel: t.controlBrakehoistingmodel || '',
        controlBraketravelingmodel: t.controlBraketravelingmodel || '',
        controlBraketraversingmodel: t.controlBraketraversingmodel || '',
        hookhoistingtype: t.hookhoistingtype || '',
        hooktravelingtype: t.hooktravelingtype || '',
        hooktraversingtype: t.hooktraversingtype || '',
        hookhoistingcapacity: t.hookhoistingcapacity || '',
        hooktravelingcapacity: t.hooktravelingcapacity || '',
        hooktraversingcapacity: t.hooktraversingcapacity || '',
        hookhoistingmaterial: t.hookhoistingmaterial || '',
        hooktravelingmaterial: t.hooktravelingmaterial || '',
        hooktraversingmaterial: t.hooktraversingmaterial || '',
        wireRopeOrChainmediumType: t.wireRopeOrChainmediumType || '',
        mediumTypehoistingtype: t.mediumTypehoistingtype || '',
        mediumTypetravelingtype: t.mediumTypetravelingtype || '',
        mediumTypetraversingtype: t.mediumTypetraversingtype || '',
        mediumTypehoistingconstruction: t.mediumTypehoistingconstruction || '',
        mediumTypetravelingconstruction: t.mediumTypetravelingconstruction || '',
        mediumTypetraversingconstruction: t.mediumTypetraversingconstruction || '',
        mediumTypehoistingdiameter: t.mediumTypehoistingdiameter || '',
        mediumTypetravelingdiameter: t.mediumTypetravelingdiameter || '',
        mediumTypetraversingdiameter: t.mediumTypetraversingdiameter || '',
        mediumTypehoistinglength: t.mediumTypehoistinglength || '',
        mediumTypetravelinglength: t.mediumTypetravelinglength || '',
        mediumTypetraversinglength: t.mediumTypetraversinglength || '',

        // Visual Inspection (Semua field ditulis lengkap)
        // Foundation and Structure
        anchorBoltscorrosionMemenuhi: getCheckmark(getStatus(fas.anchorBolts?.corrosion)),
        anchorBoltscorrosionTidakMemenuhi: getOppositeCheckmark(getStatus(fas.anchorBolts?.corrosion)),
        anchorBoltscorrosionResult: getResult(fas.anchorBolts?.corrosion),
        anchorBoltscracksMemenuhi: getCheckmark(getStatus(fas.anchorBolts?.cracks)),
        anchorBoltscracksTidakMemenuhi: getOppositeCheckmark(getStatus(fas.anchorBolts?.cracks)),
        anchorBoltscracksResult: getResult(fas.anchorBolts?.cracks),
        anchorBoltsdeformationMemenuhi: getCheckmark(getStatus(fas.anchorBolts?.deformation)),
        anchorBoltsdeformationTidakMemenuhi: getOppositeCheckmark(getStatus(fas.anchorBolts?.deformation)),
        anchorBoltsdeformationResult: getResult(fas.anchorBolts?.deformation),
        anchorBoltsfasteningMemenuhi: getCheckmark(getStatus(fas.anchorBolts?.fastening)),
        anchorBoltsfasteningTidakMemenuhi: getOppositeCheckmark(getStatus(fas.anchorBolts?.fastening)),
        anchorBoltsfasteningResult: getResult(fas.anchorBolts?.fastening),
        
        columnFramecorrosionMemenuhi: getCheckmark(getStatus(fas.columnFrame?.corrosion)),
        columnFramecorrosionTidakMemenuhi: getOppositeCheckmark(getStatus(fas.columnFrame?.corrosion)),
        columnFramecorrosionResult: getResult(fas.columnFrame?.corrosion),
        columnFramecracksMemenuhi: getCheckmark(getStatus(fas.columnFrame?.cracks)),
        columnFramecracksTidakMemenuhi: getOppositeCheckmark(getStatus(fas.columnFrame?.cracks)),
        columnFramecracksResult: getResult(fas.columnFrame?.cracks),
        columnFramedeformationMemenuhi: getCheckmark(getStatus(fas.columnFrame?.deformation)),
        columnFramedeformationTidakMemenuhi: getOppositeCheckmark(getStatus(fas.columnFrame?.deformation)),
        columnFramedeformationResult: getResult(fas.columnFrame?.deformation),
        columnFramefasteningMemenuhi: getCheckmark(getStatus(fas.columnFrame?.fastening)),
        columnFramefasteningTidakMemenuhi: getOppositeCheckmark(getStatus(fas.columnFrame?.fastening)),
        columnFramefasteningResult: getResult(fas.columnFrame?.fastening),
        columnFrametransverseReinforcementMemenuhi: getCheckmark(getStatus(fas.columnFrame?.transverseReinforcement)),
        columnFrametransverseReinforcementTidakMemenuhi: getOppositeCheckmark(getStatus(fas.columnFrame?.transverseReinforcement)),
        columnFrametransverseReinforcementResult: getResult(fas.columnFrame?.transverseReinforcement),
        columnFramediagonalReinforcementMemenuhi: getCheckmark(getStatus(fas.columnFrame?.diagonalReinforcement)),
        columnFramediagonalReinforcementTidakMemenuhi: getOppositeCheckmark(getStatus(fas.columnFrame?.diagonalReinforcement)),
        columnFramediagonalReinforcementResult: getResult(fas.columnFrame?.diagonalReinforcement),

        laddercorrosionMemenuhi: getCheckmark(getStatus(fas.ladder?.corrosion)),
        laddercorrosionTidakMemenuhi: getOppositeCheckmark(getStatus(fas.ladder?.corrosion)),
        laddercorrosionResult: getResult(fas.ladder?.corrosion),
        laddercracksMemenuhi: getCheckmark(getStatus(fas.ladder?.cracks)),
        laddercracksTidakMemenuhi: getOppositeCheckmark(getStatus(fas.ladder?.cracks)),
        laddercracksResult: getResult(fas.ladder?.cracks),
        ladderdeformationMemenuhi: getCheckmark(getStatus(fas.ladder?.deformation)),
        ladderdeformationTidakMemenuhi: getOppositeCheckmark(getStatus(fas.ladder?.deformation)),
        ladderdeformationResult: getResult(fas.ladder?.deformation),
        ladderfasteningMemenuhi: getCheckmark(getStatus(fas.ladder?.fastening)),
        ladderfasteningTidakMemenuhi: getOppositeCheckmark(getStatus(fas.ladder?.fastening)),
        ladderfasteningResult: getResult(fas.ladder?.fastening),

        workingFloorcorrosionMemenuhi: getCheckmark(getStatus(fas.workingFloor?.corrosion)),
        workingFloorcorrosionTidakMemenuhi: getOppositeCheckmark(getStatus(fas.workingFloor?.corrosion)),
        workingFloorcorrosionResult: getResult(fas.workingFloor?.corrosion),
        workingFloorcracksMemenuhi: getCheckmark(getStatus(fas.workingFloor?.cracks)),
        workingFloorcracksTidakMemenuhi: getOppositeCheckmark(getStatus(fas.workingFloor?.cracks)),
        workingFloorcracksResult: getResult(fas.workingFloor?.cracks),
        workingFloordeformationMemenuhi: getCheckmark(getStatus(fas.workingFloor?.deformation)),
        workingFloordeformationTidakMemenuhi: getOppositeCheckmark(getStatus(fas.workingFloor?.deformation)),
        workingFloordeformationResult: getResult(fas.workingFloor?.deformation),
        workingFloorfasteningMemenuhi: getCheckmark(getStatus(fas.workingFloor?.fastening)),
        workingFloorfasteningTidakMemenuhi: getOppositeCheckmark(getStatus(fas.workingFloor?.fastening)),
        workingFloorfasteningResult: getResult(fas.workingFloor?.fastening),
        
        // Mechanism and Rail
        railSupportBeamcorrosionMemenuhi: getCheckmark(getStatus(mar.railSupportBeam?.corrosion)),
        railSupportBeamcorrosionTidakMemenuhi: getOppositeCheckmark(getStatus(mar.railSupportBeam?.corrosion)),
        railSupportBeamcorrosionResult: getResult(mar.railSupportBeam?.corrosion),
        railSupportBeamcracksMemenuhi: getCheckmark(getStatus(mar.railSupportBeam?.cracks)),
        railSupportBeamcracksTidakMemenuhi: getOppositeCheckmark(getStatus(mar.railSupportBeam?.cracks)),
        railSupportBeamcracksResult: getResult(mar.railSupportBeam?.cracks),
        railSupportBeamdeformationMemenuhi: getCheckmark(getStatus(mar.railSupportBeam?.deformation)),
        railSupportBeamdeformationTidakMemenuhi: getOppositeCheckmark(getStatus(mar.railSupportBeam?.deformation)),
        railSupportBeamdeformationResult: getResult(mar.railSupportBeam?.deformation),
        railSupportBeamfasteningMemenuhi: getCheckmark(getStatus(mar.railSupportBeam?.fastening)),
        railSupportBeamfasteningTidakMemenuhi: getOppositeCheckmark(getStatus(mar.railSupportBeam?.fastening)),
        railSupportBeamfasteningResult: getResult(mar.railSupportBeam?.fastening),

        travelingRailcorrosionMemenuhi: getCheckmark(getStatus(mar.travelingRail?.corrosion)),
        travelingRailcracksTidakMemenuhi: getOppositeCheckmark(getStatus(mar.travelingRail?.corrosion)),
        travelingRailcracksResult: getResult(mar.travelingRail?.corrosion),
        travelingcracksMemenuhi: getCheckmark(getStatus(mar.travelingRail?.cracks)),
        travelingcracksTidakMemenuhi: getOppositeCheckmark(getStatus(mar.travelingRail?.cracks)),
        travelingcracksResult: getResult(mar.travelingRail?.cracks),
        travelingrailConnectionMemenuhi: getCheckmark(getStatus(mar.travelingRail?.railConnection)),
        travelingrailConnectionTidakMemenuhi: getOppositeCheckmark(getStatus(mar.travelingRail?.railConnection)),
        travelingrailConnectionResult: getResult(mar.travelingRail?.railConnection),
        travelingrailAlignmentMemenuhi: getCheckmark(getStatus(mar.travelingRail?.railAlignment)),
        travelingrailAlignmentTidakMemenuhi: getOppositeCheckmark(getStatus(mar.travelingRail?.railAlignment)),
        travelingrailAlignmentResult: getResult(mar.travelingRail?.railAlignment),
        travelinginterRailAlignmentMemenuhi: getCheckmark(getStatus(mar.travelingRail?.interRailAlignment)),
        travelinginterRailAlignmentTidakMemenuhi: getOppositeCheckmark(getStatus(mar.travelingRail?.interRailAlignment)),
        travelinginterRailAlignmentResult: getResult(mar.travelingRail?.interRailAlignment),
        travelinginterRailFlatnessMemenuhi: getCheckmark(getStatus(mar.travelingRail?.interRailFlatness)),
        travelinginterRailFlatnessTidakMemenuhi: getOppositeCheckmark(getStatus(mar.travelingRail?.interRailFlatness)),
        travelinginterRailFlatnessResult: getResult(mar.travelingRail?.interRailFlatness),
        travelingrailConnectionGapMemenuhi: getCheckmark(getStatus(mar.travelingRail?.railConnectionGap)),
        travelingrailConnectionGapTidakMemenuhi: getOppositeCheckmark(getStatus(mar.travelingRail?.railConnectionGap)),
        travelingrailConnectionGapResult: getResult(mar.travelingRail?.railConnectionGap),
        travelingrailFastenerMemenuhi: getCheckmark(getStatus(mar.travelingRail?.railFastener)),
        travelingrailFastenerTidakMemenuhi: getOppositeCheckmark(getStatus(mar.travelingRail?.railFastener)),
        travelingrailFastenerResult: getResult(mar.travelingRail?.railFastener),
        travelingrailStopperMemenuhi: getCheckmark(getStatus(mar.travelingRail?.railStopper)),
        travelingrailStopperTidakMemenuhi: getOppositeCheckmark(getStatus(mar.travelingRail?.railStopper)),
        travelingrailStopperResult: getResult(mar.travelingRail?.railStopper),

        traversingRailcorrosionMemenuhi: getCheckmark(getStatus(mar.traversingRail?.corrosion)),
        traversingRailcorrosionTidakMemenuhi: getOppositeCheckmark(getStatus(mar.traversingRail?.corrosion)),
        traversingRailcorrosionResult: getResult(mar.traversingRail?.corrosion),
        traversingRailcracksMemenuhi: getCheckmark(getStatus(mar.traversingRail?.cracks)),
        traversingRailcracksTidakMemenuhi: getOppositeCheckmark(getStatus(mar.traversingRail?.cracks)),
        traversingRailcracksResult: getResult(mar.traversingRail?.cracks),
        traversingRailrailConnectionMemenuhi: getCheckmark(getStatus(mar.traversingRail?.railConnection)),
        traversingRailrailConnectionTidakMemenuhi: getOppositeCheckmark(getStatus(mar.traversingRail?.railConnection)),
        traversingRailrailConnectionResult: getResult(mar.traversingRail?.railConnection),
        traversingRailrailAlignmentMemenuhi: getCheckmark(getStatus(mar.traversingRail?.railAlignment)),
        traversingRailrailAlignmentTidakMemenuhi: getOppositeCheckmark(getStatus(mar.traversingRail?.railAlignment)),
        traversingRailrailAlignmentResult: getResult(mar.traversingRail?.railAlignment),
        traversingRailinterRailAlignmentMemenuhi: getCheckmark(getStatus(mar.traversingRail?.interRailAlignment)),
        traversingRailinterRailAlignmentTidakMemenuhi: getOppositeCheckmark(getStatus(mar.traversingRail?.interRailAlignment)),
        traversingRailinterRailAlignmentResult: getResult(mar.traversingRail?.interRailAlignment),
        traversingRailinterRailFlatnessMemenuhi: getCheckmark(getStatus(mar.traversingRail?.interRailFlatness)),
        traversingRailinterRailFlatnessTidakMemenuhi: getOppositeCheckmark(getStatus(mar.traversingRail?.interRailFlatness)),
        traversingRailinterRailFlatnessResult: getResult(mar.traversingRail?.interRailFlatness),
        traversingRailrailConnectionGapMemenuhi: getCheckmark(getStatus(mar.traversingRail?.railConnectionGap)),
        traversingRailrailConnectionGapTidakMemenuhi: getOppositeCheckmark(getStatus(mar.traversingRail?.railConnectionGap)),
        traversingRailrailConnectionGapResult: getResult(mar.traversingRail?.railConnectionGap),
        traversingRailrailFastenerMemenuhi: getCheckmark(getStatus(mar.traversingRail?.railFastener)),
        traversingRailrailFastenerTidakMemenuhi: getOppositeCheckmark(getStatus(mar.traversingRail?.railFastener)),
        traversingRailrailFastenerResult: getResult(mar.traversingRail?.railFastener),
        traversingRailrailStopperMemenuhi: getCheckmark(getStatus(mar.traversingRail?.railStopper)),
        traversingRailrailStopperTidakMemenuhi: getOppositeCheckmark(getStatus(mar.traversingRail?.railStopper)),
        traversingRailrailStopperResult: getResult(mar.traversingRail?.railStopper),

        // Girder and Trolley
        girdercorrosionMemenuhi: getCheckmark(getStatus(gat.girder?.corrosion)),
        girdercorrosionTidakMemenuhi: getOppositeCheckmark(getStatus(gat.girder?.corrosion)),
        girdercorrosionResult: getResult(gat.girder?.corrosion),
        girdercracksMemenuhi: getCheckmark(getStatus(gat.girder?.cracks)),
        girdercracksTidakMemenuhi: getOppositeCheckmark(getStatus(gat.girder?.cracks)),
        girdercracksResult: getResult(gat.girder?.cracks),
        girdercamberMemenuhi: getCheckmark(getStatus(gat.girder?.camber)),
        girdercamberTidakMemenuhi: getOppositeCheckmark(getStatus(gat.girder?.camber)),
        girdercamberResult: getResult(gat.girder?.camber),
        girderConnectionMemenuhi: getCheckmark(getStatus(gat.girder?.connection)),
        girderConnectionTidakMemenuhi: getOppositeCheckmark(getStatus(gat.girder?.connection)),
        girderConnectionResult: getResult(gat.girder?.connection),
        girderendGirderConnectionMemenuhi: getCheckmark(getStatus(gat.girder?.endGirderConnection)),
        girderendGirderConnectionTidakMemenuhi: getOppositeCheckmark(getStatus(gat.girder?.endGirderConnection)),
        girderendGirderConnectionResult: getResult(gat.girder?.endGirderConnection),
        girdertruckMountingOnGirderMemenuhi: getCheckmark(getStatus(gat.girder?.truckMountingOnGirder)),
        girdertruckMountingOnGirderTidakMemenuhi: getOppositeCheckmark(getStatus(gat.girder?.truckMountingOnGirder)),
        girdertruckMountingOnGirderResult: getResult(gat.girder?.truckMountingOnGirder),

        travelingGearboxcorrosionMemenuhi: getCheckmark(getStatus(gat.travelingGearbox?.corrosion)),
        travelingGearboxcorrosionTidakMemenuhi: getOppositeCheckmark(getStatus(gat.travelingGearbox?.corrosion)),
        travelingGearboxcorrosionResult: getResult(gat.travelingGearbox?.corrosion),
        travelingGearboxcracksMemenuhi: getCheckmark(getStatus(gat.travelingGearbox?.cracks)),
        travelingGearboxcracksTidakMemenuhi: getOppositeCheckmark(getStatus(gat.travelingGearbox?.cracks)),
        travelingGearboxcracksResult: getResult(gat.travelingGearbox?.cracks),
        travelingGearboxlubricatingOilMemenuhi: getCheckmark(getStatus(gat.travelingGearbox?.lubricatingOil)),
        travelingGearboxlubricatingOilTidakMemenuhi: getOppositeCheckmark(getStatus(gat.travelingGearbox?.lubricatingOil)),
        travelingGearboxlubricatingOilResult: getResult(gat.travelingGearbox?.lubricatingOil),
        travelingGearboxoilSealMemenuhi: getCheckmark(getStatus(gat.travelingGearbox?.oilSeal)),
        travelingGearboxoilSealTidakMemenuhi: getOppositeCheckmark(getStatus(gat.travelingGearbox?.oilSeal)),
        travelingGearboxoilSealResult: getResult(gat.travelingGearbox?.oilSeal),

        driveWheelswearMemenuhi: getCheckmark(getStatus(gat.driveWheels?.wear)),
        driveWheelswearTidakMemenuhi: getOppositeCheckmark(getStatus(gat.driveWheels?.wear)),
        driveWheelswearResult: getResult(gat.driveWheels?.wear),
        driveWheelscracksMemenuhi: getCheckmark(getStatus(gat.driveWheels?.cracks)),
        driveWheelscracksTidakMemenuhi: getOppositeCheckmark(getStatus(gat.driveWheels?.cracks)),
        driveWheelscracksResult: getResult(gat.driveWheels?.cracks),
        driveWheelsdeformationMemenuhi: getCheckmark(getStatus(gat.driveWheels?.deformation)),
        driveWheelsdeformationTidakMemenuhi: getOppositeCheckmark(getStatus(gat.driveWheels?.deformation)),
        driveWheelsdeformationResult: getResult(gat.driveWheels?.deformation),
        driveWheelsflangeConditionMemenuhi: getCheckmark(getStatus(gat.driveWheels?.flangeCondition)),
        driveWheelsflangeConditionTidakMemenuhi: getOppositeCheckmark(getStatus(gat.driveWheels?.flangeCondition)),
        driveWheelsflangeConditionResult: getResult(gat.driveWheels?.flangeCondition),
        driveWheelschainConditionMemenuhi: getCheckmark(getStatus(gat.driveWheels?.chainCondition)),
        driveWheelschainConditionTidakMemenuhi: getOppositeCheckmark(getStatus(gat.driveWheels?.chainCondition)),
        driveWheelschainConditionResult: getResult(gat.driveWheels?.chainCondition),

        idleWheelssafetyMemenuhi: getCheckmark(getStatus(gat.idleWheels?.safety)),
        idleWheelssafetyTidakMemenuhi: getOppositeCheckmark(getStatus(gat.idleWheels?.safety)),
        idleWheelssafetyResult: getResult(gat.idleWheels?.safety),
        idleWheelscracksMemenuhi: getCheckmark(getStatus(gat.idleWheels?.cracks)),
        idleWheelscracksTidakMemenuhi: getOppositeCheckmark(getStatus(gat.idleWheels?.cracks)),
        idleWheelscracksResult: getResult(gat.idleWheels?.cracks),
        idleWheelsdeformationMemenuhi: getCheckmark(getStatus(gat.idleWheels?.deformation)),
        idleWheelsdeformationTidakMemenuhi: getOppositeCheckmark(getStatus(gat.idleWheels?.deformation)),
        idleWheelsdeformationResult: getResult(gat.idleWheels?.deformation),
        idleWheelsflangeConditionMemenuhi: getCheckmark(getStatus(gat.idleWheels?.flangeCondition)),
        idleWheelsflangeConditionTidakMemenuhi: getOppositeCheckmark(getStatus(gat.idleWheels?.flangeCondition)),
        idleWheelsflangeConditionResult: getResult(gat.idleWheels?.flangeCondition),

        wheelConnectoralignmentMemenuhi: getCheckmark(getStatus(gat.wheelConnector?.alignment)),
        wheelConnectoralignmentTidakMemenuhi: getOppositeCheckmark(getStatus(gat.wheelConnector?.alignment)),
        wheelConnectoralignmentResult: getResult(gat.wheelConnector?.alignment),
        wheelConnectorcrossJointMemenuhi: getCheckmark(getStatus(gat.wheelConnector?.crossJoint)),
        wheelConnectorcrossJointTidakMemenuhi: getOppositeCheckmark(getStatus(gat.wheelConnector?.crossJoint)),
        wheelConnectorcrossJointResult: getResult(gat.wheelConnector?.crossJoint),
        wheelConnectorlubricationMemenuhi: getCheckmark(getStatus(gat.wheelConnector?.lubrication)),
        wheelConnectorlubricationTidakMemenuhi: getOppositeCheckmark(getStatus(gat.wheelConnector?.lubrication)),
        wheelConnectorlubricationResult: getResult(gat.wheelConnector?.lubrication),

        girderStopperconditionMemenuhi: getCheckmark(getStatus(gat.girderStopper?.condition)),
        girderStopperconditionTidakMemenuhi: getOppositeCheckmark(getStatus(gat.girderStopper?.condition)),
        girderStopperconditionResult: getResult(gat.girderStopper?.condition),
        girderStopperreinforcementMemenuhi: getCheckmark(getStatus(gat.girderStopper?.reinforcement)),
        girderStopperreinforcementTidakMemenuhi: getOppositeCheckmark(getStatus(gat.girderStopper?.reinforcement)),
        girderStopperreinforcementResult: getResult(gat.girderStopper?.reinforcement),
        
        // Trolley Mechanism
        trolleyTraversingGearboxfasteningMemenuhi: getCheckmark(getStatus(tm.trolleyTraversingGearbox?.fastening)),
        trolleyTraversingGearboxfasteningTidakMemenuhi: getOppositeCheckmark(getStatus(tm.trolleyTraversingGearbox?.fastening)),
        trolleyTraversingGearboxfasteningResult: getResult(tm.trolleyTraversingGearbox?.fastening),
        trolleyTraversingGearboxcorrosionMemenuhi: getCheckmark(getStatus(tm.trolleyTraversingGearbox?.corrosion)),
        trolleyTraversingGearboxcorrosionTidakMemenuhi: getOppositeCheckmark(getStatus(tm.trolleyTraversingGearbox?.corrosion)),
        trolleyTraversingGearboxcorrosionResult: getResult(tm.trolleyTraversingGearbox?.corrosion),
        trolleyTraversingGearboxcracksMemenuhi: getCheckmark(getStatus(tm.trolleyTraversingGearbox?.cracks)),
        trolleyTraversingGearboxcracksTidakMemenuhi: getOppositeCheckmark(getStatus(tm.trolleyTraversingGearbox?.cracks)),
        trolleyTraversingGearboxcracksResult: getResult(tm.trolleyTraversingGearbox?.cracks),
        trolleyTraversingGearboxlubricatingOilMemenuhi: getCheckmark(getStatus(tm.trolleyTraversingGearbox?.lubricatingOil)),
        trolleyTraversingGearboxlubricatingOilTidakMemenuhi: getOppositeCheckmark(getStatus(tm.trolleyTraversingGearbox?.lubricatingOil)),
        trolleyTraversingGearboxlubricatingOilResult: getResult(tm.trolleyTraversingGearbox?.lubricatingOil),
        trolleyTraversingGearboxoilSealMemenuhi: getCheckmark(getStatus(tm.trolleyTraversingGearbox?.oilSeal)),
        trolleyTraversingGearboxoilSealTidakMemenuhi: getOppositeCheckmark(getStatus(tm.trolleyTraversingGearbox?.oilSeal)),
        trolleyTraversingGearboxoilSealResult: getResult(tm.trolleyTraversingGearbox?.oilSeal),

        trolleyDriveWheelswearMemenuhi: getCheckmark(getStatus(tm.trolleyDriveWheels?.wear)),
        trolleyDriveWheelswearTidakMemenuhi: getOppositeCheckmark(getStatus(tm.trolleyDriveWheels?.wear)),
        trolleyDriveWheelswearResult: getResult(tm.trolleyDriveWheels?.wear),
        trolleyDriveWheelscracksMemenuhi: getCheckmark(getStatus(tm.trolleyDriveWheels?.cracks)),
        trolleyDriveWheelscracksTidakMemenuhi: getOppositeCheckmark(getStatus(tm.trolleyDriveWheels?.cracks)),
        trolleyDriveWheelscracksResult: getResult(tm.trolleyDriveWheels?.cracks),
        trolleyDriveWheelsdeformationMemenuhi: getCheckmark(getStatus(tm.trolleyDriveWheels?.deformation)),
        trolleyDriveWheelsdeformationTidakMemenuhi: getOppositeCheckmark(getStatus(tm.trolleyDriveWheels?.deformation)),
        trolleyDriveWheelsdeformationResult: getResult(tm.trolleyDriveWheels?.deformation),
        trolleyDriveWheelsflangeConditionMemenuhi: getCheckmark(getStatus(tm.trolleyDriveWheels?.flangeCondition)),
        trolleyDriveWheelsflangeConditionTidakMemenuhi: getOppositeCheckmark(getStatus(tm.trolleyDriveWheels?.flangeCondition)),
        trolleyDriveWheelsflangeConditionResult: getResult(tm.trolleyDriveWheels?.flangeCondition),
        trolleyDriveWheelschainConditionMemenuhi: getCheckmark(getStatus(tm.trolleyDriveWheels?.chainCondition)),
        trolleyDriveWheelschainConditionTidakMemenuhi: getOppositeCheckmark(getStatus(tm.trolleyDriveWheels?.chainCondition)),
        trolleyDriveWheelschainConditionResult: getResult(tm.trolleyDriveWheels?.chainCondition),

        trolleyIdleWheelswearMemenuhi: getCheckmark(getStatus(tm.trolleyIdleWheels?.wear)),
        trolleyIdleWheelswearTidakMemenuhi: getOppositeCheckmark(getStatus(tm.trolleyIdleWheels?.wear)),
        trolleyIdleWheelswearResult: getResult(tm.trolleyIdleWheels?.wear),
        trolleyIdleWheelscracksMemenuhi: getCheckmark(getStatus(tm.trolleyIdleWheels?.cracks)),
        trolleyIdleWheelscracksTidakMemenuhi: getOppositeCheckmark(getStatus(tm.trolleyIdleWheels?.cracks)),
        trolleyIdleWheelscracksResult: getResult(tm.trolleyIdleWheels?.cracks),
        trolleyIdleWheelsdeformationMemenuhi: getCheckmark(getStatus(tm.trolleyIdleWheels?.deformation)),
        trolleyIdleWheelsdeformationTidakMemenuhi: getOppositeCheckmark(getStatus(tm.trolleyIdleWheels?.deformation)),
        trolleyIdleWheelsdeformationResult: getResult(tm.trolleyIdleWheels?.deformation),
        trolleyIdleWheelsflangeConditionMemenuhi: getCheckmark(getStatus(tm.trolleyIdleWheels?.flangeCondition)),
        trolleyIdleWheelsflangeConditionTidakMemenuhi: getOppositeCheckmark(getStatus(tm.trolleyIdleWheels?.flangeCondition)),
        trolleyIdleWheelsflangeConditionResult: getResult(tm.trolleyIdleWheels?.flangeCondition),

        trolleyWheelConnectoralignmentMemenuhi: getCheckmark(getStatus(tm.trolleyWheelConnector?.alignment)),
        trolleyWheelConnectoralignmentTidakMemenuhi: getOppositeCheckmark(getStatus(tm.trolleyWheelConnector?.alignment)),
        trolleyWheelConnectoralignmentResult: getResult(tm.trolleyWheelConnector?.alignment),
        trolleyWheelConnectorcrossJointMemenuhi: getCheckmark(getStatus(tm.trolleyWheelConnector?.crossJoint)),
        trolleyWheelConnectorcrossJointTidakMemenuhi: getOppositeCheckmark(getStatus(tm.trolleyWheelConnector?.crossJoint)),
        trolleyWheelConnectorcrossJointResult: getResult(tm.trolleyWheelConnector?.crossJoint),
        trolleyWheelConnectorlubricationMemenuhi: getCheckmark(getStatus(tm.trolleyWheelConnector?.lubrication)),
        trolleyWheelConnectorlubricationTidakMemenuhi: getOppositeCheckmark(getStatus(tm.trolleyWheelConnector?.lubrication)),
        trolleyWheelConnectorlubricationResult: getResult(tm.trolleyWheelConnector?.lubrication),

        trolleyGirderStopperconditionMemenuhi: getCheckmark(getStatus(tm.trolleyGirderStopper?.condition)),
        trolleyGirderStopperconditionTidakMemenuhi: getOppositeCheckmark(getStatus(tm.trolleyGirderStopper?.condition)),
        trolleyGirderStopperconditionResult: getResult(tm.trolleyGirderStopper?.condition),
        trolleyGirderStopperreinforcementMemenuhi: getCheckmark(getStatus(tm.trolleyGirderStopper?.reinforcement)),
        trolleyGirderStopperreinforcementTidakMemenuhi: getOppositeCheckmark(getStatus(tm.trolleyGirderStopper?.reinforcement)),
        trolleyGirderStopperreinforcementResult: getResult(tm.trolleyGirderStopper?.reinforcement),
        
        // Lifting Equipment
        windingDrumgrooveMemenuhi: getCheckmark(getStatus(le.windingDrum?.groove)),
        windingDrumgrooveTidakMemenuhi: getOppositeCheckmark(getStatus(le.windingDrum?.groove)),
        windingDrumgrooveResult: getResult(le.windingDrum?.groove),
        windingDrumgrooveLipMemenuhi: getCheckmark(getStatus(le.windingDrum?.grooveLip)),
        windingDrumgrooveLipTidakMemenuhi: getOppositeCheckmark(getStatus(le.windingDrum?.grooveLip)),
        windingDrumgrooveLipResult: getResult(le.windingDrum?.grooveLip),
        windingDrumflangesMemenuhi: getCheckmark(getStatus(le.windingDrum?.flanges)),
        windingDrumflangesTidakMemenuhi: getOppositeCheckmark(getStatus(le.windingDrum?.flanges)),
        windingDrumflangesResult: getResult(le.windingDrum?.flanges),

        visualBrakeInspectionwearMemenuhi: getCheckmark(getStatus(le.visualBrakeInspection?.wear)),
        visualBrakeInspectionwearTidakMemenuhi: getOppositeCheckmark(getStatus(le.visualBrakeInspection?.wear)),
        visualBrakeInspectionwearResult: getResult(le.visualBrakeInspection?.wear),
        visualBrakeInspectionadjustmentMemenuhi: getCheckmark(getStatus(le.visualBrakeInspection?.adjustment)),
        visualBrakeInspectionadjustmentTidakMemenuhi: getOppositeCheckmark(getStatus(le.visualBrakeInspection?.adjustment)),
        visualBrakeInspectionadjustmentResult: getResult(le.visualBrakeInspection?.adjustment),

        hoistGearboxlubricationMemenuhi: getCheckmark(getStatus(le.hoistGearbox?.lubrication)),
        hoistGearboxlubricationTidakMemenuhi: getOppositeCheckmark(getStatus(le.hoistGearbox?.lubrication)),
        hoistGearboxlubricationResult: getResult(le.hoistGearbox?.lubrication),
        hoistGearboxoilSealMemenuhi: getCheckmark(getStatus(le.hoistGearbox?.oilSeal)),
        hoistGearboxoilSealTidakMemenuhi: getOppositeCheckmark(getStatus(le.hoistGearbox?.oilSeal)),
        hoistGearboxoilSealResult: getResult(le.hoistGearbox?.oilSeal),

        pulleySprocketpulleyGrooveMemenuhi: getCheckmark(getStatus(le.pulleySprocket?.pulleyGroove)),
        pulleySprocketpulleyGrooveTidakMemenuhi: getOppositeCheckmark(getStatus(le.pulleySprocket?.pulleyGroove)),
        pulleySprocketpulleyGrooveResult: getResult(le.pulleySprocket?.pulleyGroove),
        pulleySprocketpulleyLipMemenuhi: getCheckmark(getStatus(le.pulleySprocket?.pulleyLip)),
        pulleySprocketpulleyLipTidakMemenuhi: getOppositeCheckmark(getStatus(le.pulleySprocket?.pulleyLip)),
        pulleySprocketpulleyLipResult: getResult(le.pulleySprocket?.pulleyLip),
        pulleySprocketpulleyPinMemenuhi: getCheckmark(getStatus(le.pulleySprocket?.pulleyPin)),
        pulleySprocketpulleyPinTidakMemenuhi: getOppositeCheckmark(getStatus(le.pulleySprocket?.pulleyPin)),
        pulleySprocketpulleyPinResult: getResult(le.pulleySprocket?.pulleyPin),
        pulleySprocketbearingMemenuhi: getCheckmark(getStatus(le.pulleySprocket?.bearing)),
        pulleySprocketbearingTidakMemenuhi: getOppositeCheckmark(getStatus(le.pulleySprocket?.bearing)),
        pulleySprocketbearingResult: getResult(le.pulleySprocket?.bearing),
        pulleySprocketpulleyGuardMemenuhi: getCheckmark(getStatus(le.pulleySprocket?.pulleyGuard)),
        pulleySprocketpulleyGuardTidakMemenuhi: getOppositeCheckmark(getStatus(le.pulleySprocket?.pulleyGuard)),
        pulleySprocketpulleyGuardResult: getResult(le.pulleySprocket?.pulleyGuard),
        pulleySprocketropeChainGuardMemenuhi: getCheckmark(getStatus(le.pulleySprocket?.ropeChainGuard)),
        pulleySprocketropeChainGuardTidakMemenuhi: getOppositeCheckmark(getStatus(le.pulleySprocket?.ropeChainGuard)),
        pulleySprocketropeChainGuardResult: getResult(le.pulleySprocket?.ropeChainGuard),

        mainHookInspectionwearMemenuhi: getCheckmark(getStatus(le.mainHook?.wear)),
        mainHookInspectionwearTidakMemenuhi: getOppositeCheckmark(getStatus(le.mainHook?.wear)),
        mainHookInspectionwearResult: getResult(le.mainHook?.wear),
        mainHookInspectionhookOpeningGapMemenuhi: getCheckmark(getStatus(le.mainHook?.hookOpeningGap)),
        mainHookInspectionhookOpeningGapTidakMemenuhi: getOppositeCheckmark(getStatus(le.mainHook?.hookOpeningGap)),
        mainHookInspectionhookOpeningGapResult: getResult(le.mainHook?.hookOpeningGap),
        mainHookInspectionswivelNutAndBearingMemenuhi: getCheckmark(getStatus(le.mainHook?.swivelNutAndBearing)),
        mainHookInspectionswivelNutAndBearingTidakMemenuhi: getOppositeCheckmark(getStatus(le.mainHook?.swivelNutAndBearing)),
        mainHookInspectionswivelNutAndBearingResult: getResult(le.mainHook?.swivelNutAndBearing),
        mainHookInspectiontrunnionMemenuhi: getCheckmark(getStatus(le.mainHook?.trunnion)),
        mainHookInspectiontrunnionTidakMemenuhi: getOppositeCheckmark(getStatus(le.mainHook?.trunnion)),
        mainHookInspectiontrunnionResult: getResult(le.mainHook?.trunnion),

        auxiliaryHookInspectionwearMemenuhi: getCheckmark(getStatus(le.auxiliaryHook?.wear)),
        auxiliaryHookInspectionwearTidakMemenuhi: getOppositeCheckmark(getStatus(le.auxiliaryHook?.wear)),
        auxiliaryHookInspectionwearResult: getResult(le.auxiliaryHook?.wear),
        auxiliaryHookInspectionhookOpeningGapMemenuhi: getCheckmark(getStatus(le.auxiliaryHook?.hookOpeningGap)),
        auxiliaryHookInspectionhookOpeningGapTidakMemenuhi: getOppositeCheckmark(getStatus(le.auxiliaryHook?.hookOpeningGap)),
        auxiliaryHookInspectionhookOpeningGapResult: getResult(le.auxiliaryHook?.hookOpeningGap),
        auxiliaryHookInspectionswivelNutAndBearingMemenuhi: getCheckmark(getStatus(le.auxiliaryHook?.swivelNutAndBearing)),
        auxiliaryHookInspectionswivelNutAndBearingTidakMemenuhi: getOppositeCheckmark(getStatus(le.auxiliaryHook?.swivelNutAndBearing)),
        auxiliaryHookInspectionswivelNutAndBearingResult: getResult(le.auxiliaryHook?.swivelNutAndBearing),
        auxiliaryHookInspectiontrunnionMemenuhi: getCheckmark(getStatus(le.auxiliaryHook?.trunnion)),
        auxiliaryHookInspectiontrunnionTidakMemenuhi: getOppositeCheckmark(getStatus(le.auxiliaryHook?.trunnion)),
        auxiliaryHookInspectiontrunnionResult: getResult(le.auxiliaryHook?.trunnion),

        mainWireRopeInspectioncorrosionMemenuhi: getCheckmark(getStatus(le.mainWireRope?.corrosion)),
        mainWireRopeInspectioncorrosionTidakMemenuhi: getOppositeCheckmark(getStatus(le.mainWireRope?.corrosion)),
        mainWireRopeInspectioncorrosionResult: getResult(le.mainWireRope?.corrosion),
        mainWireRopeInspectionwearMemenuhi: getCheckmark(getStatus(le.mainWireRope?.wear)),
        mainWireRopeInspectionwearTidakMemenuhi: getOppositeCheckmark(getStatus(le.mainWireRope?.wear)),
        mainWireRopeInspectionwearResult: getResult(le.mainWireRope?.wear),
        mainWireRopeInspectionbreakageMemenuhi: getCheckmark(getStatus(le.mainWireRope?.breakage)),
        mainWireRopeInspectionbreakageTidakMemenuhi: getOppositeCheckmark(getStatus(le.mainWireRope?.breakage)),
        mainWireRopeInspectionbreakageResult: getResult(le.mainWireRope?.breakage),
        mainWireRopeInspectiondeformationMemenuhi: getCheckmark(getStatus(le.mainWireRope?.deformation)),
        mainWireRopeInspectiondeformationTidakMemenuhi: getOppositeCheckmark(getStatus(le.mainWireRope?.deformation)),
        mainWireRopeInspectiondeformationResult: getResult(le.mainWireRope?.deformation),

        auxiliaryWireRopeInspectioncorrosionMemenuhi: getCheckmark(getStatus(le.auxiliaryWireRope?.corrosion)),
        auxiliaryWireRopeInspectioncorrosionTidakMemenuhi: getOppositeCheckmark(getStatus(le.auxiliaryWireRope?.corrosion)),
        auxiliaryWireRopeInspectioncorrosionResult: getResult(le.auxiliaryWireRope?.corrosion),
        auxiliaryWireRopeInspectionwearMemenuhi: getCheckmark(getStatus(le.auxiliaryWireRope?.wear)),
        auxiliaryWireRopeInspectionwearTidakMemenuhi: getOppositeCheckmark(getStatus(le.auxiliaryWireRope?.wear)),
        auxiliaryWireRopeInspectionwearResult: getResult(le.auxiliaryWireRope?.wear),
        auxiliaryWireRopeInspectionbreakageMemenuhi: getCheckmark(getStatus(le.auxiliaryWireRope?.breakage)),
        auxiliaryWireRopeInspectionbreakageTidakMemenuhi: getOppositeCheckmark(getStatus(le.auxiliaryWireRope?.breakage)),
        auxiliaryWireRopeInspectionbreakageResult: getResult(le.auxiliaryWireRope?.breakage),
        auxiliaryWireRopeInspectiondeformationMemenuhi: getCheckmark(getStatus(le.auxiliaryWireRope?.deformation)),
        auxiliaryWireRopeInspectiondeformationTidakMemenuhi: getOppositeCheckmark(getStatus(le.auxiliaryWireRope?.deformation)),
        auxiliaryWireRopeInspectiondeformationResult: getResult(le.auxiliaryWireRope?.deformation),

        mainChainInspectioncorrosionMemenuhi: getCheckmark(getStatus(le.mainChain?.corrosion)),
        mainChainInspectioncorrosionTidakMemenuhi: getOppositeCheckmark(getStatus(le.mainChain?.corrosion)),
        mainChainInspectioncorrosionResult: getResult(le.mainChain?.corrosion),
        mainChainInspectionwearMemenuhi: getCheckmark(getStatus(le.mainChain?.wear)),
        mainChainInspectionwearTidakMemenuhi: getOppositeCheckmark(getStatus(le.mainChain?.wear)),
        mainChainInspectionwearResult: getResult(le.mainChain?.wear),
        mainChainInspectioncrackOrBreakageMemenuhi: getCheckmark(getStatus(le.mainChain?.crackOrBreakage)),
        mainChainInspectioncrackOrBreakageTidakMemenuhi: getOppositeCheckmark(getStatus(le.mainChain?.crackOrBreakage)),
        mainChainInspectioncrackOrBreakageResult: getResult(le.mainChain?.crackOrBreakage),
        mainChainInspectiondeformationMemenuhi: getCheckmark(getStatus(le.mainChain?.deformation)),
        mainChainInspectiondeformationTidakMemenuhi: getOppositeCheckmark(getStatus(le.mainChain?.deformation)),
        mainChainInspectiondeformationResult: getResult(le.mainChain?.deformation),

        auxiliaryChainInspectioncorrosionMemenuhi: getCheckmark(getStatus(le.auxiliaryChain?.corrosion)),
        auxiliaryChainInspectioncorrosionTidakMemenuhi: getOppositeCheckmark(getStatus(le.auxiliaryChain?.corrosion)),
        auxiliaryChainInspectioncorrosionResult: getResult(le.auxiliaryChain?.corrosion),
        auxiliaryChainInspectionwearMemenuhi: getCheckmark(getStatus(le.auxiliaryChain?.wear)),
        auxiliaryChainInspectionwearTidakMemenuhi: getOppositeCheckmark(getStatus(le.auxiliaryChain?.wear)),
        auxiliaryChainInspectionwearResult: getResult(le.auxiliaryChain?.wear),
        auxiliaryChainInspectioncrackOrBreakageMemenuhi: getCheckmark(getStatus(le.auxiliaryChain?.crackOrBreakage)),
        auxiliaryChainInspectioncrackOrBreakageTidakMemenuhi: getOppositeCheckmark(getStatus(le.auxiliaryChain?.crackOrBreakage)),
        auxiliaryChainInspectioncrackOrBreakageResult: getResult(le.auxiliaryChain?.crackOrBreakage),
        auxiliaryChainInspectiondeformationMemenuhi: getCheckmark(getStatus(le.auxiliaryChain?.deformation)),
        auxiliaryChainInspectiondeformationTidakMemenuhi: getOppositeCheckmark(getStatus(le.auxiliaryChain?.deformation)),
        auxiliaryChainInspectiondeformationResult: getResult(le.auxiliaryChain?.deformation),

        // Control and Safety System
        limitSwitchlongTravelMemenuhi: getCheckmark(getStatus(cs.limitSwitch?.longTravel)),
        limitSwitchlongTravelTidakMemenuhi: getOppositeCheckmark(getStatus(cs.limitSwitch?.longTravel)),
        limitSwitchlongTravelResult: getResult(cs.limitSwitch?.longTravel),
        limitSwitchcrossTravelMemenuhi: getCheckmark(getStatus(cs.limitSwitch?.crossTravel)),
        limitSwitchcrossTravelTidakMemenuhi: getOppositeCheckmark(getStatus(cs.limitSwitch?.crossTravel)),
        limitSwitchcrossTravelResult: getResult(cs.limitSwitch?.crossTravel),
        limitSwitchhoistMemenuhi: getCheckmark(getStatus(cs.limitSwitch?.hoist)),
        limitSwitchhoistTidakMemenuhi: getOppositeCheckmark(getStatus(cs.limitSwitch?.hoist)),
        limitSwitchhoistResult: getResult(cs.limitSwitch?.hoist),

        operatorCabinsafetyLadderMemenuhi: getCheckmark(getStatus(cs.operatorCabin?.safetyLadder)),
        operatorCabinsafetyLadderTidakMemenuhi: getOppositeCheckmark(getStatus(cs.operatorCabin?.safetyLadder)),
        operatorCabinsafetyLadderResult: getResult(cs.operatorCabin?.safetyLadder),
        operatorCabindoorMemenuhi: getCheckmark(getStatus(cs.operatorCabin?.door)),
        operatorCabindoorTidakMemenuhi: getOppositeCheckmark(getStatus(cs.operatorCabin?.door)),
        operatorCabindoorResult: getResult(cs.operatorCabin?.door),
        operatorCabinwindowMemenuhi: getCheckmark(getStatus(cs.operatorCabin?.window)),
        operatorCabinwindowTidakMemenuhi: getOppositeCheckmark(getStatus(cs.operatorCabin?.window)),
        operatorCabinwindowResult: getResult(cs.operatorCabin?.window),
        operatorCabinfanOrACMemenuhi: getCheckmark(getStatus(cs.operatorCabin?.fanOrAC)),
        operatorCabinfanOrACTidakMemenuhi: getOppositeCheckmark(getStatus(cs.operatorCabin?.fanOrAC)),
        operatorCabinfanOrACResult: getResult(cs.operatorCabin?.fanOrAC),
        operatorCabincontrolLeversOrButtonsMemenuhi: getCheckmark(getStatus(cs.operatorCabin?.controlLeversOrButtons)),
        operatorCabincontrolLeversOrButtonsTidakMemenuhi: getOppositeCheckmark(getStatus(cs.operatorCabin?.controlLeversOrButtons)),
        operatorCabincontrolLeversOrButtonsResult: getResult(cs.operatorCabin?.controlLeversOrButtons),
        operatorCabinpendantControlMemenuhi: getCheckmark(getStatus(cs.operatorCabin?.pendantControl)),
        operatorCabinpendantControlTidakMemenuhi: getOppositeCheckmark(getStatus(cs.operatorCabin?.pendantControl)),
        operatorCabinpendantControlResult: getResult(cs.operatorCabin?.pendantControl),
        operatorCabinlightingMemenuhi: getCheckmark(getStatus(cs.operatorCabin?.lighting)),
        operatorCabinlightingTidakMemenuhi: getOppositeCheckmark(getStatus(cs.operatorCabin?.lighting)),
        operatorCabinlightingResult: getResult(cs.operatorCabin?.lighting),
        operatorCabinhornMemenuhi: getCheckmark(getStatus(cs.operatorCabin?.horn)),
        operatorCabinhornTidakMemenuhi: getOppositeCheckmark(getStatus(cs.operatorCabin?.horn)),
        operatorCabinhornResult: getResult(cs.operatorCabin?.horn),
        operatorCabinfuseProtectionMemenuhi: getCheckmark(getStatus(cs.operatorCabin?.fuseProtection)),
        operatorCabinfuseProtectionTidakMemenuhi: getOppositeCheckmark(getStatus(cs.operatorCabin?.fuseProtection)),
        operatorCabinfuseProtectionResult: getResult(cs.operatorCabin?.fuseProtection),
        operatorCabincommunicationDeviceMemenuhi: getCheckmark(getStatus(cs.operatorCabin?.communicationDevice)),
        operatorCabincommunicationDeviceTidakMemenuhi: getOppositeCheckmark(getStatus(cs.operatorCabin?.communicationDevice)),
        operatorCabincommunicationDeviceResult: getResult(cs.operatorCabin?.communicationDevice),
        operatorCabinfireExtinguisherMemenuhi: getCheckmark(getStatus(cs.operatorCabin?.fireExtinguisher)),
        operatorCabinfireExtinguisherTidakMemenuhi: getOppositeCheckmark(getStatus(cs.operatorCabin?.fireExtinguisher)),
        operatorCabinfireExtinguisherResult: getResult(cs.operatorCabin?.fireExtinguisher),
        operatorCabinoperationalSignsMemenuhi: getCheckmark(getStatus(cs.operatorCabin?.operationalSigns)),
        operatorCabinoperationalSignsTidakMemenuhi: getOppositeCheckmark(getStatus(cs.operatorCabin?.operationalSigns)),
        operatorCabinoperationalSignsResult: getResult(cs.operatorCabin?.operationalSigns),
        operatorCabinignitionOrMasterSwitchMemenuhi: getCheckmark(getStatus(cs.operatorCabin?.ignitionOrMasterSwitch)),
        operatorCabinignitionOrMasterSwitchTidakMemenuhi: getOppositeCheckmark(getStatus(cs.operatorCabin?.ignitionOrMasterSwitch)),
        operatorCabinignitionOrMasterSwitchResult: getResult(cs.operatorCabin?.ignitionOrMasterSwitch),

        electricalComponentspanelConductorConnectorMemenuhi: getCheckmark(getStatus(cs.electricalComponents?.panelConductorConnector)),
        electricalComponentspanelConductorConnectorTidakMemenuhi: getOppositeCheckmark(getStatus(cs.electricalComponents?.panelConductorConnector)),
        electricalComponentspanelConductorConnectorResult: getResult(cs.electricalComponents?.panelConductorConnector),
        electricalComponentsconductorProtectionMemenuhi: getCheckmark(getStatus(cs.electricalComponents?.conductorProtection)),
        electricalComponentsconductorProtectionTidakMemenuhi: getOppositeCheckmark(getStatus(cs.electricalComponents?.conductorProtection)),
        electricalComponentsconductorProtectionResult: getResult(cs.electricalComponents?.conductorProtection),
        electricalComponentsmotorInstallationSafetySystemMemenuhi: getCheckmark(getStatus(cs.electricalComponents?.motorInstallationSafetySystem)),
        electricalComponentsmotorInstallationSafetySystemTidakMemenuhi: getOppositeCheckmark(getStatus(cs.electricalComponents?.motorInstallationSafetySystem)),
        electricalComponentsmotorInstallationSafetySystemResult: getResult(cs.electricalComponents?.motorInstallationSafetySystem),
        electricalComponentsgroundingSystemMemenuhi: getCheckmark(getStatus(cs.electricalComponents?.groundingSystem)),
        electricalComponentsgroundingSystemTidakMemenuhi: getOppositeCheckmark(getStatus(cs.electricalComponents?.groundingSystem)),
        electricalComponentsgroundingSystemResult: getResult(cs.electricalComponents?.groundingSystem),
        electricalComponentsinstallationMemenuhi: getCheckmark(getStatus(cs.electricalComponents?.installation)),
        electricalComponentsinstallationTidakMemenuhi: getOppositeCheckmark(getStatus(cs.electricalComponents?.installation)),
        electricalComponentsinstallationResult: getResult(cs.electricalComponents?.installation),


        // NDT (Non-Destructive Testing)
        wireropeMethod: ndt.wireropeMethod,
        wireropeItems: (ndt.wireropeNumber || []).map(item => ({
            wireropeUsed: item.wireropeUsed,
            dimensionSpec: item.dimensionSpec,
            dimensionResult: item.dimensionResult,
            construction: item.construction,
            type: item.type,
            length: item.length,
            age: item.age,
            defectAda: getCheckmark(item.defectAda),
            defectTidakAda: getOppositeCheckmark(item.defectAda),
            description: item.description,
        })),
        HookspecA: ndt.HookspecA || '',
        HookspecB: ndt.HookspecB || '',
        HookspecC: ndt.HookspecC || '',
        HookspecD: ndt.HookspecD || '',
        HookspecE: ndt.HookspecE || '',
        HookspecF: ndt.HookspecF || '',
        HookspecG: ndt.HookspecG || '',
        HookspecH: ndt.HookspecH || '',
        HookspecBaik: getCheckmark(ndt.HookspecBaik),
        HookspecTidakBaik: getOppositeCheckmark(ndt.HookspecBaik),
        HookspecDesc: ndt.HookspecDesc || '',
        measurementResultsA: ndt.measurementResultsA || '',
        measurementResultsB: ndt.measurementResultsB || '',
        measurementResultsC: ndt.measurementResultsC || '',
        measurementResultsD: ndt.measurementResultsD || '',
        measurementResultsE: ndt.measurementResultsE || '',
        measurementResultsF: ndt.measurementResultsF || '',
        measurementResultsG: ndt.measurementResultsG || '',
        measurementResultsH: ndt.measurementResultsH || '',
        measurementResultsBaik: getCheckmark(ndt.measurementResultsBaik),
        measurementResultsTidakBaik: getOppositeCheckmark(ndt.measurementResultsBaik),
        measurementResultsDesc: ndt.measurementResultsDesc || '',
        toleranceA: ndt.toleranceA || '',
        toleranceB: ndt.toleranceB || '',
        toleranceC: ndt.toleranceC || '',
        toleranceD: ndt.toleranceD || '',
        toleranceE: ndt.toleranceE || '',
        toleranceF: ndt.toleranceF || '',
        toleranceG: ndt.toleranceG || '',
        toleranceH: ndt.toleranceH || '',
        toleranceBaik: getCheckmark(ndt.toleranceBaik),
        toleranceTidakBaik: getOppositeCheckmark(ndt.toleranceBaik),
        toleranceDesc: ndt.toleranceDesc || '',
        griderMethod: ndt.griderMethod,
        girderItems: (ndt.griderNumber || []).map(item => ({
            griderLocation: item.griderLocation,
            griderAda: getCheckmark(item.griderAda),
            griderTidakAda: getOppositeCheckmark(item.griderAda),
            griderDesc: item.griderDesc,
        })),

        // Dynamic Testing
        travellingStatus: dyn.travellingStatus || '',
        travellingDesc: dyn.travellingDesc || '',
        traversingStatus: dyn.traversingStatus || '',
        traversingDesc: dyn.traversingDesc || '',
        hoistingStatus: dyn.hoistingStatus || '',
        hoistingDesc: dyn.hoistingDesc || '',
        safetyDeviceStatus: dyn.safetyDeviceStatus || '',
        safetyDeviceDesc: dyn.safetyDeviceDesc || '',
        brakeSwitchStatus: dyn.brakeSwitchStatus || '',
        brakeSwitchDesc: dyn.brakeSwitchDesc || '',
        brakeLockingStatus: dyn.brakeLockingStatus || '',
        brakeLockingDesc: dyn.brakeLockingDesc || '',
        instalasionElectricStatus: dyn.instalasionElectricStatus || '',
        instalasionElectricDesc: dyn.instalasionElectricDesc || '',
        hoist25: dyn.hoist25 || '',
        travesing25: dyn.travesing25 || '',
        travelling25: dyn.travelling25 || '',
        brakeSystem25: dyn.brakeSystem25 || '',
        desc25: dyn.desc25 || '',
        hoist50: dyn.hoist50 || '',
        travesing50: dyn.travesing50 || '',
        travelling50: dyn.travelling50 || '',
        brakeSystem50: dyn.brakeSystem50 || '',
        desc50: dyn.desc50 || '',
        hoist75: dyn.hoist75 || '',
        travesing75: dyn.travesing75 || '',
        travelling75: dyn.travelling75 || '',
        brakeSystem75: dyn.brakeSystem75 || '',
        desc75: dyn.desc75 || '',
        hoist100: dyn.hoist100 || '',
        travesing100: dyn.travesing100 || '',
        travelling100: dyn.travelling100 || '',
        brakeSystem100: dyn.brakeSystem100 || '',
        desc100: dyn.desc100 || '',

        // Static Testing
        loadTest: stat.loadTest || '',
        basedDesign: stat.basedDesign || '',
        lengthSpan: stat.lengthSpan || '',
        xspan: stat.xspan || '',
        resultDefleksi: formatDefleksiResult(stat.resultDefleksi),
        defleksiItems: (stat.defleksiPosision || []).map(item => ({
            defleksiPosision: item.defleksiPosision,
            defleksiMeasuraments: item.defleksiMeasuraments,
            defleksiStandard: item.defleksiStandard,
            defleksiDesc: item.defleksiDesc,
        })),

        // Conclusion & Recommendation
        conclusion: data.conclusion || '',
        recomendation: data.recomendation || '',
    };

    try {
        doc.render(renderData);
    } catch (error) {
        console.error("GAGAL RENDER DOKUMEN:", error.message);
        const e = {
            message: error.message,
            name: error.name,
            stack: error.stack,
            properties: error.properties,
        };
        console.log(JSON.stringify({ error: e }));
        throw error;
    }

    const docxBuffer = doc.getZip().generate({ type: 'nodebuffer', compression: 'DEFLATE' });
    const ownerName = (g.companyName || 'Tidak Ada Nama Perusahaan').replace(/[^\w.-]/g, '_');
    const fileName = `Laporan Gantry Crane-${ownerName}-${data.id}.docx`;

    return { docxBuffer, fileName };
};

module.exports = {
    createLaporanGantryCrane,
};